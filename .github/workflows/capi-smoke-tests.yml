name: Smoke tests

on:
  workflow_call:
    inputs:
      smoke-suite:
        required: true
        type: string
      k0s-version:
        required: false
        type: string

jobs:
  capi-smokes:
    name: "${{ inputs.smoke-suite }} :: ${{ inputs.k0s-version }}"
    runs-on: oracle-vm-16cpu-64gb-x86-64

    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod

      - name: Download image bundle
        uses: actions/download-artifact@v5
        with:
          name: k0smotron-image-bundle

      - name: Load k0smotron image bundle
        run: |
          docker load -i k0smotron-image-bundle.tar

      - name: Download kind
        uses: supplypike/setup-bin@v4
        with:
          name: kind
          version: v0.27.0
          uri: https://github.com/kubernetes-sigs/kind/releases/download/v0.24.0/kind-linux-amd64

      - name: Install support-bundle
        run: |
          curl --proto '=https' --tlsv1.2 -L https://github.com/replicatedhq/troubleshoot/releases/download/v0.107.0/support-bundle_linux_amd64.tar.gz \
          | tar xzO support-bundle >/usr/local/bin/kubectl-supportbundle \
          && chmod +x /usr/local/bin/kubectl-supportbundle

      - name: Setup KinD cluster
        run: |
          kind create cluster --config config/samples/capi/docker/kind.yaml

      - name: Load k0smotron image to KinD
        run: |
          kind load image-archive k0smotron-image-bundle.tar

      - name: Download clusterctl
        uses: supplypike/setup-bin@v4
        with:
          name: clusterctl
          version: v1.4.3
          uri: https://github.com/kubernetes-sigs/cluster-api/releases/download/v1.4.3/clusterctl-linux-amd64

      - name: Download cluster-api components
        uses: actions/download-artifact@v5
        with:
          name: cluster-api-components
          path: .

      - name: Install cluster api components
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          export CLUSTERCTL_REPOSITORY_PATH="$GITHUB_WORKSPACE"
          CLUSTER_TOPOLOGY=true clusterctl init --control-plane k0sproject-k0smotron --bootstrap k0sproject-k0smotron --infrastructure k0sproject-k0smotron,docker --config ./hack/capi-ci/config.yaml
          kubectl wait --for=condition=available -n cert-manager deployment/cert-manager-webhook --timeout=300s

      - name: Install PVC provider
        run: |
          kubectl apply -f https://raw.githubusercontent.com/rancher/local-path-provisioner/v0.0.24/deploy/local-path-storage.yaml

      - name: Download install manifest for k0smotron standalone
        uses: actions/download-artifact@v5
        with:
          name: install-standalone-yaml

      - name: Run inttest for CAPI with docker provider
        run: |
          kind get kubeconfig > kind.conf
          export KUBECONFIG=$(realpath kind.conf)
          docker system prune -f
          make -C inttest ${{ inputs.smoke-suite }} K0S_VERSION=${{ inputs.k0s-version }} KEEP_AFTER_TESTS=true

      - name: Get k0smotron logs
        if: failure()
        run: |
          kubectl logs -n k0smotron deploy/k0smotron-controller-manager-bootstrap > /tmp/${{ inputs.smoke-suite }}-k0smotron-bootstrap.log
          kubectl logs -n k0smotron deploy/k0smotron-controller-manager-control-plane > /tmp/${{ inputs.smoke-suite }}-k0smotron-control-plane.log
          kubectl logs -n k0smotron deploy/k0smotron-controller-manager-infrastructure > /tmp/${{ inputs.smoke-suite }}-k0smotron-infrastructure.log

      - name: Collect support bundle
        if: failure()
        run: |
          pwd
          kubectl-supportbundle --debug --interactive=false --output="/tmp/${{ inputs.smoke-suite }}-support-bundle.tar.gz" inttest/support-bundle.yaml 1>&2

      - name: Docker dump
        if: failure()
        run: |
          docker ps -a > /tmp/${{ inputs.smoke-suite }}-docker-ps.log
          docker images > /tmp/${{ inputs.smoke-suite }}-docker-images.log
          docker info > /tmp/${{ inputs.smoke-suite }}-docker-info.log

      - name: Collect k0s logs and support bundle
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: smoketests-${{ inputs.smoke-suite }}-files
          path: |
            /tmp/${{ inputs.smoke-suite }}-k0smotron-*.log
            /tmp/${{ inputs.smoke-suite }}-support-bundle.tar.gz
            /tmp/${{ inputs.smoke-suite }}-docker-*.log

