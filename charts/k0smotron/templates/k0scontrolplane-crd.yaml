apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: k0scontrolplanes.controlplane.cluster.x-k8s.io
  annotations:
    cert-manager.io/inject-ca-from: '{{ .Release.Namespace }}/{{ include "k0smotron.fullname"
      . }}-serving-cert'
    controller-gen.kubebuilder.io/version: v0.14.0
  labels:
    cluster.x-k8s.io/provider: control-plane-k0smotron
    cluster.x-k8s.io/v1beta1: v1beta1
  {{- include "k0smotron.labels" . | nindent 4 }}
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: '{{ include "k0smotron.fullname" . }}-webhook-service'
          namespace: '{{ .Release.Namespace }}'
          path: /convert
      conversionReviewVersions:
      - v1beta1
  group: controlplane.cluster.x-k8s.io
  names:
    kind: K0sControlPlane
    listKind: K0sControlPlaneList
    plural: k0scontrolplanes
    singular: k0scontrolplane
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Cluster
      jsonPath: .metadata.labels['cluster\.x-k8s\.io/cluster-name']
      name: Cluster
      type: string
    - description: This denotes that the target API Server is ready to receive requests
      jsonPath: .status.ready
      name: API Server Available
      type: boolean
    - description: Total number of machines desired by this control plane
      jsonPath: .spec.replicas
      name: Desired
      priority: 10
      type: integer
    - description: Total number of non-terminated machines targeted by this control
        plane
      jsonPath: .status.replicas
      name: Replicas
      type: integer
    - description: Total number of fully running and ready control plane instances
      jsonPath: .status.readyReplicas
      name: Ready
      type: integer
    - description: Total number of non-terminated machines targeted by this control
        plane that have the desired template spec
      jsonPath: .status.updatedReplicas
      name: Updated
      type: integer
    - description: Total number of unavailable control plane instances targeted by this
        control plane
      jsonPath: .status.unavailableReplicas
      name: Unavailable
      type: integer
    - description: Time duration since creation of K0sControlPlane
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - description: Kubernetes version associated with this control plane
      jsonPath: .spec.version
      name: Version
      type: string
    name: v1beta1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            properties:
              k0sConfigSpec:
                properties:
                  args:
                    description: |-
                      Args specifies extra arguments to be passed to k0s controller.
                      See: https://docs.k0sproject.io/stable/cli/k0s_controller/
                    items:
                      type: string
                    type: array
                  customUserDataRef:
                    description: |-
                      CustomUserDataRef is a reference to a secret or a configmap that contains the custom user data.
                      Provided user-data will be merged with the one generated by k0smotron. Note that you may want to specify the merge type.
                      See: https://cloudinit.readthedocs.io/en/latest/reference/merging.html
                    properties:
                      configMapRef:
                        description: ConfigMapRef is a reference to a configmap that
                          contains the content.
                        properties:
                          key:
                            description: Key is the key in the source that contains
                              the content
                            type: string
                          name:
                            description: Name is the name of the source
                            type: string
                        required:
                        - key
                        - name
                        type: object
                      secretRef:
                        description: SecretRef is a reference to a secret that contains
                          the content.
                        properties:
                          key:
                            description: Key is the key in the source that contains
                              the content
                            type: string
                          name:
                            description: Name is the name of the source
                            type: string
                        required:
                        - key
                        - name
                        type: object
                    type: object
                  downloadURL:
                    description: |-
                      DownloadURL specifies the URL from which to download the k0s binary.
                      If the version field is specified, it is ignored, and whatever version is downloaded from the URL is used.
                    type: string
                  files:
                    description: Files specifies extra files to be passed to user_data
                      upon creation.
                    items:
                      description: File defines a file to be passed to user_data upon
                        creation.
                      properties:
                        content:
                          type: string
                        contentFrom:
                          description: ContentFrom specifies the source of the content.
                          properties:
                            configMapRef:
                              description: ConfigMapRef is a reference to a configmap
                                that contains the content.
                              properties:
                                key:
                                  description: Key is the key in the source that contains
                                    the content
                                  type: string
                                name:
                                  description: Name is the name of the source
                                  type: string
                              required:
                              - key
                              - name
                              type: object
                            secretRef:
                              description: SecretRef is a reference to a secret that
                                contains the content.
                              properties:
                                key:
                                  description: Key is the key in the source that contains
                                    the content
                                  type: string
                                name:
                                  description: Name is the name of the source
                                  type: string
                              required:
                              - key
                              - name
                              type: object
                          type: object
                        path:
                          type: string
                        permissions:
                          type: string
                      type: object
                    type: array
                  k0s:
                    description: |-
                      K0s defines the k0s configuration. Note, that some fields will be overwritten by k0smotron.
                      If empty, will be used default configuration. @see https://docs.k0sproject.io/stable/configuration/
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                  postStartCommands:
                    description: PostStartCommands specifies commands to be run after
                      starting k0s worker.
                    items:
                      type: string
                    type: array
                  preInstalledK0s:
                    description: PreInstallK0s specifies whether k0s binary is pre-installed
                      on the node.
                    type: boolean
                  preStartCommands:
                    description: PreStartCommands specifies commands to be run before
                      starting k0s worker.
                    items:
                      type: string
                    type: array
                  tunneling:
                    description: Tunneling defines the tunneling configuration for the
                      cluster.
                    properties:
                      enabled:
                        default: false
                        description: Enabled specifies whether tunneling is enabled.
                        type: boolean
                      mode:
                        default: tunnel
                        description: |-
                          Mode describes tunneling mode.
                          If empty, k0smotron will use the default one.
                        enum:
                        - tunnel
                        - proxy
                        type: string
                      serverAddress:
                        description: |-
                          Server address of the tunneling server.
                          If empty, k0smotron will try to detect worker node address for.
                        type: string
                      serverNodePort:
                        default: 31700
                        description: |-
                          NodePort to publish for server port of the tunneling server.
                          If empty, k0smotron will use the default one.
                        format: int32
                        type: integer
                      tunnelingNodePort:
                        default: 31443
                        description: |-
                          NodePort to publish for tunneling port.
                          If empty, k0smotron will use the default one.
                        format: int32
                        type: integer
                    type: object
                  useSystemHostname:
                    default: false
                    description: |-
                      UseSystemHostname specifies whether to use the system hostname for the kubernetes node name.
                      By default, k0smotron will use Machine name as a node name. If true, it will pick it from `hostname` command output.
                    type: boolean
                type: object
              machineTemplate:
                properties:
                  infrastructureRef:
                    description: |-
                      InfrastructureRef is a required reference to a custom resource
                      offered by an infrastructure provider.
                    properties:
                      apiVersion:
                        description: API version of the referent.
                        type: string
                      fieldPath:
                        description: |-
                          If referring to a piece of an object instead of an entire object, this string
                          should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                          For example, if the object reference is to a container within a pod, this would take on a value like:
                          "spec.containers{name}" (where "name" refers to the name of the container that triggered
                          the event) or if no container name is specified "spec.containers[2]" (container with
                          index 2 in this pod). This syntax is chosen only to have some well-defined way of
                          referencing a part of an object.
                          TODO: this design is not final and this field is subject to change in the future.
                        type: string
                      kind:
                        description: |-
                          Kind of the referent.
                          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                        type: string
                      name:
                        description: |-
                          Name of the referent.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        type: string
                      namespace:
                        description: |-
                          Namespace of the referent.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                        type: string
                      resourceVersion:
                        description: |-
                          Specific resourceVersion to which this reference is made, if any.
                          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                        type: string
                      uid:
                        description: |-
                          UID of the referent.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                  metadata:
                    description: |-
                      Standard object's metadata.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations is an unstructured key value map stored with a resource that may be
                          set by external tools to store and retrieve arbitrary metadata. They are not
                          queryable and should be preserved when modifying objects.
                          More info: http://kubernetes.io/docs/user-guide/annotations
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Map of string keys and values that can be used to organize and categorize
                          (scope and select) objects. May match selectors of replication controllers
                          and services.
                          More info: http://kubernetes.io/docs/user-guide/labels
                        type: object
                    type: object
                  nodeDeletionTimeout:
                    description: |-
                      NodeDeletionTimeout defines how long the machine controller will attempt to delete the Node that the Machine
                      hosts after the Machine is marked for deletion. A duration of 0 will retry deletion indefinitely.
                      If no value is provided, the default value for this property of the Machine resource will be used.
                    type: string
                  nodeDrainTimeout:
                    description: |-
                      NodeDrainTimeout is the total amount of time that the controller will spend on draining a controlplane node
                      The default value is 0, meaning that the node can be drained without any time limitations.
                      NOTE: NodeDrainTimeout is different from `kubectl drain --timeout`
                    type: string
                  nodeVolumeDetachTimeout:
                    description: |-
                      NodeVolumeDetachTimeout is the total amount of time that the controller will spend on waiting for all volumes
                      to be detached. The default value is 0, meaning that the volumes can be detached without any time limitations.
                    type: string
                required:
                - infrastructureRef
                type: object
              replicas:
                default: 1
                format: int32
                type: integer
              updateStrategy:
                default: InPlace
                description: UpdateStrategy defines the strategy to use when updating
                  the control plane.
                enum:
                - InPlace
                - Recreate
                type: string
              version:
                description: |-
                  Version defines the k0s version to be deployed. You can use a specific k0s version (e.g. v1.27.1+k0s.0) or
                  just the Kubernetes version (e.g. v1.27.1). If left empty, k0smotron will select one automatically.
                type: string
            required:
            - k0sConfigSpec
            - machineTemplate
            type: object
          status:
            properties:
              conditions:
                description: Conditions defines current service state of the K0sControlPlane.
                items:
                  description: Condition defines an observation of a Cluster API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: |-
                        Last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed. If that is not known, then using the time when
                        the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A human readable message indicating details about the transition.
                        This field may be empty.
                      type: string
                    reason:
                      description: |-
                        The reason for the condition's last transition in CamelCase.
                        The specific API may choose whether or not this field is considered a guaranteed API.
                        This field may not be empty.
                      type: string
                    severity:
                      description: |-
                        Severity provides an explicit classification of Reason code, so the users or machines can immediately
                        understand the current situation and act accordingly.
                        The Severity field MUST be set only when Status=False.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: |-
                        Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions
                        can be useful (see .node.status.conditions), the ability to deconflict is important.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              externalManagedControlPlane:
                description: externalManagedControlPlane is a bool that should be set
                  to true if the Node objects do not exist in the cluster.
                type: boolean
              initialized:
                description: |-
                  initialized denotes that the KubeadmControlPlane API Server is initialized and thus
                  it can accept requests.
                  NOTE: this field is part of the Cluster API contract and it is used to orchestrate provisioning.
                  The value of this field is never updated after provisioning is completed. Please use conditions
                  to check the operational state of the control plane.
                type: boolean
              ready:
                description: Ready denotes that the control plane is ready
                type: boolean
              readyReplicas:
                description: readyReplicas is the total number of fully running and
                  ready control plane machines.
                format: int32
                type: integer
              replicas:
                description: |-
                  replicas is the total number of non-terminated machines targeted by this control plane
                  (their labels match the selector).
                format: int32
                type: integer
              selector:
                description: |-
                  selector is the label selector in string format to avoid introspection
                  by clients, and is used to provide the CRD-based integration for the
                  scale subresource and additional integrations for things like kubectl
                  describe.. The string will be in the same format as the query-param syntax.
                  More info about label selectors: http://kubernetes.io/docs/user-guide/labels#label-selectors
                type: string
              unavailableReplicas:
                description: |-
                  unavailableReplicas is the total number of unavailable machines targeted by this control plane.
                  This is the total number of machines that are still required for
                  the deployment to have 100% available capacity. They may either
                  be machines that are running but not yet ready or machines
                  that still have not been created.
                format: int32
                type: integer
              updatedReplicas:
                description: |-
                  updatedReplicas is the total number of non-terminated machines targeted by this control plane
                  that have the desired template spec.
                format: int32
                type: integer
              version:
                description: |-
                  version represents the minimum Kubernetes version for the control plane machines
                  in the cluster.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      scale:
        labelSelectorPath: .status.selector
        specReplicasPath: .spec.replicas
        statusReplicasPath: .status.replicas
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []