{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"k0smotron - The Kubernetes control plane manager","text":"<p>From pets to cattle: Streamline your Kubernetes control plane management with k0smotron</p> <p>Powered by k0s</p>"},{"location":"#features","title":"Features","text":""},{"location":"#kubernetes-in-kubernetes","title":"Kubernetes-in-Kubernetes","text":"<p>k0smotron allows you to easily create and manage the clusters in an existing Kubernetes cluster. This allows unparalled scalability and flexibility when you have to work with many clusters. It allows truly homogenous setup for all control planes and thus eases the maintenance burden.</p>"},{"location":"#true-control-and-worker-plane-separation","title":"True control and worker plane separation","text":"<p>Using k0smotron the clusters controlplane and workerplane are truly separated. The controlplane, running on an existing cluster has no direct networking connection to the workerplane. This is similar pattern how all the major cloud providers separate the control and worker planes on the managed clusters.</p>"},{"location":"#bring-your-own-workers","title":"Bring your own workers","text":"<p>With k0smotron you can connect worker nodes from ANY infrastructure to your cluster control plane. </p>"},{"location":"#how-does-it-work","title":"How does it work","text":"<p>You install k0smotron operator into an existing Kubernetes cluster. k0smotron operator will create and manage k0s control planes in that cluster. It leverages the natural pattern of working with custom resources to manage the lifecycle of the k0s control planes. k0smotron will automatically create all the needed Kubernetes lower level constructs, such as pods, configmaps etc., to run and manage the control planes.</p> <p>k0smotron is an Kubernetes operator designed to manage the lifecycle of k0s control planes in a Kubernetes (any distro) cluster. By running the control plane on a k8s cluster we can enjoy and leverage the high availability and auto-healing functionalities of the underlying cluster, a.k.a Mothership.</p> <p></p>"},{"location":"#use-cases","title":"Use cases","text":""},{"location":"#cicd","title":"CI/CD","text":"<p>Often when running integration and end-to-end testing for your software running in Kubernetes you need somewhat temporary clusters in CI. Why not leverage the true flexibility and create those clusters on-demand using k0smotron. Creating a controlplane is as easy as creating a custom resource, so is the deletion of it. No more long living snowflake clusters for CI purposes.</p>"},{"location":"#edge","title":"Edge","text":"<p>Running Kubernetes on the network edge usually means running in low resource infrastructure. What this often means is that setting up the controlplane is either a challenge or a mission impossible. Running the controlplane on a existing cluster, on a separate dedicated infrastructure, removes that challenge and let's you focus on the real edge. </p> <p>Running on the edge often also means large number of clusters to manage. Do you really want to dedicate nodes for each cluster controlplane and manage all the infrastructure for those?</p>"},{"location":"#multi-cloud","title":"Multi-cloud","text":"<p>With k0smotron you can run your control plane management cluster (a.k.a Mothership) in one cloud provider and the workloads in various other cloud providers. This allows you to build and maintain a very streamlined approach to multi cloud.</p>"},{"location":"capi-aws-vm/","title":"Cluster API - AWS on ec2 instances","text":"<p>This example demonstrates how k0smotron can be used with CAPA (Cluster API Provider Amazon Web Services) to deploy a cluster with hosted control plane and workers in AWS.</p>"},{"location":"capi-aws-vm/#prerequisites","title":"Prerequisites","text":"<p>Before starting this example, ensure that you have met the general prerequisites. In addition to those, you should also have appropriate AWS credentials available and the AWS CLI configured on your local machine.</p>"},{"location":"capi-aws-vm/#prepare-the-aws-infra-provider","title":"Prepare the AWS infra provider","text":"<p>Before launching a cluster, it's crucial to set up your infrastructure provider. Each provider has its unique prerequisites and configuration steps.</p> <p>Follow the AWS Provider installation guide for detailed steps.</p>"},{"location":"capi-aws-vm/#creating-a-child-cluster","title":"Creating a child cluster","text":"<p>Once all the controllers are up and running, you can apply the cluster manifests containing the specifications of the cluster you want to provision.</p> <p>AWS limits userdata to 16kb</p> <p>AWS has a limit of 16kb for userdata. As k0smotron generates certificates and other files it might reach the limit, so you may need to compress it. This can be done by setting <code>AWSMachineTemplate.spec.template.spec.uncompressedUserData</code> to <code>false</code> in the AWSMachineTemplate manifest.</p> <p>Here is an example:</p> <pre><code>apiVersion: cluster.x-k8s.io/v1beta1\nkind: Cluster\nmetadata:\n  name: aws-test-cluster\n  namespace: default\nspec:\n  clusterNetwork:\n    pods:\n      cidrBlocks:\n        - 192.168.0.0/16\n    serviceDomain: cluster.local\n    services:\n      cidrBlocks:\n        - 10.128.0.0/12\n  controlPlaneRef:\n    apiVersion: controlplane.cluster.x-k8s.io/v1beta1\n    kind: K0sControlPlane\n    name: aws-test\n  infrastructureRef:\n    apiVersion: infrastructure.cluster.x-k8s.io/v1beta2\n    kind: AWSCluster\n    name: k0s-aws-test\n---\napiVersion: infrastructure.cluster.x-k8s.io/v1beta2\nkind: AWSMachineTemplate\nmetadata:\n  name: k0s-aws-test-mt\n  namespace: default\nspec:\n  template:\n    spec:\n      uncompressedUserData: false\n      ami:\n        # Replace with your AMI ID\n        id: ami-046da914e42bb0388 # Ubuntu 22.04 in eu-west-1\n      instanceType: t3.large\n      iamInstanceProfile: nodes.cluster-api-provider-aws.sigs.k8s.io # Instance Profile created by `clusterawsadm bootstrap iam create-cloudformation-stack`\n      cloudInit:\n        # Makes CAPA use k0s bootstrap cloud-init directly and not via SSM\n        # Simplifies the VPC setup as we do not need custom SSM endpoints etc.\n        insecureSkipSecretsManager: true\n      sshKeyName: &lt;your-ssh-key-name&gt;\n---\napiVersion: controlplane.cluster.x-k8s.io/v1beta1\nkind: K0sControlPlane\nmetadata:\n  name: aws-test\nspec:\n  replicas: 3\n  version: v1.33.2+k0s.0\n  updateStrategy: Recreate\n  k0sConfigSpec:\n    args:\n      - --enable-worker\n    k0s:\n      apiVersion: k0s.k0sproject.io/v1beta1\n      kind: ClusterConfig\n      metadata:\n        name: k0s\n      spec:\n        api:\n          extraArgs:\n            anonymous-auth: \"true\"\n        telemetry:\n          enabled: false\n  machineTemplate:\n    infrastructureRef:\n      apiVersion: infrastructure.cluster.x-k8s.io/v1beta2\n      kind: AWSMachineTemplate\n      name: k0s-aws-test-mt\n      namespace: default\n---\napiVersion: infrastructure.cluster.x-k8s.io/v1beta2\nkind: AWSCluster\nmetadata:\n  name: k0s-aws-test\n  namespace: default\nspec:\n  region: eu-west-1\n  sshKeyName: &lt;your-ssh-key-name&gt;\n  controlPlaneLoadBalancer:\n    healthCheckProtocol: TCP\n  network:\n    additionalControlPlaneIngressRules:\n      - description: \"k0s controller join API\"\n        protocol: tcp\n        fromPort: 9443\n        toPort: 9443\n---\napiVersion: cluster.x-k8s.io/v1beta1\nkind: MachineDeployment\nmetadata:\n  name: k0s-aws-test-md\n  namespace: default\nspec:\n  clusterName: aws-test-cluster\n  replicas: 1\n  selector:\n    matchLabels:\n      cluster.x-k8s.io/cluster-name: aws-test-cluster\n      pool: worker-pool-1\n  template:\n    metadata:\n      labels:\n        cluster.x-k8s.io/cluster-name: aws-test-cluster\n        pool: worker-pool-1\n    spec:\n      clusterName: aws-test-cluster\n      failureDomain: eu-west-1\n      bootstrap:\n        configRef: # This triggers our controller to create cloud-init secret\n          apiVersion: bootstrap.cluster.x-k8s.io/v1beta1\n          kind: K0sWorkerConfigTemplate\n          name: k0s-aws-test-machine-config\n      infrastructureRef:\n        apiVersion: infrastructure.cluster.x-k8s.io/v1beta2\n        kind: AWSMachineTemplate\n        name: k0s-aws-test-mt\n---\napiVersion: bootstrap.cluster.x-k8s.io/v1beta1\nkind: K0sWorkerConfigTemplate\nmetadata:\n  name: k0s-aws-test-machine-config\nspec:\n  template:\n    spec:\n      version: v1.33.2+k0s.0\n</code></pre> <pre><code>% kubectl get cluster,machine\nNAME                                        CLUSTERCLASS   PHASE         AGE   VERSION\ncluster.cluster.x-k8s.io/aws-test-cluster                  Provisioned   24h\n\nNAME                                     CLUSTER            NODENAME        PROVIDERID                              PHASE      AGE    VERSION\nmachine.cluster.x-k8s.io/aws-test-0      aws-test-cluster   aws-test-0      aws:///eu-west-1c/i-04ea1b27f52210bec   Running    24h    v1.33.2+k0s.0\nmachine.cluster.x-k8s.io/aws-test-1      aws-test-cluster   aws-test-1      aws:///eu-west-1a/i-0c34ca4e0450acd64   Running    23h    v1.33.2+k0s.0\nmachine.cluster.x-k8s.io/aws-test-2      aws-test-cluster   aws-test-2      aws:///eu-west-1b/i-0ac2d7fb7ad92dff6   Running    23h    v1.33.2+k0s.0\n</code></pre>"},{"location":"capi-aws/","title":"Cluster API - AWS (Hosted Control Plane)","text":"<p>This example demonstrates how k0smotron can be used with CAPA (Cluster API Provider Amazon Web Services) to deploy  a cluster with hosted control plane and workers in AWS.</p>"},{"location":"capi-aws/#prerequisites","title":"Prerequisites","text":"<p>Before starting this example, ensure that you have met the general prerequisites. In addition to those, you should also have appropriate AWS credentials available and the AWS CLI configured on your local machine.</p>"},{"location":"capi-aws/#prepare-the-aws-infra-provider","title":"Prepare the AWS infra provider","text":"<p>Before launching a cluster, it's crucial to set up your infrastructure provider. Each provider has its unique prerequisites and configuration steps.</p> <p>Follow the AWS Provider installation guide for detailed steps.</p>"},{"location":"capi-aws/#creating-a-child-cluster","title":"Creating a child cluster","text":"<p>Once all the controllers are up and running, you can apply the cluster manifests containing the specifications of the cluster you want to provision.</p> <p>k0smotron in standalone mode is only able to work with externally managed cluster infrastructure.</p> <p>This is because in CAPA there is no way to disable it to provision all control plane related infrastructure (VPC, ELB, etc.). This also renders k0smotron unable to dynamically edit the <code>AWSCluster</code> API endpoint details. Make sure your VPC and subnets you are planning to use fullfill the needed prerequisites. This limitation is not applicable to the clusters on the VMs.</p> <p>Here is an example:</p> <pre><code>apiVersion: cluster.x-k8s.io/v1beta1\nkind: Cluster\nmetadata:\n  name: k0s-aws-test\n  namespace: default\nspec:\n  clusterNetwork:\n    pods:\n      cidrBlocks: [10.244.0.0/16]\n    services:\n      cidrBlocks: [10.96.0.0/12]\n  controlPlaneRef:\n    apiVersion: controlplane.cluster.x-k8s.io/v1beta1\n    kind: K0smotronControlPlane # This tells that k0smotron should create the controlplane\n    name: k0s-aws-test-cp\n  infrastructureRef:\n    apiVersion: infrastructure.cluster.x-k8s.io/v1beta2\n    kind: AWSCluster\n    name: k0s-aws-test\n---\napiVersion: controlplane.cluster.x-k8s.io/v1beta1\nkind: K0smotronControlPlane # This is the config for the controlplane\nmetadata:\n  name: k0s-aws-test-cp\nspec:\n  version: v1.27.2-k0s.0\n  persistence:\n    type: emptyDir\n  service:\n    type: LoadBalancer\n    apiPort: 6443\n    konnectivityPort: 8132\n---\napiVersion: infrastructure.cluster.x-k8s.io/v1beta2\nkind: AWSCluster\nmetadata:\n  name: k0s-aws-test\n  namespace: default\n  annotations:\n    cluster.x-k8s.io/managed-by: k0smotron # This marks the base infra to be self managed. The value of the annotation is irrelevant, as long as there is a value.\nspec:\n  region: eu-central-1\n  sshKeyName: ssh-key\n  network:\n    vpc:\n      id: vpc-12345678901234567 # Machines will be created in this VPC\n    subnets:\n      - id: subnet-099730c9ea2e42134 # Machines will be created in this Subnet\n        availabilityZone: eu-central-1a\n---\napiVersion: cluster.x-k8s.io/v1beta1\nkind: MachineDeployment\nmetadata:\n  name: k0s-aws-test-md\n  namespace: default\nspec:\n  clusterName: k0s-aws-test\n  replicas: 1\n  selector:\n    matchLabels:\n      cluster.x-k8s.io/cluster-name: k0s-aws-test\n      pool: worker-pool-1\n  template:\n    metadata:\n      labels:\n        cluster.x-k8s.io/cluster-name: k0s-aws-test\n        pool: worker-pool-1\n    spec:\n      clusterName: k0s-aws-test\n      failureDomain: eu-central-1a\n      bootstrap:\n        configRef: # This triggers our controller to create cloud-init secret\n          apiVersion: bootstrap.cluster.x-k8s.io/v1beta1\n          kind: K0sWorkerConfigTemplate\n          name: k0s-aws-test-machine-config\n      infrastructureRef:\n        apiVersion: infrastructure.cluster.x-k8s.io/v1beta2\n        kind: AWSMachineTemplate\n        name: k0s-aws-test-mt\n---\napiVersion: infrastructure.cluster.x-k8s.io/v1beta2\nkind: AWSMachineTemplate\nmetadata:\n  name: k0s-aws-test-mt\n  namespace: default\nspec:\n  template:\n    spec:\n      ami:\n        # Replace with your AMI ID\n        id: ami-0989fb15ce71ba39e # Ubuntu 22.04 in eu-central-1 \n      instanceType: t3.large\n      iamInstanceProfile: nodes.cluster-api-provider-aws.sigs.k8s.io # Instance Profile created by `clusterawsadm bootstrap iam create-cloudformation-stack`\n      cloudInit:\n        # Makes CAPA use k0s bootstrap cloud-init directly and not via SSM\n        # Simplifies the VPC setup as we do not need custom SSM endpoints etc.\n        insecureSkipSecretsManager: true\n      subnet:\n        # Make sure this matches the failureDomain in the Machine, i.e. you pick the subnet ID for the AZ\n        id: subnet-099730c9ea2e42134\n      additionalSecurityGroups:\n        - id: sg-01ce46c31291e3447 # Needs to be belong to the subnet\n      sshKeyName: jhennig-key\n---\napiVersion: bootstrap.cluster.x-k8s.io/v1beta1\nkind: K0sWorkerConfigTemplate\nmetadata:\n  name: k0s-aws-test-machine-config\nspec:\n  template:\n    spec:\n      version: v1.27.2+k0s.0\n      # More details of the worker configuration can be set here\n---\n</code></pre> <p>As we are using self-managed infrastructure we need to manually mark the infrastructure ready. This can be accomplished using the following command: <code>kubectl patch AWSCluster k0s-aws-test --type=merge --subresource status --patch 'status: {ready: true}'.</code></p> <p>After applying the manifests to the management cluster and confirming the infrastructure readiness, allow a few minutes for all components to provision. Once complete, your command line should display output similar to this:</p> <pre><code>% kubectl get cluster,machine\nNAME                                    PHASE         AGE   VERSION\ncluster.cluster.x-k8s.io/k0s-aws-test   Provisioned   16m   \n\nNAME                                         CLUSTER        NODENAME   PROVIDERID                                 PHASE         AGE   VERSION\nmachine.cluster.x-k8s.io/k0s-aws-test-md-0   k0s-aws-test              aws:///eu-central-1a/i-05f2de7da41dc542a   Provisioned   16m   \n</code></pre> <p>You can also check the status of the cluster deployment with <code>clusterctl</code>: <pre><code>% clusterctl describe cluster  \nNAME                                                   READY  SEVERITY  REASON                    SINCE  MESSAGE          \nCluster/k0s-aws-test                                   True                                       25m                      \n\u251c\u2500ClusterInfrastructure - AWSCluster/k0s-aws-test                                                                             \n\u251c\u2500ControlPlane - K0smotronControlPlane/k0s-aws-test-cp                                                                           \n\u2514\u2500Workers                                                                                                                  \n  \u2514\u2500Other\n</code></pre></p>"},{"location":"capi-aws/#networking-options","title":"Networking Options","text":"<p>k0smotron, running in a management cluster in AWS, supports flexible networking options, allowing you to choose between Network Load Balancers (NLB) and Classic Elastic Load Balancers (ELB) based on your requirements for exposing the Control Planes.</p> <p>If you prefer using an NLB instead of ELB, you must specify annotations for the Service in the <code>k0smotronControlPlane</code>. These annotations guide the AWS Cloud Controller Manager (CCM) or the AWS Load Balancer Controller to create the respective services.</p> <pre><code> [...] \n  service:\n    type: LoadBalancer\n    apiPort: 6443\n    konnectivityPort: 8132\n    annotations:\n      service.beta.kubernetes.io/aws-load-balancer-type: \"nlb\"\n</code></pre> <p>For scenarios involving Classic ELBs or NLBs without special options, the AWS CCM can be utilized.</p>"},{"location":"capi-aws/#internal-nlb","title":"Internal NLB","text":"<p>If you aim to use the NLB and set the schema to <code>internal</code>, the target group attribute <code>preserve_client_ip.enabled=false</code> is required due to \"hairpinning\" or \"NAT loopback\". In such cases, the AWS CCM cannot be used because it doesn't support setting Target Group Attributes. Therefore, the AWS Load Balancer Controller, which has the ability to set Target Group Attributes, becomes necessary. Follow this guide to install the AWS Load Balancer Controller.</p> <pre><code> [...] \n  service:\n    type: LoadBalancer\n    apiPort: 6443\n    konnectivityPort: 8132\n    annotations:\n      service.beta.kubernetes.io/aws-load-balancer-type: \"external\" # AWS Loadbalancer Controller creates a NLB when type is \"external\"\n      service.beta.kubernetes.io/aws-load-balancer-internal: \"true\"\n      service.beta.kubernetes.io/aws-load-balancer-target-group-attributes: preserve_client_ip.enabled=false\n</code></pre> <p>Note: Please make sure that the Security Group does allow the access to the NLB on port 6443 and 8132 from the management cluster nodes. This access is crucial for Cluster API (CAPI), Cluster API Provider for AWS (CAPA), and k0smotron, as they require access to the Control Plane API. Additionally, the port for the Konnectivity service need to be accessible from worker nodes.</p>"},{"location":"capi-aws/#accessing-the-workload-cluster","title":"Accessing the workload cluster","text":"<p>To access the child cluster we can get the kubeconfig for it with <code>clusterctl get kubeconfig k0s-aws-test</code>. You can then save it to disk and/or import to your favorite tooling like Lens.</p>"},{"location":"capi-aws/#deleting-the-cluster","title":"Deleting the cluster","text":"<p>For cluster deletion, do NOT use <code>kubectl delete -f my-aws-cluster.yaml</code> as that will result in orphan AWS resources. Instead, delete the top level <code>Cluster</code> object. This approach ensures the proper sequence in deleting all child resources, effectively avoiding orphan resources.</p>"},{"location":"capi-bootstrap/","title":"Cluster API - Bootstrap provider","text":"<p>k0smotron serves as a Cluster API Bootstrap provider. Given that k0smotron runs the cluster control plane within the management cluster, the Bootstrap provider currently concentrates on worker node bootstrapping.</p> <p>Just like with any other Cluster API provider, you have the flexibility to create either a <code>Machine</code> or <code>MachineDeployment</code> object. While <code>MachineDeployment</code> objects are scalable, certain use-cases necessitate the use of <code>Machine</code>.</p>"},{"location":"capi-bootstrap/#machines","title":"Machines","text":"<p>To configure the machine, you first need to create a <code>Machine</code> object with a reference to a bootstrap provider and configuration for the bootstrapping <code>K0sWorkerConfig</code>:</p> <pre><code>apiVersion: cluster.x-k8s.io/v1beta1\nkind: Machine\nmetadata:\n  name: machine-test-0\n  namespace: default\nspec:\n  clusterName: cp-test\n  bootstrap:\n    configRef: # This triggers our controller to create cloud-init secret\n      apiVersion: bootstrap.cluster.x-k8s.io/v1beta1\n      kind: K0sWorkerConfig\n      name: machine-test-config\n  infrastructureRef: # This references the infrastructure provider machine object\n    apiVersion: infrastructure.cluster.x-k8s.io/v1beta1\n    kind: AWSMachine\n    name: machine-test-0\n---\napiVersion: bootstrap.cluster.x-k8s.io/v1beta1\nkind: K0sWorkerConfig\nmetadata:\n  name: machine-test-config\n  namespace: default\nspec:\n  version: v1.27.2+k0s.0\n  # Details of the worker configuration can be set here\n</code></pre> <p>This configuration sets up a <code>Machine</code> object that will trigger the k0smotron controller to create a cloud-init secret and prepare the machine for bootstrapping. Note that the specific parameters in the <code>K0sWorkerConfig</code> spec will depend on your worker node configuration requirements.</p> <p>For reference on what can be configured via <code>K0sWorkerConfig</code> see the reference docs.</p> <p>The <code>infrastructureRef</code> in the <code>Machine</code> object specifies a reference to the provider-specific infrastructure required for the operation of the machine. In the above example, the kind <code>AWSMachine</code> indicates that the machine will be run on AWS. The parameters within <code>infrastructureRef</code> will be provider-specific and vary based on your chosen infrastructure.</p> <pre><code>apiVersion: infrastructure.cluster.x-k8s.io/v1beta2\nkind: AWSMachine\nmetadata:\n  name: machine-test-0\n  namespace: default\nspec:\n  # More details about the aws machine can be set here\n</code></pre>"},{"location":"capi-bootstrap/#machinedeployments","title":"MachineDeployments","text":"<p>To leverage k0smotron as a Bootstrap provider for <code>MachineDeployment</code> utilize the <code>K0sWorkerConfigTemplate</code> type:</p> <pre><code>apiVersion: cluster.x-k8s.io/v1beta1\nkind: MachineDeployment\nmetadata:\n  name: md-test\n  namespace: default\nspec:\n  replicas: 2\n  clusterName: cp-test\n  selector:\n    matchLabels:\n      cluster.x-k8s.io/cluster-name: cp-test\n      pool: worker-pool-1\n  template:\n    metadata:\n      labels:\n        cluster.x-k8s.io/cluster-name: cp-test\n        pool: worker-pool-1\n    spec:\n      clusterName: cp-test\n      bootstrap:\n        configRef:\n          apiVersion: bootstrap.cluster.x-k8s.io/v1beta1\n          kind: K0sWorkerConfigTemplate\n          name: md-test-config\n      infrastructureRef:\n        apiVersion: infrastructure.cluster.x-k8s.io/v1beta1\n        kind: AWSMachineTemplate\n        name: mt-test\n---\napiVersion: bootstrap.cluster.x-k8s.io/v1beta1\nkind: K0sWorkerConfigTemplate\nmetadata:\n  name: md-test-config\n  namespace: default\nspec:\n  template:\n    spec:\n      version: v1.27.2+k0s.0\n      # More details of the worker configuration can be set here\n</code></pre> <p>The <code>MachineDeployment</code> configuration must be associated with the appropriate infrastructure provider's machine template type. In this example, AWS is used as the infrastructure provider, hence a <code>AWSMachineTemplate</code> is utilized:</p> <pre><code>apiVersion: infrastructure.cluster.x-k8s.io/v1beta2\nkind: AWSMachineTemplate\nmetadata:\n  name: mt-test\n  namespace: default\nspec:\n  template:\n    spec:\n    # More details about the aws machine template can be set here\n</code></pre> <p>This example creates a <code>MachineDeployment</code> with 2 replicas, using k0smotron as the bootstrap provider. The <code>infrastructureRef</code> is used to specify the infrastructure requirements for the machines, in this case, AWS. </p> <p>Check the examples pages for more detailed examples how k0smotron can be used with various Cluster API infrastructure providers.</p>"},{"location":"capi-clusterclass/","title":"ClusterClass","text":"<p>K0smotron supports ClusterClass, a simple way to create many clusters of a similar shape. </p> <p>For instance, we will create a ClusterClass that will create a cluster running control plane and worker nodes on DockerMachines:</p> <pre><code>---\napiVersion: cluster.x-k8s.io/v1beta1\nkind: ClusterClass\nmetadata:\n  name: k0smotron-clusterclass\nspec:\n  controlPlane:\n    ref:\n      apiVersion: controlplane.cluster.x-k8s.io/v1beta1\n      kind: K0sControlPlaneTemplate\n      name: k0s-controlplane-template\n      namespace: default\n    machineInfrastructure:\n      ref:\n        kind: DockerMachineTemplate\n        apiVersion: infrastructure.cluster.x-k8s.io/v1beta1\n        name: cp-docker-machine-template\n        namespace: default\n  infrastructure:\n    ref:\n      apiVersion: infrastructure.cluster.x-k8s.io/v1beta1\n      kind: DockerClusterTemplate\n      name: docker-cluster-template\n      namespace: default\n  workers:\n    machineDeployments:\n    - class: default-worker\n      template:\n        bootstrap:\n          ref:\n            apiVersion: bootstrap.cluster.x-k8s.io/v1beta1\n            kind: K0sWorkerConfigTemplate\n            name: k0s-worker-config-template\n            namespace: default\n        infrastructure:\n          ref:\n            apiVersion: infrastructure.cluster.x-k8s.io/v1beta1\n            kind: DockerMachineTemplate\n            name: worker-docker-machine-template\n            namespace: default\n---\n\u2026 # other objects omitted for brevity, see full example below\n</code></pre> <p>Then we can easily create a Cluster using the ClusterClass:</p> <pre><code>apiVersion: cluster.x-k8s.io/v1beta1\nkind: Cluster\nmetadata:\n  name: k0smotron-test-cluster\n  namespace: default\nspec:\n  topology:\n    class: k0smotron-clusterclass\n    version: v1.27.2\n    workers:\n      machineDeployments:\n      - class: default-worker\n        name: md\n        replicas: 3\n</code></pre> <p>You can read more about ClusterClass in the Cluster API documentation.</p>"},{"location":"capi-clusterclass/#k0smotroncontrolplanetemplate-for-clusterclass","title":"K0smotronControlPlaneTemplate for ClusterClass","text":"<p><code>K0smotronControlPlane</code> is a custom resource that is used to create a control planes as pods in the managing cluster. It does not create any machines, but instead creates a pod that runs the k0s control plane. Here is the example of <code>ClusterClass</code> that uses <code>K0smotronControlPlaneTemplate</code>:</p> <pre><code>---\napiVersion: cluster.x-k8s.io/v1beta1\nkind: ClusterClass\nmetadata:\n  name: k0smotron-clusterclass\nspec:\n  controlPlane:\n    ref:\n      apiVersion: controlplane.cluster.x-k8s.io/v1beta1\n      kind: K0smotronControlPlaneTemplate\n      name: k0s-controlplane-template\n      namespace: default\n  infrastructure:\n    ref:\n      apiVersion: infrastructure.cluster.x-k8s.io/v1beta1\n      kind: DockerClusterTemplate\n      name: docker-cluster-template\n      namespace: default\n  workers:\n    machineDeployments:\n    - class: default-worker\n      template:\n        bootstrap:\n          ref:\n            apiVersion: bootstrap.cluster.x-k8s.io/v1beta1\n            kind: K0sWorkerConfigTemplate\n            name: k0s-worker-config-template\n            namespace: default\n        infrastructure:\n          ref:\n            apiVersion: infrastructure.cluster.x-k8s.io/v1beta1\n            kind: DockerMachineTemplate\n            name: worker-docker-machine-template\n            namespace: default\n---\n\u2026 # other objects omitted for brevity, see full example below\n</code></pre> <pre><code>## Full example\n\n```yaml\n---\napiVersion: controlplane.cluster.x-k8s.io/v1beta1\nkind: K0sControlPlaneTemplate\nmetadata:\n  name: k0s-controlplane-template\nspec:\n  template:\n    spec:\n      k0sConfigSpec:\n        k0s:\n          apiVersion: k0s.k0sproject.io/v1beta1\n          kind: ClusterConfig\n          metadata:\n            name: k0s\n          spec:\n            api:\n              extraArgs:\n                anonymous-auth: \"true\" # anonymous-auth=true is needed for k0s to allow unauthorized health-checks on /healthz \n---\napiVersion: infrastructure.cluster.x-k8s.io/v1beta1\nkind: DockerMachineTemplate\nmetadata:\n  name: cp-docker-machine-template\n  namespace: default\nspec:\n  template:\n    spec: {}\n---\napiVersion: infrastructure.cluster.x-k8s.io/v1beta1\nkind: DockerClusterTemplate\nmetadata:\n  name: docker-cluster-template\nspec:\n  template:\n    spec: {}\n---\napiVersion: bootstrap.cluster.x-k8s.io/v1beta1\nkind: K0sWorkerConfigTemplate\nmetadata:\n  name: k0s-worker-config-template\n  namespace: default\nspec:\n  template:\n    spec:\n      version: v1.27.2+k0s.0\n---\napiVersion: infrastructure.cluster.x-k8s.io/v1beta1\nkind: DockerMachineTemplate\nmetadata:\n  name: worker-docker-machine-template\n  namespace: default\nspec:\n  template:\n    spec: {}\n---\napiVersion: cluster.x-k8s.io/v1beta1\nkind: ClusterClass\nmetadata:\n  name: k0smotron-clusterclass\nspec:\n  controlPlane:\n    ref:\n      apiVersion: controlplane.cluster.x-k8s.io/v1beta1\n      kind: K0sControlPlaneTemplate\n      name: k0s-controlplane-template\n      namespace: default\n    machineInfrastructure:\n      ref:\n        kind: DockerMachineTemplate\n        apiVersion: infrastructure.cluster.x-k8s.io/v1beta1\n        name: cp-docker-machine-template\n        namespace: default\n  infrastructure:\n    ref:\n      apiVersion: infrastructure.cluster.x-k8s.io/v1beta1\n      kind: DockerClusterTemplate\n      name: docker-cluster-template\n      namespace: default\n  workers:\n    machineDeployments:\n    - class: default-worker\n      template:\n        bootstrap:\n          ref:\n            apiVersion: bootstrap.cluster.x-k8s.io/v1beta1\n            kind: K0sWorkerConfigTemplate\n            name: k0s-worker-config-template\n            namespace: default\n        infrastructure:\n          ref:\n            apiVersion: infrastructure.cluster.x-k8s.io/v1beta1\n            kind: DockerMachineTemplate\n            name: worker-docker-machine-template\n            namespace: default\n</code></pre>"},{"location":"capi-controlplane-bootstrap/","title":"Cluster API - Control Plane Bootstrap provider","text":"<p>k0smotron can act as a control plane bootstrap provider via usage of <code>K0sControlPlane</code> CRDs.</p> <p>When creating a Cluster with Cluster API you typically need to create a <code>Cluster</code> object. With k0smotron there needs to be a link to the control plane provider <code>K0sControlPlane</code>:</p> <pre><code>apiVersion: cluster.x-k8s.io/v1beta1\nkind: Cluster\nmetadata:\n  name: cp-test\nspec:\n  clusterNetwork:\n    pods:\n      cidrBlocks:\n        - 10.244.0.0/16\n    services:\n      cidrBlocks:\n        - 10.96.0.0/12\n  controlPlaneRef:\n    apiVersion: controlplane.cluster.x-k8s.io/v1beta1\n    kind: K0sControlPlane\n    name: cp-test\n</code></pre> <p>Next we need to provide the configuration for the actual <code>K0sControlPlane</code> and <code>machineTemplate</code>:</p> <pre><code>---\napiVersion: controlplane.cluster.x-k8s.io/v1beta1\nkind: K0sControlPlane\nmetadata:\n  name: cp-test\nspec:\n  replicas: 3\n  k0sConfigSpec:\n    k0s:\n      apiVersion: k0s.k0sproject.io/v1beta1\n      kind: ClusterConfig\n      metadata:\n        name: k0s\n      spec:\n        api:\n          extraArgs:\n            anonymous-auth: \"true\" # anonymous-auth=true is needed for k0s to allow unauthorized health-checks on /healthz \n  machineTemplate:\n    infrastructureRef:\n      apiVersion: infrastructure.cluster.x-k8s.io/v1beta1\n      kind: DockerMachineTemplate\n      name: cp-test-machine-template\n      namespace: default\n---\napiVersion: infrastructure.cluster.x-k8s.io/v1beta1\nkind: DockerMachineTemplate\nmetadata:\n  name: cp-test-machine-template\n  namespace: default\nspec:\n  template:\n    spec: {}\n</code></pre> <p>By applying this yaml, k0smotron will create 3 machines based on the <code>MachineTemplate</code> configuration, installs k0s with the role controller on each machine and bootstraps the k0s control plane.</p> <p>For a full reference on <code>K0sControlPlane</code> configurability see the reference docs.</p>"},{"location":"capi-controlplane-bootstrap/#downscaling-the-control-plane","title":"Downscaling the control plane","text":"<p>WARNING: Downscaling is a potentially dangerous operation.</p> <p>Kubernetes using etcd as its backing store. It's crucial to have a quorum of etcd nodes available at all times. Always run etcd as a cluster of odd members.</p> <p>When downscaling the control plane, you need firstly to deregister the node from the etcd cluster. k0smotron will do it automatically for you.</p> <p>NOTE: k0smotron gives node names sequentially and on downscaling it will remove the \"latest\" nodes. For instance, if you have <code>k0smotron-test</code> cluster of 5 nodes and you downscale to 3 nodes, the nodes <code>k0smotron-test-3</code> and <code>k0smotron-test-4</code> will be removed.</p>"},{"location":"capi-controlplane-bootstrap/#recovering-from-a-lost-control-plane-node","title":"Recovering from a lost control plane node","text":"<p>If you lose a control plane node, you need to recover the cluster. First, you need to remove the lost node from the etcd cluster. You can do this by running the following command on the remaining control plane nodes:</p> <pre><code>k0s etcd leave --peer-address &lt;peer-address&gt;\n</code></pre> <p>Then you need to remove old objects from the management cluster with the name of the lost node. You can do this by running the following command:</p> <pre><code>kubectl delete machine &lt;lost-node-name&gt;\nkubectl delete &lt;infra-provider-specific-machine-object&gt; &lt;lost-node-name&gt;\nkubectl delete secret &lt;lost-node-name&gt;\nkubectl delete k0scontrollerconfig &lt;lost-node-name&gt;\n</code></pre> <p>After that you need to trigger the reconciliation of the control plane object by updating the <code>K0sControlPlane</code> object or restarting the controller manager.</p> <pre><code>## Running workloads on the control plane\n\nBy default, k0s and k0smotron don't run kubelet and any workloads on control plane nodes. But you can enable it by adding `--enable-worker` flag to the `spec.k0sConfigSpec.args` in the `K0sControlPlane` object. This will enable the kubelet on control plane nodes and allow you to run workloads on them.\n\n```yaml\napiVersion: controlplane.cluster.x-k8s.io/v1beta1\nkind: K0sControlPlane\nmetadata:\n  name: docker-test\nspec:\n  replicas: 1\n  k0sConfigSpec:\n    args:\n      - --enable-worker\n      - --no-taints # disable default taints\n  machineTemplate:\n    infrastructureRef:\n      apiVersion: infrastructure.cluster.x-k8s.io/v1beta1\n      kind: DockerMachineTemplate\n      name: docker-test-cp-template\n      namespace: default\n---\napiVersion: infrastructure.cluster.x-k8s.io/v1beta1\nkind: DockerMachineTemplate\nmetadata:\n  name: docker-test-cp-template\n  namespace: default\nspec:\n  template:\n    spec: {}\n</code></pre> <p>Note: Controller nodes running with <code>--enable-worker</code> are assigned <code>node-role.kubernetes.io/master:NoExecute</code> taint automatically. You can disable default taints using <code>--no-taints</code>  parameter.</p>"},{"location":"capi-controlplane-bootstrap/#client-connection-tunneling","title":"Client connection tunneling","text":"<p>k0smotron supports client connection tunneling to the child cluster's control plane nodes. This is useful when you want to access the control plane nodes from a remote location. To enable tunneling, you need to set <code>spec.k0sConfigSpec.tunneling.enabled</code> to <code>true</code> in the <code>K0sControlPlane</code> object.</p> <pre><code>apiVersion: controlplane.cluster.x-k8s.io/v1beta1\nkind: K0sControlPlane\nmetadata:\n  name: docker-test\nspec:\n  replicas: 1\n  k0sConfigSpec:\n    tunneling:\n      enabled: true\n      mode: tunnel # Tunneling mode: tunnel or proxy (default: tunnel)\n</code></pre> <p>K0smotron supports two tunneling modes: <code>tunnel</code> and <code>proxy</code>. You can set the tunneling mode using <code>spec.k0sConfigSpec.tunneling.mode</code> field. The default mode is <code>tunnel</code>.</p> <p>K0smotron will create a kubeconfig file for the tunneling client in the <code>K0sControlPlane</code> object's namespace. You can find the kubeconfig file in the <code>&lt;cluster-name&gt;-&lt;mode&gt;-kubeconfig</code> secret. You can use this kubeconfig file to access the control plane nodes from a remote location.</p> <p>Note: Parent cluster's worker nodes must be accessible from the child cluster's nodes. You can use <code>spec.k0sConfigSpec.tunneling.serverAddress</code> to set the address of the parent cluster's node or load balancer. If you don't set this field, k0smotron will use the random worker node's address as the default address.</p> <p>Currently, k0smotron supports only NodePort service type for tunneling. You can set the tunneling service port using <code>spec.k0sConfigSpec.tunneling.tunnelingNodePort</code> field. The default port is <code>31443</code>.</p>"},{"location":"capi-controlplane/","title":"Cluster API - Control Plane provider","text":"<p>k0smotron can act as a control plane provider via usage of <code>K0smotronControlPlane</code> CRDs.</p> <p>As per usual, you need to define a <code>Cluster</code> object given with a reference to control plane provider: <pre><code>apiVersion: cluster.x-k8s.io/v1beta1\nkind: Cluster\nmetadata:\n  name: cp-test\nspec:\n  clusterNetwork:\n    pods:\n      cidrBlocks:\n        - 10.244.0.0/16\n    services:\n      cidrBlocks:\n        - 10.96.0.0/12\n  controlPlaneRef:\n    apiVersion: controlplane.cluster.x-k8s.io/v1beta1\n    kind: K0smotronControlPlane\n    name: cp-test\n</code></pre></p> <p>Next we need to provide the configuration for the actual <code>K0smotronControlPlane</code>:</p> <pre><code>apiVersion: controlplane.cluster.x-k8s.io/v1beta1\nkind: K0smotronControlPlane\nmetadata:\n  name: cp-test\nspec:\n  version: v1.27.2-k0s.0\n  persistence:\n    type: emptyDir\n  service:\n    type: LoadBalancer\n    apiPort: 6443\n    konnectivityPort: 8132\n</code></pre> <p>Check the examples pages for more detailed examples how k0smotron can be used with various Cluster API infrastructure providers.</p> <p>For a full reference on <code>K0smotronControlPlane</code> configurability see the reference docs.</p>"},{"location":"capi-docker/","title":"Cluster API - Docker","text":"<p>This example demonstrates how k0smotron can be used with CAPD (Cluster API Provider Docker).</p> <p>Please note, CAPD should only be used for development purposes and not for production environments.</p>"},{"location":"capi-docker/#preparations","title":"Preparations","text":"<p>Before starting this example, ensure that you have met the general prerequisites.</p> <p>To initialize the management cluster with Docker infrastrcture provider you can run:</p> <pre><code>clusterctl init --core cluster-api --infrastructure docker\n</code></pre> <p>For more details on Cluster API Provider Docker see it's docs.</p>"},{"location":"capi-docker/#creating-a-child-cluster","title":"Creating a child cluster","text":"<p>Once all the controllers are up and running, you can apply the cluster manifests containing the specifications of the cluster you want to provision.</p> <p>Here is an example:</p> <pre><code>apiVersion: cluster.x-k8s.io/v1beta1\nkind: Cluster\nmetadata:\n  name: docker-test\n  namespace: default\nspec:\n  clusterNetwork:\n    pods:\n      cidrBlocks:\n      - 192.168.0.0/16\n    serviceDomain: cluster.local\n    services:\n      cidrBlocks:\n      - 10.128.0.0/12\n  controlPlaneRef:\n    apiVersion: controlplane.cluster.x-k8s.io/v1beta1\n    kind: K0smotronControlPlane\n    name: docker-test-cp\n    namespace: default\n  infrastructureRef:\n    apiVersion: infrastructure.cluster.x-k8s.io/v1beta1\n    kind: DockerCluster\n    name: docker-test\n    namespace: default\n---\napiVersion: controlplane.cluster.x-k8s.io/v1beta1\nkind: K0smotronControlPlane # This is the config for the controlplane\nmetadata:\n  name: docker-test-cp\n  namespace: default\nspec:\n  version: v1.27.2-k0s.0\n  persistence:\n    type: emptyDir\n  service:\n    type: NodePort\n---\napiVersion: infrastructure.cluster.x-k8s.io/v1beta1\nkind: DockerCluster\nmetadata:\n  name: docker-test\n  namespace: default\n  annotations:\n    cluster.x-k8s.io/managed-by: k0smotron # This marks the base infra to be self managed. The value of the annotation is irrelevant, as long as there is a value.\nspec: {}\n  # More details of the DockerCluster can be set here\n---\napiVersion: cluster.x-k8s.io/v1beta1\nkind: MachineDeployment\nmetadata:\n  name:  docker-test-md\n  namespace: default\nspec:\n  clusterName: docker-test\n  replicas: 1\n  selector:\n    matchLabels:\n      cluster.x-k8s.io/cluster-name: docker-test\n      pool: worker-pool-1\n  template:\n    metadata:\n      labels:\n        cluster.x-k8s.io/cluster-name: docker-test\n        pool: worker-pool-1\n    spec:\n      clusterName: docker-test\n      version: v1.27.2 # Docker Provider requires a version to be set (see https://hub.docker.com/r/kindest/node/tags)\n      bootstrap:\n        configRef:\n          apiVersion: bootstrap.cluster.x-k8s.io/v1beta1\n          kind: K0sWorkerConfigTemplate\n          name: docker-test-machine-config\n      infrastructureRef:\n        apiVersion: infrastructure.cluster.x-k8s.io/v1beta1\n        kind: DockerMachineTemplate\n        name: docker-test-mt\n---\napiVersion: infrastructure.cluster.x-k8s.io/v1beta1\nkind: DockerMachineTemplate\nmetadata:\n  name: docker-test-mt\n  namespace: default\nspec:\n  template:\n    spec: {}\n  # More details of the DockerMachineTemplate can be set here\n---\napiVersion: bootstrap.cluster.x-k8s.io/v1beta1\nkind: K0sWorkerConfigTemplate\nmetadata:\n  name: docker-test-machine-config\nspec:\n  template:\n    spec:\n      version: v1.27.2+k0s.0\n      # More details of the worker configuration can be set here\n</code></pre> <p>After applying the manifests to the management cluster and confirming the infrastructure readiness, allow a few minutes for all components to provision. Once complete, your command line should display output similar to this:</p> <pre><code>% kubectl get cluster,machine\nNAME                                   PHASE         AGE     VERSION\ncluster.cluster.x-k8s.io/docker-test   Provisioned   3m51s\n\nNAME                                        CLUSTER       NODENAME   PROVIDERID          PHASE         AGE     VERSION\nmachine.cluster.x-k8s.io/docker-test-md-0   docker-test                                  Provisioned   3m50s\n</code></pre> <p>You can also check the status of the cluster deployment with <code>clusterctl describe cluster</code>.</p>"},{"location":"capi-docker/#accessing-the-workload-cluster","title":"Accessing the workload cluster","text":"<p>To access the child cluster we can get the kubeconfig for it with <code>clusterctl get kubeconfig docker-test</code>. You can then save it to disk and/or import to your favorite tooling like Lens</p>"},{"location":"capi-docker/#deleting-the-cluster","title":"Deleting the cluster","text":"<p>For cluster deletion, do NOT use <code>kubectl delete -f my-docker-cluster.yaml</code> as that can result in orphan resources. Instead, delete the top level <code>Cluster</code> object. This approach ensures the proper sequence in deleting all child resources, effectively avoid orphan resources.</p>"},{"location":"capi-examples/","title":"Cluster API examples - software prerequisites","text":"<p>This section presents a collection of examples showcasing the use of k0smotron as a Cluster API provider across various cloud platforms.</p> <p>Before proceeding with the Cluster API examples, make sure that you have met common prerequisites and installed k0smotron.</p>"},{"location":"capi-hetzner/","title":"Cluster API - Hetzner","text":"<p>This example demonstrates how k0smotron can be used with CAPH (Cluster API Provider HetznerCloud).</p>"},{"location":"capi-hetzner/#preparations","title":"Preparations","text":"<p>Before starting this example, ensure that you have met the general prerequisites.</p> <p>To initialize the management cluster with Hetzner infrastrcture provider you can run:</p> <pre><code>clusterctl init --core cluster-api --infrastructure hetzner\n</code></pre> <p>For more details on Cluster API Provider Hetzner see it's docs.</p>"},{"location":"capi-hetzner/#token","title":"Token","text":"<p>To be able to provision the infrastructure Hetzner provider you will need a token to interact with the Hetzner API. You'll can create &amp; find the token in your project at \"Security\" in the Hetzner Cloud console.</p>"},{"location":"capi-hetzner/#creating-a-child-cluster","title":"Creating a child cluster","text":"<p>Once all the controllers are up and running, you can apply the cluster manifests containing the specifications of the cluster you want to provision.</p> <p>Here is an example:</p> <pre><code>apiVersion: cluster.x-k8s.io/v1beta1\nkind: Cluster\nmetadata:\n  name: hetzner-test\nspec:\n  clusterNetwork:\n    pods:\n      cidrBlocks:\n        - 10.244.0.0/16\n    services:\n      cidrBlocks:\n        - 10.96.0.0/12\n  controlPlaneRef:\n    apiVersion: controlplane.cluster.x-k8s.io/v1beta1\n    kind: K0smotronControlPlane # This tells that k0smotron should create the controlplane\n    name: hetzner-test-cp\n  infrastructureRef:\n    apiVersion: infrastructure.cluster.x-k8s.io/v1beta1\n    kind: HetznerCluster\n    name: hetzner-test\n---\napiVersion: controlplane.cluster.x-k8s.io/v1beta1\nkind: K0smotronControlPlane # This is the config for the controlplane\nmetadata:\n  name: hetzner-test-cp\nspec:\n  version: v1.27.2-k0s.0\n  persistence:\n    type: emptyDir\n  service:\n    type: LoadBalancer\n    apiPort: 6443\n    konnectivityPort: 8132\n    annotations:\n      load-balancer.hetzner.cloud/location: fsn1 \n---\napiVersion: infrastructure.cluster.x-k8s.io/v1beta1\nkind: HetznerCluster\nmetadata:\n  name: hetzner-test\n  namespace: default\n  annotations:\n    cluster.x-k8s.io/managed-by: k0smotron # This marks the base infra to be self managed. The value of the annotation is irrelevant, as long as there is a value.\nspec:\n  controlPlaneLoadBalancer:\n    enabled: false\n  controlPlaneEndpoint: # This is just a placeholder, can be anything as k0smotron will overwrite it\n    host: \"1.2.3.4\"\n    port: 6443\n  controlPlaneRegions:\n    - fsn1\n  hetznerSecretRef:\n    name: hetzner\n    key:\n      hcloudToken: hcloud\n---\napiVersion: cluster.x-k8s.io/v1beta1\nkind: MachineDeployment\nmetadata:\n  name: hetnzer-test-md\n  namespace: default\nspec:\n  clusterName: hetzner-test\n  replicas: 1\n  selector:\n    matchLabels:\n      cluster.x-k8s.io/cluster-name: hetzner-test\n      pool: worker-pool-1\n  template:\n    metadata:\n      labels:\n        cluster.x-k8s.io/cluster-name: hetzner-test\n        pool: worker-pool-1\n    spec:\n      clusterName: hetzner-test\n      bootstrap:\n        configRef: # This triggers our controller to create cloud-init secret\n          apiVersion: bootstrap.cluster.x-k8s.io/v1beta1\n          kind: K0sWorkerConfigTemplate\n          name: hetzner-test-machine-config\n      infrastructureRef:\n        apiVersion: infrastructure.cluster.x-k8s.io/v1beta1\n        kind: HCloudMachineTemplate\n        name: hetzner-test-mt\n---\napiVersion: infrastructure.cluster.x-k8s.io/v1beta1\nkind: HCloudMachineTemplate\nmetadata:\n  name: hetzner-test-mt\n  namespace: default\nspec:\n  imageName: ubuntu-22.04\n  type: cx21\n  sshKeys:\n    - name: ssh-key\n---\napiVersion: bootstrap.cluster.x-k8s.io/v1beta1\nkind: K0sWorkerConfigTemplate\nmetadata:\n  name: hetzner-test-machine-config\nspec:\n  template:\n    spec:\n      version: v1.27.2+k0s.0\n      # More details of the worker configuration can be set here\n---\napiVersion: v1\nkind: Secret\ndata:\n  hcloud: &lt;base64 encoded token&gt; \nmetadata:\n  name: hetzner\n</code></pre> <p>In the case of <code>HetznerCluster.spec.controlPlaneEndpoint</code> you can add any valid address. k0smotron will overwrite these automatically once the control plane is up and running. You do need to specify some placeholder address as the <code>HetznerCluster</code> object has those marked as mandatory fields.</p> <p>After applying the manifests to the management cluster and confirming the infrastructure readiness, allow a few minutes for all components to provision. Once complete, your command line should display output similar to this:</p> <pre><code>% kubectl get cluster,machine\nNAME                                   PHASE         AGE     VERSION\ncluster.cluster.x-k8s.io/hetzer-test   Provisioned   3m51s   \n\nNAME                                         CLUSTER        NODENAME   PROVIDERID          PHASE         AGE     VERSION\nmachine.cluster.x-k8s.io/hetzner-test-md-0   hetzner-test              hcloud://12345678   Provisioned   3m50s\n</code></pre> <p>You can also check the status of the cluster deployment with <code>clusterctl describe cluster</code>.</p>"},{"location":"capi-hetzner/#accessing-the-workload-cluster","title":"Accessing the workload cluster","text":"<p>To access the child cluster we can get the kubeconfig for it with <code>clusterctl get kubeconfig hetzner-test</code>. You can then save it to disk and/or import to your favorite tooling like Lens.</p>"},{"location":"capi-hetzner/#deleting-the-cluster","title":"Deleting the cluster","text":"<p>For cluster deletion, do NOT use <code>kubectl delete -f my-hetzner-cluster.yaml</code> as that can result in orphan resources. Instead, delete the top level <code>Cluster</code> object. This approach ensures the proper sequence in deleting all child resources, effectively avoid orphan resources.</p>"},{"location":"capi-kubevirt/","title":"Cluster API - Kubevirt","text":"<p>This example demonstrates how k0smotron can be used with CAPK (Cluster API Provider Kubevirt).</p>"},{"location":"capi-kubevirt/#preparations","title":"Preparations","text":"<p>Before starting this example, ensure that you have met the general prerequisites. </p> <p>To install the latest stable version of Kubevirt you can run:</p> <pre><code>export VERSION=$(curl -s https://storage.googleapis.com/kubevirt-prow/release/kubevirt/kubevirt/stable.txt)\nkubectl create -f https://github.com/kubevirt/kubevirt/releases/download/${VERSION}/kubevirt-operator.yaml\nkubectl create -f https://github.com/kubevirt/kubevirt/releases/download/${VERSION}/kubevirt-cr.yaml\n</code></pre> <p>To initialize the management cluster with Kubevirt infrastructure provider you can run:</p> <pre><code>clusterctl init --core cluster-api --infrastructure kubevirt\n</code></pre> <p>For more details on Cluster API Provider Kubevirt see it's docs.</p>"},{"location":"capi-kubevirt/#nested-virtualization","title":"Nested Virtualization","text":"<p>If your kubernetes nodes are able to support nested virtualization please make sure it is enabled. If your nodes are not able to support nested virtualization you can work around it by running the following.</p> <pre><code>kubectl -n kubevirt patch kubevirt kubevirt --type=merge --patch '{\"spec\":{\"configuration\":{\"developerConfiguration\":{\"useEmulation\":true}}}}'\n</code></pre>"},{"location":"capi-kubevirt/#creating-a-child-cluster","title":"Creating a child cluster","text":"<p>Once all the controllers are up and running, you can apply the cluster manifests containing the specifications of the cluster you want to provision.</p> <p>Here is an example:</p> <pre><code>apiVersion: cluster.x-k8s.io/v1beta1\nkind: Cluster\nmetadata:\n  name: kubevirt-test\nspec:\n  clusterNetwork:\n    pods:\n      cidrBlocks:\n      - 192.168.0.0/16\n    serviceDomain: cluster.local\n    services:\n      cidrBlocks:\n      - 10.128.0.0/12\n  controlPlaneRef:\n    apiVersion: controlplane.cluster.x-k8s.io/v1beta1\n    kind: K0smotronControlPlane\n    name: k0s-test-cp\n  infrastructureRef:\n    apiVersion: infrastructure.cluster.x-k8s.io/v1beta1\n    kind: KubevirtCluster\n    name: kubevirt-test\n---\napiVersion: controlplane.cluster.x-k8s.io/v1beta1\nkind: K0smotronControlPlane # This is the config for the controlplane\nmetadata:\n  name: k0s-test-cp\nspec:\n  version: v1.27.4-k0s.0\n  persistence:\n    type: emptyDir\n  service:\n    type: LoadBalancer\n---\napiVersion: infrastructure.cluster.x-k8s.io/v1alpha1\nkind: KubevirtCluster\nmetadata:\n  name: kubevirt-test\n  annotations:\n    cluster.x-k8s.io/managed-by: k0smotron\nspec:\n  controlPlaneServiceTemplate:\n    spec:\n      type: ClusterIP\n---\napiVersion: cluster.x-k8s.io/v1beta1\nkind: MachineDeployment\nmetadata:\n  name: kubevirt-md\nspec:\n  clusterName: kubevirt-test\n  replicas: 1\n  selector:\n    matchLabels:\n      cluster.x-k8s.io/cluster-name: kubevirt-test\n  template:\n    metadata:\n      labels:\n        cluster.x-k8s.io/cluster-name: kubevirt-test\n    spec:\n      clusterName: kubevirt-test\n      bootstrap:\n        configRef:\n          apiVersion: bootstrap.cluster.x-k8s.io/v1beta1\n          kind: K0sWorkerConfigTemplate\n          name: kubevirt-test-machine-config\n      infrastructureRef:\n        apiVersion: infrastructure.cluster.x-k8s.io/v1alpha1\n        kind: KubevirtMachineTemplate\n        name: kubevirt-test-mt\n      version: v1.27.4\n---\napiVersion: infrastructure.cluster.x-k8s.io/v1alpha1\nkind: KubevirtMachineTemplate\nmetadata:\n  name: kubevirt-test-mt\nspec:\n  template:\n    spec:\n      virtualMachineBootstrapCheck:\n        checkStrategy: ssh\n      virtualMachineTemplate:\n        spec:\n          runStrategy: Always\n          template:\n            spec:\n              domain:\n                cpu:\n                  cores: 1\n                devices:\n                  disks:\n                  - disk:\n                      bus: virtio\n                    name: containervolume\n                  networkInterfaceMultiqueue: true\n                memory:\n                  guest: 1Gi\n              evictionStrategy: External\n              volumes:\n              - containerDisk:\n                  image: quay.io/capk/ubuntu-2204-container-disk:v1.27.14\n                name: containervolume\n---\napiVersion: bootstrap.cluster.x-k8s.io/v1beta1\nkind: K0sWorkerConfigTemplate\nmetadata:\n  name: kubevirt-test-machine-config\nspec:\n  template:\n    spec:\n      version: v1.27.4+k0s.0\n      # More details of the worker configuration can be set here\n</code></pre> <p>After applying the manifests to the management cluster and confirming the infrastructure readiness, allow a few minutes for all components to provision. Once complete, your command line should display output similar to this:</p> <pre><code>% kubectl get cluster,machine\nNAME                                   PHASE         AGE     VERSION\ncluster.cluster.x-k8s.io/kubevirt-test Provisioned   22h   \n\nNAME                                               CLUSTER         NODENAME                  PROVIDERID                           PHASE     AGE     VERSION\nmachine.cluster.x-k8s.io/kubevirt-md-mdvns-l2rxb   kubevirt-test   kubevirt-md-mdvns-l2rxb   kubevirt://kubevirt-md-mdvns-l2rxb   Running   22h     v1.27.4\n</code></pre> <p>You can also check the status of the cluster deployment with <code>clusterctl describe cluster</code>.</p>"},{"location":"capi-kubevirt/#accessing-the-workload-cluster","title":"Accessing the workload cluster","text":"<p>To access the child cluster we can get the kubeconfig for it with <code>clusterctl get kubeconfig kubevirt-test</code>. You can then save it to disk and/or import to your favorite tooling like Lens</p>"},{"location":"capi-kubevirt/#deleting-the-cluster","title":"Deleting the cluster","text":"<p>For cluster deletion, do NOT use <code>kubectl delete -f my-kubevirt-cluster.yaml</code> as that can result in orphan resources. Instead, delete the top level <code>Cluster</code> object. This approach ensures the proper sequence in deleting all child resources, effectively avoid orphan resources.</p>"},{"location":"capi-openstack/","title":"Cluster API - OpenStack","text":"<p>This example demonstrates how k0smotron can be used with CAPO (Cluster API Provider OpenStack).</p>"},{"location":"capi-openstack/#preparations","title":"Preparations","text":"<p>Before starting this example, ensure that you have met the general prerequisites.</p> <p>To initialize the management cluster with OpenStack infrastrcture provider you can run:</p> <pre><code>clusterctl init --infrastructure openstack\n</code></pre> <p>For more details on Cluster API Provider OpenStack see it's docs.</p>"},{"location":"capi-openstack/#openstack-credentials","title":"OpenStack Credentials","text":"<p>To be able to provision the OpenStack provider infrastructre, you will need to setup your OpenStack tenant credentials.</p> <p>Get the openstack Clouds.yaml</p> <p>Download your \u201cOpenStack clouds.yaml file\u201d (Login -&gt; API Access -&gt; Download OpenStack clouds.yaml file)</p> <p>Add \"verify: false\" to your clouds.yaml to avoir having the \"x509: certificate signed by unknown authority\" error. </p> <p>More information here : cluster-api-troubleshooting</p> <pre><code>clouds:\n  openstack:\n    insecure: true\n    verify: false\n    auth:\n      auth_url: https://keystone.yourCloud.yourOrganization.net/\n      username: \"yourUserName\"\n      project_id: \"yourProjectID\"\n      project_name: \"yourProjectName\"\n      project_domain_id: \"yourProjectID\"\n      user_domain_name: \"Default\"\n      password: YourPassWord\n    region_name: \"RegionOne\"\n    interface: \"public\"\n    identity_api_version: 3\n</code></pre> <p>Convert it to base64 to be used in the k0smotron yaml file. See an example below:</p> <pre><code>Y2xvdWRzOgogIG9wZW5zdGFjazoKICAgIGluc2VjdXJlOiB0cnVlCiAgICB2ZXJpZnk6IGZhbHNlCiAgICBhdXRoOgogICAgICBhdXRoX3VybDogaHR0cHM6Ly9rZXlzdG9uZS55b3VyQ2xvdWQueW91ck9yZ2FuaXphdGlvbi5uZXQvCiAgICAgIHVzZXJuYW1lOiAieW91clVzZXJOYW1lIgogICAgICBwcm9qZWN0X2lkOiAieW91clByb2plY3RJRCIKICAgICAgcHJvamVjdF9uYW1lOiAieW91clByb2plY3ROYW1lIgogICAgICBwcm9qZWN0X2RvbWFpbl9pZDogInlvdXJQcm9qZWN0SUQiCiAgICAgIHVzZXJfZG9tYWluX25hbWU6ICJEZWZhdWx0IgogICAgICBwYXNzd29yZDogWW91clBhc3NXb3JkCiAgICByZWdpb25fbmFtZTogIlJlZ2lvbk9uZSIKICAgIGludGVyZmFjZTogInB1YmxpYyIKICAgIGlkZW50aXR5X2FwaV92ZXJzaW9uOiAz\n</code></pre>"},{"location":"capi-openstack/#creating-a-child-cluster","title":"Creating a child cluster","text":"<p>Once all the controllers are up and running, you can apply the cluster manifests containing the specifications of the cluster you want to provision.</p> <p>Here is an example: <pre><code># k0smotron-cluster-with-capo.yaml\napiVersion: v1\ndata:\n  cacert: Cg==\n  clouds.yaml: Y2xvdWRzOgogIG9wZW5zdGFjazoKICAgIGluc2VjdXJlOiB0cnVlCiAgICB2ZXJpZnk6IGZhbHNlCiAgICBhdXRoOgogICAgICBhdXRoX3VybDogaHR0cHM6Ly9rZXlzdG9uZS5pYy1wcy5zc2wubWlyYW50aXMubmV0LwogICAgICB1c2VybmFtZTogIndzb3VhbGhpIgogICAgICBwcm9qZWN0X2lkOiA0MTUzYmFiNDQ2YmY0NDRmYjkzMDY3NzEzODIwNDc1NgogICAgICBwcm9qZWN0X25hbWU6ICJ3c291YWxoaSIKICAgICAgcHJvamVjdF9kb21haW5faWQ6IDQxNTNiYWI0NDZiZjQ0NGZiOTMwNjc3MTM4MjA0NzU2CiAgICAgIHVzZXJfZG9tYWluX25hbWU6ICJEZWZhdWx0IgogICAgICBwYXNzd29yZDogWW91clBhc3NXb3JkCiAgICByZWdpb25fbmFtZTogIlJlZ2lvbk9uZSIKICAgIGludGVyZmFjZTogInB1YmxpYyIKICAgIGlkZW50aXR5X2FwaV92ZXJzaW9uOiAzCg==\nkind: Secret\nmetadata:\n  labels:\n    clusterctl.cluster.x-k8s.io/move: \"true\"\n  name: my-cluster-cloud-config\n  namespace: default\n---\napiVersion: cluster.x-k8s.io/v1beta1\nkind: Cluster\nmetadata:\n  name: cluster-openstack\nspec:\n  clusterNetwork:\n    pods:\n      cidrBlocks:\n      - 192.168.0.0/16\n    serviceDomain: cluster.local\n  controlPlaneRef:\n    apiVersion: controlplane.cluster.x-k8s.io/v1beta1\n    kind: K0smotronControlPlane # This tells that k0smotron should create the controlplane\n    name: cluster-openstack\n  infrastructureRef:\n    apiVersion: infrastructure.cluster.x-k8s.io/v1alpha7\n    kind: OpenStackCluster  # This tells that CAPO should create the the worker\n    name: cluster-openstack\n---\napiVersion: controlplane.cluster.x-k8s.io/v1beta1\nkind: K0smotronControlPlane # This is the config for the controlplane\nmetadata:\n  name: cluster-openstack\nspec:\n  version: v1.27.2-k0s.0\n  persistence:\n    type: emptyDir\n  service:\n    type: LoadBalancer\n    apiPort: 6443\n    konnectivityPort: 8132\n---\napiVersion: infrastructure.cluster.x-k8s.io/v1alpha7\nkind: OpenStackCluster\nmetadata:\n  name: cluster-openstack\n  namespace: default\n  annotations:\n    cluster.x-k8s.io/managed-by: k0smotron # This marks the base infra to be self managed. The value of the annotation is irrelevant, as long as there is a value.\nspec:\n  cloudName: openstack\n  identityRef:\n    kind: Secret\n    name: cluster-openstack-cloud-config\n  nodeCidr: a.b.c.d/24 #This node cidr corresponds to a network already created in OpenStack\n---\napiVersion: cluster.x-k8s.io/v1beta1\nkind: MachineDeployment\nmetadata:\n  labels:\n    cluster.x-k8s.io/cluster-name: cluster-openstack\n  name: cluster-openstack-worker-vms\n  namespace: default\nspec:\n  clusterName: cluster-openstack\n  replicas: 1\n  selector:\n    matchLabels: {}\n  template:\n    metadata:\n      labels:\n        cluster.x-k8s.io/cluster-name: cluster-openstack\n    spec:\n      clusterName: cluster-openstack\n      failureDomain: nova\n      bootstrap:\n        configRef:\n          apiVersion: bootstrap.cluster.x-k8s.io/v1beta1\n          kind: K0sWorkerConfigTemplate\n          name: cluster-openstack-machine-config\n      infrastructureRef:\n        apiVersion: infrastructure.cluster.x-k8s.io/v1alpha7\n        kind: OpenStackMachineTemplate\n        name: cluster-openstack-worker-vm-template\n---\napiVersion: bootstrap.cluster.x-k8s.io/v1beta1\nkind: K0sWorkerConfigTemplate\nmetadata:\n  name: cluster-openstack-machine-config\nspec:\n  template:\n    spec:\n      version: v1.27.2+k0s.0\n      args:\n        - --enable-cloud-provider\n        - --kubelet-extra-args=\"--cloud-provider=external\"\n      # More details of the worker configuration can be set here\n---\napiVersion: infrastructure.cluster.x-k8s.io/v1alpha7\nkind: OpenStackMachineTemplate\nmetadata:\n  name: cluster-openstack-worker-vm-template\n  namespace: default\nspec:\n  template:\n    spec:\n      cloudName: openstack\n      flavor: dev.cfg # your flavor\n      identityRef:\n        kind: Secret\n        name: cluster-openstack-cloud-config\n      image: ubuntu-20.04 # your image\n      sshKeyName: rsa2 # your RSA key name\n      ports:\n      - network:\n          id: YourNetworkID # this corresponds to the network with the cidr provided above a.b.c.d/24\n</code></pre></p> <p>As we are using self-managed infrastructure we need to manually mark the infrastructure ready. This can be accomplished using the following command:</p> <p><pre><code>kubectl patch OpenStackCluster cluster-openstack --type=merge --subresource status --patch 'status: {ready: true}'.\n</code></pre> After applying the manifests to the management cluster and confirming the infrastructure readiness, allow a few minutes for all components to provision. Once complete, your command line should display output similar to this:</p> <pre><code>kubectl get cluster,machine,kmc                                                                                                                   \n\nNAME                                   CLUSTERCLASS   PHASE         AGE     VERSION\ncluster.cluster.x-k8s.io/cluster-openstack                     Provisioned   135m\n\nNAME                                                          CLUSTER       NODENAME   PROVIDERID                                          PHASE         AGE     VERSION\nmachine.cluster.x-k8s.io/cluster-openstack-worker-vms-drjzw-7699d      cluster2                 openstack:///f8f41440-36e6-4e9c-b941-16b95ee95277   Provisioned   135m\n</code></pre> <p>You can also check the status of the cluster deployment with <code>clusterctl</code>: <pre><code>\u276f clusterctl describe cluster cluster3\nNAME                                                                     READY  SEVERITY  REASON                       SINCE  MESSAGE                                                       \nCluster/cluster3                                                         True                                          5d4h                                                                  \n\u251c\u2500ClusterInfrastructure - OpenStackCluster/cluster3                                                                                                                                          \n\u251c\u2500ControlPlane - K0smotronControlPlane/cluster3                                                                                                                                              \n\u2514\u2500Workers                                                                                                                                                           \n    \u2514\u2500Machine/cluster3-worker-vms-929sw-nkhht                            True                                          5d4h                                                                  \n      \u2514\u2500BootstrapConfig - K0sWorkerConfig/cluster3-machine-config-tlg78                                                        \n</code></pre></p>"},{"location":"capi-openstack/#accessing-the-workload-cluster","title":"Accessing the workload cluster","text":"<p>To access the child cluster we can get the kubeconfig for it with <code>clusterctl get kubeconfig cluster-openstack</code>. You can then save it to disk and/or import to your favorite tooling like Lens.</p>"},{"location":"capi-openstack/#deleting-the-cluster","title":"Deleting the cluster","text":"<p>For cluster deletion, do NOT use <code>kubectl delete -f k0smotron-cluster-with-capo.yaml</code> as that can result in orphan resources. Instead, delete the top level <code>Cluster</code> object. This approach ensures the proper sequence in deleting all child resources, effectively avoid orphan resources.</p> <p>To do that, you can use the command <code>kubectl delete cluster cluster-openstack</code></p>"},{"location":"capi-remote/","title":"Cluster API - Remote machine provider","text":"<p>k0smotron servers as a Cluster API provider for remote machines. A \"remote machine\" in this context means a machine (VM, bare metal) which can be remotely connected via SSH.</p> <p>Just like any other Cluster API provider, k0smotron remote machine provider fullfils the Cluster APi contracts and thus can work with any bootstrap providers.</p> <p>Note</p> <p>k0smotron dev team naturally focuses on testing the remote machine provider with k0s related bootstrap provider. If you see issues with any other bootstrap provider, please create issue in the Github repo.</p>"},{"location":"capi-remote/#using-remotemachines","title":"Using <code>RemoteMachine</code>s","text":"<p>To use <code>RemoteMachine</code>s in your cluster, you naturally need the top-level <code>Cluster</code> definition and control plane:</p> <pre><code>apiVersion: cluster.x-k8s.io/v1beta1\nkind: Cluster\nmetadata:\n  name: remote-test\n  namespace: default\nspec:\n  clusterNetwork:\n    pods:\n      cidrBlocks:\n      - 192.168.0.0/16\n    serviceDomain: cluster.local\n    services:\n      cidrBlocks:\n      - 10.128.0.0/12\n  controlPlaneRef:\n    apiVersion: controlplane.cluster.x-k8s.io/v1beta1\n    kind: K0smotronControlPlane\n    name: remote-test\n  infrastructureRef:\n    apiVersion: infrastructure.cluster.x-k8s.io/v1beta1\n    kind: RemoteCluster\n    name: remote-test\n---\napiVersion: controlplane.cluster.x-k8s.io/v1beta1\nkind: K0smotronControlPlane\nmetadata:\n  name: remote-test\n  namespace: default\nspec:\n  version: v1.27.2-k0s.0\n  persistence:\n    type: emptyDir\n  service:\n    type: NodePort\n</code></pre> <p>To use <code>RemoteMachine</code> instances as part of the cluster, we need to initialize a <code>RemoteCluster</code> object. As in this use case there's really nothing we need to configure on the infrastructure, this is merely a \"placeholder\" object to fullfill Cluster API contracts.</p> <pre><code>apiVersion: infrastructure.cluster.x-k8s.io/v1beta1\nkind: RemoteCluster\nmetadata:\n  name: remote-test\n  namespace: default\nspec:\n</code></pre> <p>The bootstrap a <code>Machine</code>, we need to specify the usual Cluster API objects:</p> <pre><code>apiVersion: cluster.x-k8s.io/v1beta1\nkind: Machine\nmetadata:\n  name:  remote-test-0\n  namespace: default\nspec:\n  clusterName: remote-test\n  bootstrap:\n    configRef:\n      apiVersion: bootstrap.cluster.x-k8s.io/v1beta1\n      kind: K0sWorkerConfig\n      name: remote-test-0\n  infrastructureRef:\n    apiVersion: infrastructure.cluster.x-k8s.io/v1beta1\n    kind: RemoteMachine\n    name: remote-test-0\n---\napiVersion: bootstrap.cluster.x-k8s.io/v1beta1\nkind: K0sWorkerConfig\nmetadata:\n  name: remote-test-0\n  namespace: default\nspec:\n  version: v1.27.2+k0s.0\n---\napiVersion: infrastructure.cluster.x-k8s.io/v1beta1\nkind: RemoteMachine\nmetadata:\n  name: remote-test-0\n  namespace: default\nspec:\n  address: 1.2.3.4\n  port: 22\n  user: root\n  sshKeyRef:\n    # This defines which SSH key to use for connecting to the machine. The Secret needs to have key 'value' with the SSH private key in it.\n    name: footloose-key\n</code></pre>"},{"location":"capi-remote/#using-remotemachines-in-machinetemplates-of-higher-level-objects","title":"Using <code>RemoteMachine</code>s in <code>machineTemplate</code>s of higher-level objects","text":"<p>Objects like <code>K0sControlPlane</code> or <code>MachineDeployment</code> use <code>machineTemplate</code> to define the template for the <code>Machine</code> objects they create.  Since k0smotron remote machine provider can't create machines on its own, it works with a pool of pre-created machines.</p> <pre><code>---\napiVersion: infrastructure.cluster.x-k8s.io/v1beta1\nkind: RemoteMachineTemplate\nmetadata:\n  name: remote-test-template\n  namespace: default\nspec:\n  template:\n    spec:\n      pool: default\n---\napiVersion: infrastructure.cluster.x-k8s.io/v1beta1\nkind: PooledRemoteMachine\nmetadata:\n  name: remote-test-0\n  namespace: default\nspec:\n  pool: default\n  machine:\n    address: 1.2.3.4\n    port: 22\n    user: root\n    sshKeyRef:\n      name: footloose-key-0\n---\napiVersion: infrastructure.cluster.x-k8s.io/v1beta1\nkind: PooledRemoteMachine\nmetadata:\n  name: remote-test-1\n  namespace: default\nspec:\n  pool: default\n  machine:\n    address: 2.3.4.5\n    port: 22\n    user: root\n    sshKeyRef:\n      name: footloose-key-1\n</code></pre> <p>Then you can use the <code>RemoteMachineTemplate</code> in the <code>machineTemplate</code> of <code>K0sControlPlane</code>:</p> <p>Control plane endpoint</p> <p>When using <code>RemoteMachine</code>s for control planes, <code>Cluster.spec.controlPlaneEndpoint</code> must be set.</p> <pre><code>apiVersion: controlplane.cluster.x-k8s.io/v1beta1\nkind: K0sControlPlane\nmetadata:\n  name: remote-test\nspec:\n  replicas: 1\n  version: v1.27.1+k0s.0\n  k0sConfigSpec:\n    k0s:\n      apiVersion: k0s.k0sproject.io/v1beta1\n      kind: ClusterConfig\n      metadata:\n        name: k0s\n      spec:\n        api:\n          extraArgs:\n            anonymous-auth: \"true\"\n  machineTemplate:\n    infrastructureRef:\n      apiVersion: infrastructure.cluster.x-k8s.io/v1beta1\n      kind: RemoteMachineTemplate\n      name: remote-test-template\n      namespace: default\n---\napiVersion: cluster.x-k8s.io/v1beta1\nkind: Cluster\nmetadata:\n  name: remote-test\n  namespace: default\nspec:\n  controlPlaneEndpoint: # required for K0sControlPlane\n    host: 1.2.3.4\n    port: 6443\n  clusterNetwork:\n    pods:\n      cidrBlocks:\n        - 192.168.0.0/16\n    serviceDomain: cluster.local\n    services:\n      cidrBlocks:\n        - 10.128.0.0/12\n  controlPlaneRef:\n    apiVersion: controlplane.cluster.x-k8s.io/v1beta1\n    kind: K0sControlPlane\n    name: remote-test\n  infrastructureRef:\n    apiVersion: infrastructure.cluster.x-k8s.io/v1beta1\n    kind: RemoteCluster\n    name: remote-test\n\n\u2026 # other objects omitted for brevity\n</code></pre> <p>When CAPI controller creates a <code>RemoteMachine</code> from template object for the <code>K0sControlPlane</code>, k0smotron will pick one of the <code>PooledRemoteMachine</code> objects and use it's values for the <code>RemoteMachine</code> object.</p>"},{"location":"capi-remotemachine-okta-asa/","title":"Using Remote Machine with Okta ASA","text":"<p>Okta Advanced Server Access (ASA) is a solution that enables secure access to SSH servers. This guide will walk you through the process of preparing your management cluster to use the Remote Machine provider with Okta ASA.</p>"},{"location":"capi-remotemachine-okta-asa/#prerequisites","title":"Prerequisites","text":"<ul> <li>Setup and integrate Okta Advanced Server Access App to your Okta account</li> <li>Install the Okta ASA agent on your target SSH server.</li> <li>Create a service user and an API key.</li> </ul>"},{"location":"capi-remotemachine-okta-asa/#creating-an-image","title":"Creating an image","text":"<p>Here is an example of a Dockerfile that installs the Okta ASA server and client agents that will user for the Remote Machine provider:</p> <pre><code>FROM ubuntu:22.04\n\nRUN apt-get update &amp;&amp; apt-get install -y \\\n      curl \\\n      gpg \\\n      ssh\n\n# Obtain the Okta ASA agent key and add the repository\nRUN curl -fsSL https://dist.scaleft.com/GPG-KEY-OktaPAM-2023 | gpg --dearmor | tee /usr/share/keyrings/oktapam-2023-archive-keyring.gpg &gt; /dev/null \\\n    &amp;&amp; echo \"deb [signed-by=/usr/share/keyrings/oktapam-2023-archive-keyring.gpg] https://dist.scaleft.com/repos/deb jammy okta\" | tee /etc/apt/sources.list.d/oktapam-stable.list \\\n\n# Install the Okta ASA agents    \nRUN apt-get update &amp;&amp; apt-get install -y \\\n      scaleft-client-tools \\\n      # Mute the error about missing systemd from the post-install script\n      scaleft-server-tools | true \\\n\n# Configure the ssh client to use the proxy \nRUN mkdir -p ~/.ssh/ &amp;&amp; sft ssh-config &gt;&gt; ~/.ssh/config\n\n# Add the entrypoint script.\n# The script starts the Okta ASA server agent, waits a bit, and then runs the command passed to the container.\nRUN echo '#!/bin/bash \\n\\\nsftd 2&gt;1 &amp; \\n\\\nsleep 10 \\n\\\nexec $@ ' &gt;&gt; /entrypoint.sh &amp;&amp; chmod +x /entrypoint.sh\n\nENTRYPOINT [\"/entrypoint.sh\"]\n</code></pre>"},{"location":"capi-remotemachine-okta-asa/#server-enrollment","title":"Server enrollment","text":"<p>Okta ASA agent needs to be enrolled to the Okta ASA service. To do that, first we need to run <code>sftd</code> once with the enrollment token.  The token can be obtained from the Okta ASA console. In this example we put the token to the Kubernetes secret:</p> <pre><code>---\napiVersion: v1\nkind: Secret\nmetadata:\n  name: okta-asa-enrollment-token\ndata:\n  enrollment.token: &lt;REDACTED&gt;\n</code></pre>"},{"location":"capi-remotemachine-okta-asa/#create-sft-and-sftd-configs","title":"Create sft and sftd configs","text":"<pre><code>---\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: okta-asa-config\n  namespace: default\ndata:\n  sftd.yaml: |\n    CanonicalName: \"k0smotron-job-demo-runner\"\n  sft.conf: |\n    # Allow authentication as a Service User\n    section \"service_auth\" {\n      enable = true\n    }\n</code></pre>"},{"location":"capi-remotemachine-okta-asa/#create-a-persistentvolumeclaim","title":"Create a PersistentVolumeClaim","text":"<p>We will use a PVC to store the Okta ASA agent state. This is required for the agent to work properly.</p> <pre><code>---\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: okta-asa-demo-pvc\nspec:\n  accessModes:\n    - ReadWriteOnce\n  resources:\n    requests:\n      storage: 200Mi\n</code></pre>"},{"location":"capi-remotemachine-okta-asa/#create-a-pod-to-enroll-the-runner","title":"Create a pod to enroll the runner","text":"<p>Run the pod with the enrollment token and the PVC attached. The pod will enroll the runner to the Okta ASA service and then sleep forever.</p> <pre><code>apiVersion: v1\nkind: Pod\nmetadata:\n  name: okta-asa-demo-pod\n  namespace: default\nspec:\n  containers:\n    - name: okta-asa\n      image: makhov/okta-asa-demo:latest\n      args:\n        - sleep\n        - infinity\n      env:\n      volumeMounts:\n        - name: config\n          mountPath: /etc/sft/sftd.yaml\n          subPath: sftd.yaml\n        - name: sftd-lib\n          mountPath: /var/lib/sftd\n        - name: enrollment-token\n          mountPath: /var/lib/sftd/enrollment.token\n          subPath: enrollment.token\n  volumes:\n    - name: config\n      configMap:\n        name: okta-asa-config\n    - name: enrollment-token\n      secret:\n        secretName: okta-asa-enrollment-token\n    - name: sftd-lib\n      persistentVolumeClaim:\n        claimName: okta-asa-demo-pvc\n</code></pre> <p>Once the <code>k0smotron-job-demo-runner</code> appears in the Okta ASA console, we can remove the pod, enrollment token and start using the runner.</p> <pre><code>$ kubectl delete pod okta-asa-demo-pod\n$ kubectl delete secret okta-asa-enrollment-token\n</code></pre> <p>The enrolment process should be done only once. The runner will be available in the Okta ASA console and can be used for the RemoteMachine provider.</p>"},{"location":"capi-remotemachine-okta-asa/#create-a-remotemachine","title":"Create a RemoteMachine","text":"<p>Now we can create a RemoteMachine that will run the pod to setup the machine.</p> <pre><code>---\napiVersion: infrastructure.cluster.x-k8s.io/v1beta1\nkind: RemoteMachine\nmetadata:\n  name: remote-test-0\n  namespace: default\nspec:\n  address: &lt;server-name&gt;\n  useSudo: true\n  provisionJob:\n    sshCommand: \"ssh\"\n    scpCommand: \"scp\"\n    jobSpecTemplate:\n      spec:\n        containers:\n          - name: okta-asa\n            image: makhov/okta-asa-demo:latest\n            imagePullPolicy: Always\n            volumeMounts:\n              - name: config\n                mountPath: /etc/sft/sftd.yaml\n                subPath: sftd.yaml\n              - name: config\n                mountPath: /root/.config/ScaleFT/sft.conf\n                subPath: sft.conf\n              - name: sftd-lib\n                mountPath: /var/lib/sftd\n        volumes:\n          - name: config\n            configMap:\n              name: okta-asa-config\n          - name: sftd-lib\n            persistentVolumeClaim:\n              claimName: okta-asa-demo-pvc\n        restartPolicy: Never\n</code></pre>"},{"location":"capi-remotemachine-teleport/","title":"Using Remote Machine with Teleport","text":"<p>This guide will walk you through the process of preparing your management cluster to use the Remote Machine provider with Teleport.</p>"},{"location":"capi-remotemachine-teleport/#prerequisites","title":"Prerequisites","text":"<p>To use the Remote Machine provider with Teleport, you need to have a Teleport cluster up and running. You can follow the official guide to get started. Also, you need to have <code>tctl</code> installed on your desktop.</p>"},{"location":"capi-remotemachine-teleport/#creating-service-account","title":"Creating Service Account","text":"<p>First, you need to create a service account for Teleport user. It requires an admin access to the secrets since it creates and regularly updates a secret with the Teleport credentials.</p> <pre><code>apiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: k0smotron-teleport-bot\n  namespace: default\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: Role\nmetadata:\n  name: secrets-admin\n  namespace: default\nrules:\n  - apiGroups: [\"\"]\n    resources: [\"secrets\"]\n    verbs: [\"*\"]\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: RoleBinding\nmetadata:\n  name: k0smotron-teleport-bot-secrets-admin\n  namespace: default\nsubjects:\n  - kind: ServiceAccount\n    name: teleport-bot\nroleRef:\n  kind: Role\n  name:  secrets-admin\n  apiGroup: rbac.authorization.k8s.io\n</code></pre>"},{"location":"capi-remotemachine-teleport/#creating-teleport-bot-user","title":"Creating Teleport Bot User","text":"<p>Next, you need to create a Teleport Bot user for the service account. Since we use a <code>kubernetes</code> auth method for Teleport, first we need to figure out the cluster's JWKS.  It will be used by the Teleport Cluster to verify the JWT tokens.</p> <pre><code>$ kubectl proxy -p 8080\n$ curl http://localhost:8080/openid/v1/jwks\n{\"keys\":[&lt;REDACTED&gt;]}\n</code></pre> <p>Create <code>teleport-role.yaml</code>. Don't forget to specify correct permissions for the role, see Teleport documentation.</p> <pre><code>---\nkind: role\nversion: v5\nmetadata:\n  name: k0smotron-bot\nspec:\n  allow: {}\n  deny: {}\n  options: {}\n</code></pre> <pre><code>$ tctl create -f teleport-role.yaml\n</code></pre> <p>Now, we can create a Teleport Bot user. Create <code>k0smotron-bot-token.yaml</code></p> <pre><code>kind: token\nversion: v2\nmetadata:\n  # name will be specified in the `tbot` to use this token\n  name: k0smotron-bot\nspec:\n  roles: [Bot]\n  # bot_name will match the name of the bot created later in this guide.\n  bot_name: k0smotron\n  join_method: kubernetes\n  kubernetes:\n    type: static_jwks\n    static_jwks:\n      jwks: |\n        {\"keys\":[&lt;REDACTED&gt;]}\n    allow:\n    - service_account: \"default:k0smotron-teleport-bot\"\n</code></pre> <pre><code>$ tctl create -f k0smotron-bot-token.yaml\n</code></pre> <p>Finally, create a bot user:</p> <pre><code>$ tctl bots add k0smotron --token k0smotron-bot --roles k0smotron-bot\n</code></pre>"},{"location":"capi-remotemachine-teleport/#creating-a-deployment","title":"Creating a deployment","text":"<pre><code>apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: k0smotron-tbot-config\n  namespace: default\ndata:\n  tbot.yaml: |\n    version: v2\n    onboarding:\n      join_method: kubernetes\n      token: k0smotron-bot # name of the join token\n    storage:\n      type: memory\n    # ensure this is configured to the address of your Teleport Proxy or\n    # Auth Server. Prefer the address of the Teleport Proxy.\n    auth_server: teleport.example.com:443\n    # in outputs we specify the destination of the identity. In our case we will put it into the kubernetes secret.\n    outputs:\n    - type: identity\n      destination:\n        type: kubernetes_secret\n        name: k0smotron-bot-identity\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: k0smotron-tbot\n  namespace: default\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app.kubernetes.io/name: k0smotron-tbot\n  template:\n    metadata:\n      labels:\n        app.kubernetes.io/name: k0smotron-tbot\n    spec:\n      containers:\n        - name: tbot\n          image: public.ecr.aws/gravitational/teleport:14.3.3\n          command:\n            - tbot\n          args:\n            - start\n            - -c\n            - /config/tbot.yaml\n          env:\n            # POD_NAMESPACE is required for the kubernetes_secret` destination type to work correctly.\n            - name: POD_NAMESPACE\n              valueFrom:\n                fieldRef:\n                  fieldPath: metadata.namespace\n            # KUBERNETES_TOKEN_PATH specifies the path to the service account JWT to use for joining.\n            - name: KUBERNETES_TOKEN_PATH\n              value: /var/run/secrets/tokens/join-token\n          volumeMounts:\n            - mountPath: /config\n              name: config\n            - mountPath: /var/run/secrets/tokens\n              name: join-sa-token\n      serviceAccountName: tbot\n      volumes:\n        - name: config\n          configMap:\n            name: k0smotron-tbot-config\n        - name: join-sa-token\n          projected:\n            sources:\n              - serviceAccountToken:\n                  path: join-token\n                  expirationSeconds: 600\n                  # `teleport.example.com` must be replaced with the _name_ of your Teleport cluster.\n                  audience: teleport.example.com\n</code></pre> <p>More information about Teleport's Machine ID and how to set it up with Kubernetes can be found here. Also, you can use this example as a reference.</p>"},{"location":"capi-remotemachine-teleport/#create-a-remotemachine","title":"Create a RemoteMachine","text":"<p>Now we can create a RemoteMachine that will run the pod to setup the machine.</p> <pre><code>apiVersion: infrastructure.cluster.x-k8s.io/v1beta1\nkind: RemoteMachine\nmetadata:\n  name: remote-test-0\n  namespace: default\nspec:\n  address: &lt;server-name&gt;\n  useSudo: false\n  provisionJob:\n    sshCommand: \"tsh -i /identity-output/identity --proxy teleport.example.com:443 ssh\"\n    scpCommand: \"tsh -i /identity-output/identity --proxy teleport.example.com:443 scp\"\n    jobSpecTemplate:\n      spec:\n        containers:\n          - name: teleport\n            image: public.ecr.aws/gravitational/teleport:14.3.3\n            volumeMounts:\n             - name: identity-output\n               mountPath: /identity-output\n        volumes:\n          - name: identity-output\n            secret:\n              secretName: identity-output\n        restartPolicy: Never\n</code></pre>"},{"location":"capi-vsphere/","title":"Cluster API - VMware","text":"<p>This example demonstrates how k0smotron can be used with CAPV (Cluster API Provider vSphere).</p> <p>Table of Contents</p> <ul> <li>Cluster API - VMware<ul> <li>Setting the scene</li> <li>Preparations<ul> <li>Configure clusterctl on the local machine</li> <li>Deploy Cluster API in the management cluster</li> <li>(Optional) IPAM IP pool creation</li> </ul> </li> <li>(Optional) MetalLB as Load Balancer solution in the management cluster</li> <li>Operating child clusters<ul> <li>Generate a child cluster definition using the template<ul> <li>Control plane in Pods</li> <li>Control plane in VMs</li> </ul> </li> <li>Deploy the child clusters</li> <li>Observe the child cluster objects</li> <li>Deleting the child cluster</li> </ul> </li> </ul> </li> </ul>"},{"location":"capi-vsphere/#setting-the-scene","title":"Setting the scene","text":"<p>To use Cluster API we will bring three environments: 1. Local machine -- the machine from where some of the commands will be executed 2. Management cluster -- Kubernetes cluster that will be used to control and manage child clusters 3. Child cluster -- k0s cluster that will be spinned up with the help of k0smotron</p>"},{"location":"capi-vsphere/#preparations","title":"Preparations","text":"<p>Before starting this example, ensure that you have met the general prerequisites.</p>"},{"location":"capi-vsphere/#configure-clusterctl-on-the-local-machine","title":"Configure clusterctl on the local machine","text":"<ol> <li>Create the cluster-api configuration file in your development machine. <pre><code>mkdir ~/.cluster-api\nvim ~/.cluster-api/clusterctl.yaml\n</code></pre></li> <li>Put values according to your environment in this file:</li> </ol> <pre><code>## -- Controller settings -- ##\nVSPHERE_USERNAME: \"vi-admin@vsphere.local\"                    # The username used to access the remote vSphere endpoint\nVSPHERE_PASSWORD: \"admin!23\"                                  # The password used to access the remote vSphere endpoint\n\n## -- Required workload cluster default settings -- ##\nVSPHERE_SERVER: \"10.0.0.1\"                                    # The vCenter server IP or FQDN\nVSPHERE_DATACENTER: \"SDDC-Datacenter\"                         # The vSphere datacenter to deploy the management cluster on\nVSPHERE_DATASTORE: \"DefaultDatastore\"                         # The vSphere datastore to deploy the management cluster on\nVSPHERE_NETWORK: \"VM Network\"                                 # The VM network to deploy the management cluster on\nVSPHERE_RESOURCE_POOL: \"*/Resources\"                          # The vSphere resource pool for your VMs\nVSPHERE_FOLDER: \"vm\"                                          # The VM folder for your VMs. Set to \"\" to use the root vSphere folder\nVSPHERE_TEMPLATE: \"ubuntu-1804-kube-v1.17.3\"                  # The VM template to use for your management cluster.\nCONTROL_PLANE_ENDPOINT_IP: \"192.168.9.230\"                    # the IP that kube-vip is going to use as a control plane endpoint\nVIP_NETWORK_INTERFACE: \"ens192\"                               # The interface that kube-vip should apply the IP to. Omit to tell kube-vip to autodetect the interface.\nVSPHERE_TLS_THUMBPRINT: \"...\"                                 # sha1 thumbprint of the vcenter certificate: openssl x509 -sha1 -fingerprint -in ca.crt -noout\nEXP_CLUSTER_RESOURCE_SET: \"true\"                              # This enables the ClusterResourceSet feature that we are using to deploy CSI\nVSPHERE_SSH_AUTHORIZED_KEY: \"ssh-rsa AAAAB3N...\"              # The public ssh authorized key on all machines in this cluster.\n                                                              #  Set to \"\" if you don't want to enable SSH, or are using another solution.\nVSPHERE_STORAGE_POLICY: \"\"                                    # This is the vSphere storage policy. Set it to \"\" if you don't want to use a storage policy.\n\"CPI_IMAGE_K8S_VERSION\": \"v1.29.0\"                            # The version of the vSphere CPI image to be used by the CPI workloads\n                                                              #  Keep this close to the minimum Kubernetes version of the cluster being created.\nCSI_INSECURE: \"1\"\nK0S_VERSION: \"v1.29.1+k0s.1\"\nK0S_CP_VERSION: \"v1.29.1-k0s.1\"\nNODE_IPAM_POOL_NAME: \"ipam-ip-pool\"\nNODE_IPAM_POOL_API_GROUP: \"ipam.cluster.x-k8s.io\"\nNODE_IPAM_POOL_KIND: \"InClusterIPPool\"\nNAMESERVER: \"8.8.8.8\"\nproviders:\n  - name: incluster\n    url: https://github.com/kubernetes-sigs/cluster-api-ipam-provider-in-cluster/releases/latest/ipam-components.yaml\n    type: IPAMProvider\n</code></pre>"},{"location":"capi-vsphere/#deploy-cluster-api-in-the-management-cluster","title":"Deploy Cluster API in the management cluster","text":"<p>From your local machine run the following command to initialize the management cluster with vSphere infrastructure provider and additional IPAM provider:</p> <pre><code>clusterctl init --infrastructure vsphere --ipam incluster\n</code></pre> <p>NOTE: In order to initialize Cluster API on you Kubernetes management cluster, you need to have kubeconfig (or set context with <code>kubectl</code>) to the cluster.</p> <p>NOTE: IPAM provider is optional here. If you're using network that has DHCP enabled, you can remove IPAM provider initialization.</p> <p>For more details on Cluster API Provider vSphere see it's docs.</p>"},{"location":"capi-vsphere/#optional-ipam-ip-pool-creation","title":"(Optional) IPAM IP pool creation","text":"<ol> <li>Define IP pool that will be used to assign IP addresses to a child cluster machines in <code>capi-ipam.yaml</code>:</li> </ol> <pre><code>apiVersion: ipam.cluster.x-k8s.io/v1alpha1\nkind: InClusterIPPool\nmetadata:\n  name: ipam-ip-pool\nspec:\n  subnet: 192.168.117.0/24\n  gateway: 192.168.117.1\n  start: 192.168.117.152\n  end: 192.168.117.180\n</code></pre> <ol> <li>Deploy the IPAM configuration:  <pre><code>kubectl apply -f capi-ipam.yaml\n</code></pre></li> </ol>"},{"location":"capi-vsphere/#optional-metallb-as-load-balancer-solution-in-the-management-cluster","title":"(Optional) MetalLB as Load Balancer solution in the management cluster","text":"<p>You may require to deploy MetalLB if you don't have Load Balancer solution in your management cluster.  NOTE: Load Balancer service type will be used only for the scenario, when you put you k0s control plane in pods (see Control plane in Pods section)</p> <p>Classic vSphere does not have a built-in solution that can be leveraged on Kubernetes level to create LoadBalancer service type. In order to make it possible, one of the common solution is to use MetalLB (please find it's docs here)</p> <ol> <li>Configure MetalLB IP address pool which will be used to assing IP addresses from (please adapt it for your network):</li> </ol> <pre><code>apiVersion: metallb.io/v1beta1\nkind: IPAddressPool\nmetadata:\n  name: example-pool\n  namespace: metallb-system\nspec:\n  addresses:\n  - 192.168.10.100-192.168.10.150\n</code></pre> <ol> <li>Create MetalLB L2advertisement object:</li> </ol> <pre><code>apiVersion: metallb.io/v1beta1\nkind: L2Advertisement\nmetadata:\n  annotations:\n  name: example-l2-adv\n  namespace: metallb-system\nspec:\n  ipAddressPools:\n  - example-pool\n</code></pre>"},{"location":"capi-vsphere/#operating-child-clusters","title":"Operating child clusters","text":"<p>Once all the controllers are up and running in the management cluster, you can apply the cluster manifests containing the specifications of the child cluster you want to provision.</p>"},{"location":"capi-vsphere/#generate-a-child-cluster-definition-using-the-template","title":"Generate a child cluster definition using the template","text":"<p>There are two options for child cluster control plane with k0smotron:</p>"},{"location":"capi-vsphere/#control-plane-in-pods","title":"Control plane in Pods:","text":"<p>If you want to have child cluster control plane in a Pods, use the following template: </p> <pre><code>clusterctl generate cluster my-cluster --control-plane-machine-count 1 --worker-machine-count 1 --from k0scluster-tmpl-cp-in-pods.yaml &gt; my-cluster.yaml\n</code></pre>"},{"location":"capi-vsphere/#control-plane-in-vms","title":"Control plane in VMs:","text":"<p>If you want to have child cluster control plane in separate VMs, use the following template (Control Plane will consist of 3 nodes):</p> <pre><code>clusterctl generate cluster my-cluster --worker-machine-count 1 --from k0scluster-tmpl-cp-in-vms.yaml &gt; my-cluster.yaml \n</code></pre>"},{"location":"capi-vsphere/#deploy-the-child-clusters","title":"Deploy the child clusters","text":"<ol> <li> <p>Deploy the child cluster: <code>kubectl apply -f my-cluster.yaml</code>. You can check the deployment status in the management cluster.</p> </li> <li> <p>To obtain kubeconfig of the child cluster execute this command: <code>kubectl get secret my-cluster-kubeconfig -o jsonpath='{.data.value}' | base64 -d &gt; ~/.kube/child.conf</code></p> </li> </ol>"},{"location":"capi-vsphere/#observe-the-child-cluster-objects","title":"Observe the child cluster objects","text":"<pre><code># kubectl get cluster,machine,kmc                                                                                                                   \n\nNAME                                  CLUSTERCLASS   PHASE         AGE   VERSION\ncluster.cluster.x-k8s.io/my-cluster                  Provisioned   13h   \n\nNAME                                                   CLUSTER      NODENAME                      PROVIDERID                                       PHASE         AGE   VERSION\nmachine.cluster.x-k8s.io/my-cluster-0                  my-cluster                                 vsphere://4215e794-c281-5cde-8193-95df9521cf08   Provisioned   13h   v1.29.1\nmachine.cluster.x-k8s.io/my-cluster-1                  my-cluster                                 vsphere://4215efc3-303e-938d-3787-c4cc6143f722   Provisioned   13h   v1.29.1\nmachine.cluster.x-k8s.io/my-cluster-2                  my-cluster                                 vsphere://4215b207-1052-e130-54fe-fd124594ed2b   Provisioned   13h   v1.29.1\nmachine.cluster.x-k8s.io/my-cluster-md-0-vr6s6-ndl64   my-cluster   my-cluster-md-0-vr6s6-ndl64   vsphere://4215eae5-3456-9bc5-4b56-b00dda520b7d   Running       13h   v1.29.1+k0s.1\n</code></pre> <p>You can also check the status of the cluster deployment with <code>clusterctl</code>: <pre><code># clusterctl describe cluster my-cluster\nNAME                                                        READY  SEVERITY  REASON  SINCE  MESSAGE                             \nCluster/my-cluster                                          True                     13h                                         \n\u251c\u2500ClusterInfrastructure - VSphereCluster/my-cluster         True                     13h                                         \n\u251c\u2500ControlPlane - K0sControlPlane/my-cluster                                                                                      \n\u2502 \u2514\u25003 Machines...                                           True                     13h    See my-cluster-0, my-cluster-1, ...  \n\u2514\u2500Workers                                                                                                                        \n  \u2514\u2500MachineDeployment/my-cluster-md-0                       True                     12h                                         \n    \u2514\u2500Machine/my-cluster-md-0-vr6s6-ndl64                   True                     12h                                         \n      \u2514\u2500BootstrapConfig - K0sWorkerConfig/my-cluster-htrzb                                                          \n</code></pre></p>"},{"location":"capi-vsphere/#deleting-the-child-cluster","title":"Deleting the child cluster","text":"<p>For cluster deletion, do NOT use <code>kubectl delete -f my-cluster.yaml</code> as that can result in orphan resources. Instead, delete the top level <code>Cluster</code> object. This approach ensures the proper sequence in deleting all child resources, effectively avoid orphan resources.</p> <p>To do that, you can use the command <code>kubectl delete cluster my-cluster</code></p>"},{"location":"cluster-api/","title":"k0smotron as Cluster API provider","text":"<p>k0smotron can act as a Cluster API provider in several different roles.</p>"},{"location":"cluster-api/#control-plane-provider-in-cluster","title":"Control Plane provider - in-cluster","text":"<p>When k0smotron acts as a control plane provider it will create and manage the cluster control plane within the management cluster, just as in the standalone case.</p>"},{"location":"cluster-api/#control-plane-out-of-cluster","title":"Control Plane - out-of-cluster","text":"<p>k0smotron can function also as a \"traditional\" contol plane provider where the control plane is running on CAPI managed <code>Machines</code>s.</p>"},{"location":"cluster-api/#bootstrap-provider","title":"Bootstrap provider","text":"<p>k0smotron can also act as a bootstrap provider for worker nodes you want to manage via Cluster API. When k0smotron detects a new node that needs to be added to the cluster it will automatically create a new join token needed for the node and creates the provisioning cloud-init script for the node. Once Cluster API controllers sees the node initialization script in place (in a secret) the infrastructure provider will create the needed resources (usually VMs in cloud provider infrastructure) with the k0smotron created cloud-init script.</p>"},{"location":"cluster-api/#remote-machine-provider","title":"Remote Machine provider","text":"<p>k0smotron also provides a ClusterAPI provider to manage and bootstrap cluster <code>Machines</code> remotely via SSH connection. This allows managing the clusters in environment where there's no existing ClusterAPi provider available. Such environments could be for example bare metal environments.</p>"},{"location":"cluster-api/#cluster-autoscaling","title":"Cluster autoscaling","text":"<p>Cluster Autoscaler works with ClusterAPI. You need to deploy an \"instance\" of autoscaler per child cluster in order for it to work properly. If you deploy autoscaler via Helm, here's some values to look out:</p> Value Why? <code>autodiscovery.clusterName</code> Select the child cluster you want to autoscale. E.g. <code>my-cluster</code> <code>cloudProvider</code> Set to <code>clusterapi</code> to make autoscaler work with ClusterAPI <code>clusterAPIKubeconfigSecret</code> Set to the kubeconfig secret created by CAPI. E.g. <code>my-cluster-kubeconfig</code> <code>clusterAPIMode</code> Set to <code>kubeconfig-incluster</code>. Essentially this tells that the child cluster API is accessed with the kubeconfig from the secret and management cluster via <code>incluster</code> kubeconfig <p>RBAC finetuning needed with Helm deployed autoscaler</p> <p>The Helm chart does not take into account the need for autoscaler to access the implementation specific resources in <code>infrastructure.cluster.x-k8s.io</code> group. To fix that you need to modify* the <code>ClusterRole</code> to include e.g.</p> <pre><code>- verbs:\n   - get\n   - list\n   - update\n   - watch\n apiGroups:\n   - infrastructure.cluster.x-k8s.io\n resources:\n   - '*' # You can of course limit this to your specific infrastructure types only, e.g. `AWSMachineDeployment` etc.\n</code></pre> <p>*) Happy to get feedback whether there's a better workaround for this.</p>"},{"location":"cluster/","title":"Create a cluster","text":"<p>After you install k0smotron as described in the Installation section, you can start creating your Kubernetes control planes.</p> <p>To create a cluster:</p> <ol> <li> <p>Create the <code>Cluster</code> object:</p> <pre><code>cat &lt;&lt;EOF | kubectl create -f-\napiVersion: k0smotron.io/v1beta1\nkind: Cluster\nmetadata:\n   name: &lt;cluster-name&gt;\nspec: null\nEOF\n</code></pre> <p>This triggers the k0smotron controller manager to set up the control plane  in pods.</p> </li> <li> <p>Once k0smotron finishes setting up the cluster, obtain the admin access    kubeconfig:</p> <pre><code>kubectl get secret &lt;cluster-name&gt;-kubeconfig -o jsonpath='{.data.value}' | base64 -d &gt; ~/.kube/child.conf\n</code></pre> <p>Depending on your configuration, the admin kubeconfig may not be pointing  to the correct address. If the kubeconfig does not work by default,  set the correct value for <code>&lt;server-URL&gt;</code>:</p> <pre><code>apiVersion: v1\nclusters:\n- cluster:\n    server: &lt;server-URL&gt;\n    certificate-authority-data: &lt;redacted&gt;\n  name: k0s\ncontexts:\n- context:\n    cluster: k0s\n    user: admin\n  name: k0s\ncurrent-context: k0s\nkind: Config\npreferences: {}\nusers:\n- name: admin\n  user:\n    client-certificate-data: &lt;redacted&gt;\n    client-key-data: &lt;redacted&gt;\n</code></pre> </li> </ol> <p>Once your control plane is ready, you can start joining worker nodes into the newly created control plane.</p>"},{"location":"commercial-support/","title":"Commercial support","text":"<p>Commercial support for k0smotron is offered by Mirantis Inc..</p> <p>Mirantis supports k0smotron three ways:</p> <ul> <li>LabCare: 8 x 5 (M-F) business hours support. For non-production workloads</li> <li>Opscare: 24 x 7 support with 30-minute response-time SLA for critical issues.</li> <li>Opscare Plus: Fully-managed proactive support, with 15-minute response-time SLA for critical issues.</li> </ul> <p>k0smotron support includes support for k0s, making use of k0s in k0smotron contexts effectively free.</p> <p>If you are interested in commercial support for k0smotron check out our support description and please contact us for further details.</p>"},{"location":"configuration/","title":"Configuration","text":"<p>K0smotron managed control planes are managed using custom resource objects.</p> <pre><code>apiVersion: k0smotron.io/v1beta1\nkind: Cluster\nmetadata:\n  name: k0smotron-test\nspec:\n  replicas: 1\n  image: k0sproject/k0s\n  version: v1.27.1-k0s.0\n  service:\n    type: NodePort\n    apiPort: 30443\n    konnectivityPort: 30132\n  persistence:\n    type: emptyDir\n</code></pre> <p>For full reference of the fields check out the reference docs.</p>"},{"location":"configuration/#persistence","title":"Persistence","text":"<p>K0smotron persists data related to each Cluster. Specifically, it persists the <code>/var/lib/k0s</code> directory of the k0s controller which is the default data directory used by k0s. </p> <p>The <code>/var/lib/k0s</code> directory contains essential data for the operation of the k0s controller, but its growth over time is primarily driven by the addition of small manifest files. Since these manifests are lightweight and in text format, the directory tends to grow gradually and not excessively. Typically, 250 MB of space is sufficient to handle its growth, as the main additions are these small manifests, keeping the overall size manageable.</p> <p>The type of persistence used for this can be configurable via <code>spec.persistence</code>. For more information, check out the reference docs on Cluster persistence.</p>"},{"location":"configuration/#k0s-configuration","title":"K0s configuration","text":"<p>K0smotron allows you to configure k0s via <code>spec.k0sConfig</code> field. If empty, the default configuration will be used.</p> <p>Refer to k0s docs for a reference on k0s configuration.</p> <p>Note: Some fields will be overwritten by k0smotron. K0smotron will set the following fields:</p> <ul> <li><code>spec.k0sConfig.spec.api.externalAddress</code> will be set to the value of <code>spec.externalAddress</code> if <code>spec.externalAddress</code> is set.     If not, k0smotron will use load balancer IP or try to detect <code>externalAddress</code> out of nodes IP addresses. </li> <li><code>spec.k0sConfig.spec.api.port</code> will be set to the value of <code>spec.service.apiPort</code>.</li> <li><code>spec.k0sConfig.spec.konnectivity.port</code> will be set to the value of <code>spec.service.konnectivityPort</code>.</li> <li><code>spec.k0sConfig.spec.storage.kine.dataSource</code> will be set to the value of <code>spec.kineDataSourceURL</code> if <code>spec.kineDataSourceURL</code> is set.    <code>spec.k0sConfig.spec.storage.type</code> will be set to <code>kine</code>.</li> </ul>"},{"location":"etcd/","title":"Etcd configuration","text":"<p>k0smotron in HCP mode deploys an etcd cluster to store the state of the control plane. The etcd cluster is deployed as a StatefulSet with odd number of replicas to ensure quorum. For example:</p> Control Plane replicas etcd replicas 1 1 2 3 3 3 4 5 5 5 \u2026 \u2026"},{"location":"etcd/#default-configuration","title":"Default configuration","text":"<p>The etcd cluster is deployed with the following default configuration options:</p> etcd flag default value --auto-compaction-mode=periodic periodic --auto-compaction-retention 5m --snapshot-count 10000"},{"location":"etcd/#customizing-etcd-configuration","title":"Customizing etcd configuration","text":"<p>k0smotron supports passing (and overriding default) etcd configuration flags to the etcd cluster by setting the <code>spec.etcd.args</code> field in the <code>Cluster</code> resource. For example:</p> <pre><code>apiVersion: k0smotron.io/v1beta1\nkind: Cluster\nmetadata:\n  name: k0smotron-test\nspec:\n  replicas: 3\n  etcd:\n    args:\n      - --auto-compaction-mode=periodic\n      - --auto-compaction-retention=15m\n      - --snapshot-count=20000\n</code></pre>"},{"location":"etcd/#defragmentation","title":"Defragmentation","text":"<p>k0smotron supports running etcd defragmentation job periodically. The defragmentation job is disabled by default. To enable the defragmentation job, set the <code>spec.etcd.defragJob.enabled</code> field to <code>true</code> in the <code>Cluster</code> resource. If enabled, by default the defragmentation job runs every day at 12:00. You can customize the schedule and the rule for the defragmentation job by setting the <code>spec.etcd.defragJob.schedule</code> and <code>spec.etcd.defragJob.rule</code> fields in the <code>Cluster</code> resource. For example:</p> <p>The feature is based on the etcd-defrag tool. For more information, see the etcd-defrag repo.</p> <pre><code>apiVersion: k0smotron.io/v1beta1\nkind: Cluster\nmetadata:\n  name: k0smotron-test\nspec:\n  etcd:\n    defragJob:\n      enabled: true\n      schedule: \"0 0 * * *\" # Default: 0 12 * * *\n      rule: \"dbQuotaUsage &gt; 0.5 || dbSize - dbSizeInUse &gt; 200*1024*1024\" # Default: dbQuotaUsage &gt; 0.8 || dbSize - dbSizeInUse &gt; 200*1024*1024\n</code></pre>"},{"location":"etcd/#resource-requirements","title":"Resource Requirements","text":"<p>k0smotron supports setting resource requirements (requests and limits) for the etcd StatefulSet pods. By default, etcd pods are created with no specific resource requirements. To set resource requirements, use the <code>spec.etcd.resources</code> field in the <code>Cluster</code> resource:</p> <pre><code>apiVersion: k0smotron.io/v1beta1\nkind: Cluster\nmetadata:\n  name: k0smotron-test\nspec:\n  etcd:\n    image: quay.io/k0sproject/etcd:v3.5.13\n    resources:\n      requests:\n        cpu: 100m\n        memory: 128Mi\n      limits:\n        cpu: 200m\n        memory: 256Mi\n</code></pre> <p>This configuration allows you to ensure etcd has appropriate resources allocated, which is especially important for production environments or clusters with high load. The resource requirements follow standard Kubernetes resource specification format.</p>"},{"location":"faq/","title":"FAQ","text":"<p>The k0smotron FAQ is designed to quickly provide answers to common questions about the project. We strive to include answers to the most common questions and uncertainties that users encounter, along with helpful tips and references to step-by-step instructions whenever possible.</p> <p>If you are unable to find the information you seek in this FAQ, please extend your search into the overall k0smotron documentation set.</p> <p>Of course, we welcome your suggestions for the k0smotron FAQ, as well as your contributions!</p>"},{"location":"faq/#how-does-k0smotron-differ-from-other-multi-cluster-management-solutions","title":"How does k0smotron differ from other multi-cluster management solutions?","text":"<p>As a multi-cluster management solution, k0smotron provides a distinct advantage over the competition in that it allows you to leverage the full capabilities of the management cluster. Most other such solutions, such as Tanzu and Rancher, are unable to offer the same, as they typically provision a VM-based control plane and worker planes in the same infrastructure.</p>"},{"location":"faq/#how-does-k0smotron-differ-from-managed-kubernetes-providers","title":"How does k0smotron differ from managed Kubernetes providers?","text":"<p>k0smotron offers heightened functionality over such managed Kubernetes providers as GKE and AKS, including:</p> <ul> <li>Greater control and flexibility<p>With k0smotron, you have full control over your cluster configurations   within your existing Kubernetes cluster.</p> </li> </ul> <ul> <li>Agnostic worker node connectability<p>By allowing you to connect worker nodes from any infrastructure, k0smotron   provides greater freedom and compatibility.</p> </li> </ul> <ul> <li>Cost efficiency<p>In leveraging your existing Kubernetes cluster, k0smotron can reduce your   costs, such as those associated with managing separate clusters or   funding additional resources.</p> </li> </ul> <ul> <li>Homogeneous setup<p>k0smotron installs with a single command. This one command installs the   k0smotron controller manager, all of the related CRD definitions, and the   necessary RBAC rules. This approach ensures that you have a consistent   configuration across clusters. It also simplifies maintenance and   management tasks.</p> </li> </ul>"},{"location":"faq/#what-is-the-relation-of-k0smotron-to-cluster-api","title":"What is the relation of k0smotron to Cluster API?","text":"<p>k0smotron is a fully compliant Cluster API provider for k0s that can be used with any Cluster API compatible tooling. In addition, k0smotron is a Cluster API infrastructure provider with which you can use SSH connections to provision clusters on remote machines.</p>"},{"location":"faq/#what-do-we-mean-by-from-pets-to-cattle","title":"What do we mean by \"from pets to cattle\"?","text":"<p>A pets service model describes carefully tended resources that are nurtured with care and given relatable names. When such resources have issues, it is immediately noticed, and time and effort are expended to bring them back to a healthy state.</p> <p>In a cattle model, the resources in question are not given the same level of careful attention, and they are tagged rather than named. Such resources are typically configured in an identical sense, and if the health of one fails it is quickly replaced without much thought.</p> <p>As cluster control planes are somewhat static, these are usually managed in a pets sense. In contrast, using an operator such as k0smotron to manage k0s control planes within an existing Kubernetes cluster is more of a cattle approach, allowing for cluster management that is more scalable and flexible. Such an approach makes it easier to maintain a consistent and homogeneous setup across all your clusters, while also allowing you to take advantage of the high availability and auto-healing features of Kubernetes.</p>"},{"location":"ha/","title":"Highly available hosted control planes using external data stores","text":"<p>Setting up a highly available etcd cluster for Kubernetes control planes can be complicated due to their dynamic nature. In k0smotron, we solve this challenge by \"externalizing\" the HA setup of data storage for the control plane.</p> <p>The control planes managed by k0smotron are k0s control planes. As k0s comes with support for using SQL databases as data store, which uses Kine, you can use HA databases instead of etcd. This enables you to use, for example, Postgres operator, MySQL operator, or cloud provider managed databases as the data store for the control planes.</p>"},{"location":"ha/#using-postgres-operator","title":"Using Postgres operator","text":"<p>This instruction demonstrates how to configure the Postgres operator to manage the data store of a control plane. Use these steps as an example for the required data store resource.</p> <ol> <li> <p>Install the Postgres operator following the quickstart guide.</p> </li> <li> <p>Create the database using a custom resource:</p> <pre><code>apiVersion: \"acid.zalan.do/v1\"\nkind: postgresql\nmetadata:\n  name: acid-minimal-cluster\nspec:\n  teamId: \"acid\"\n  volume:\n    size: 10Gi\n  numberOfInstances: 2\n  users:\n    # database owner\n    k0smotron:\n    - superuser\n    - createdb\n\n  databases:\n    kine: k0smotron\n  postgresql:\n    version: \"15\"\n</code></pre> </li> <li> <p>Once you set up the database, configure k0smotron to create a control plane:</p> <pre><code>cat &lt;&lt;EOF | kubectl apply -f -\napiVersion: k0smotron.io/v1beta1\nkind: Cluster\nmetadata:\n  name: k0smotron-test\nspec:\n  replicas: 3\n  service:\n    type: LoadBalancer\n  kineDataSourceURL: postgres://k0smotron:&lt;passwd&gt;@acid-minimal-cluster.default:5432/kine?sslmode=disable\nEOF\n</code></pre> <p>You can also use the reference to the secret containing the database  credentials:</p> <pre><code>cat &lt;&lt;EOF | kubectl apply -f -\napiVersion: v1\nkind: Secret\nmetadata:\n  name: database-credentials\n  namespace: k0smotron-test\ntype: Opaque\ndata:\n  K0SMOTRON_KINE_DATASOURCE_URL: &lt;base64-encoded-datasource&gt;\n---\napiVersion: k0smotron.io/v1beta1\nkind: Cluster\nmetadata:\n  name: k0smotron-test\nspec:\n  replicas: 3\n  service:\n    type: LoadBalancer\n  kineDataSourceSecretName: database-credentials\nEOF\n</code></pre> <p>!!! note</p> <pre><code>The secret must be in the same namespace as the cluster and the key\nmust be `K0SMOTRON_KINE_DATASOURCE_URL`.\n</code></pre> </li> </ol>"},{"location":"hcp-autoscaling/","title":"Using Horizontal Pod Autoscaler (HPA) for k0smotron.io/Cluster","text":""},{"location":"hcp-autoscaling/#introduction","title":"Introduction","text":"<p>Horizontal Pod Autoscaler (HPA) automatically scales the number of pods in a Kubernetes cluster based on observed CPU utilization (or other select metrics). This guide will walk you through the steps to set up and use HPA for <code>k0smotron.io/Cluster</code>.</p> <p>Warning</p> <p>Due to etcd maintanance challenges, k0smotron never scales etcd statefulsets down, only up.  This means that HPA will scale up both control-plane and etcd, but scale down only control-plane pods.</p>"},{"location":"hcp-autoscaling/#prerequisites","title":"Prerequisites","text":"<ul> <li>A running Kubernetes cluster</li> <li><code>kubectl</code> command-line tool installed and configured</li> <li>Metrics Server installed in your cluster</li> </ul>"},{"location":"hcp-autoscaling/#step-by-step-guide","title":"Step-by-Step Guide","text":""},{"location":"hcp-autoscaling/#1-install-metrics-server","title":"1. Install Metrics Server","text":"<p>Metrics Server is a cluster-wide aggregator of resource usage data. It is required for HPA to function. k0s brings metrics-server by default, but you can install it manually if needed.</p> <pre><code>kubectl apply -f https://github.com/kubernetes-sigs/metrics-server/releases/latest/download/components.yaml\n</code></pre>"},{"location":"hcp-autoscaling/#2-define-resource-requests-and-limits","title":"2. Define Resource Requests and Limits","text":"<p>Ensure your k0smotron.io/Cluster has CPU and/or memory requests and limits defined. HPA uses these values to make scaling decisions.  Example k0smotron.io/Cluster definition:</p> <pre><code>apiVersion: k0smotron.io/v1beta1\nkind: Cluster\nmetadata:\n  name: example-cluster\n  namespace: default\nspec:\n  replicas: 1\n  version: \"v1.31.5-k0s.0\"\n  service:\n    type: NodePort\n  resources:\n    requests:\n      cpu: \"100m\"\n      memory: \"100Mi\"\n</code></pre>"},{"location":"hcp-autoscaling/#3-create-an-hpa","title":"3. Create an HPA","text":"<p>Create an HPA resource to automatically scale your k0smotron.io/Cluster based on CPU utilization.</p> <pre><code>apiVersion: autoscaling/v2beta2\nkind: HorizontalPodAutoscaler\nmetadata:\n  name: example-hpa\n  namespace: default\nspec:\n  scaleTargetRef:\n    apiVersion: k0smotron.io/v1beta1\n    kind: Cluster\n    name: example-cluster\n  minReplicas: 1\n  maxReplicas: 10\n  metrics:\n  - type: Resource\n    resource:\n      name: cpu\n      target:\n        type: Utilization\n        averageUtilization: 50\n</code></pre> <p>Apply the HPA:</p> <pre><code>kubectl get hpa -n default\n</code></pre>"},{"location":"hcp-autoscaling/#4-verify-hpa","title":"4. Verify HPA","text":"<p>Check the status of your HPA to ensure it is working correctly.</p> <pre><code>kubectl get hpa -n default\n</code></pre> <p>You should see output similar to:</p> <pre><code>NAME         REFERENCE               TARGETS   MINPODS   MAXPODS   REPLICAS   AGE\nexample-hpa  Cluster/example-cluster  10%/50%    1         10        1          1m\n</code></pre> <p>You have successfully set up Horizontal Pod Autoscaler (HPA) for your k0smotron.io/Cluster. HPA will now automatically adjust the number of pods in your cluster based on the specified metrics.  For more information, refer to the Kubernetes HPA documentation.</p>"},{"location":"install/","title":"Installation","text":"<p>This section describes how to install k0smotron on top of an existing k0s Kubernetes cluster that allows for creation and management of the k0s control plane.</p> <p>Pre-requisites</p> <p>Before installing k0smotron, ensure that you have cert-manager installed</p> <p>TL;DR</p> <pre><code>kubectl apply --server-side=true -f https://docs.k0smotron.io/None/install.yaml\n</code></pre>"},{"location":"install/#known-limitations","title":"Known limitations","text":"<p>Areas in which k0smotron is currently limited include:</p> <ul> <li>Control plane exposure<p>Currently k0smotron only supports <code>ClusterIP</code>, <code>NodePort</code>, and   <code>LoadBalancer</code> services, and often it is necessary to further configure   created services to ease their interaction with cloud provider   implementations.</p> </li> </ul> <ul> <li>Updates prevalence<p>Although k0smotron can easily update the cluster control plane, in   standalone mode such updates do not extend to worker nodes.</p> </li> </ul>"},{"location":"install/#hardware-requirements","title":"Hardware requirements","text":"<p>k0smotron does not require any special hardware for workloads aside from the one required for k0s. For details on k0s hardware requirements for workloads, see k0s documentation.</p>"},{"location":"install/#software-prerequisites","title":"Software prerequisites","text":"<p>k0smotron requires the following software to be preinstalled:</p> <ul> <li>Kubernetes management cluster.   In this documentation set, we use the   k0s Kubernetes distribution   as a management cluster.   For Cluster API integration, you can use a   Cluster API cluster.</li> <li><code>kubectl</code> installed locally.</li> <li>cert-manager installed in the management cluster.</li> <li> <p>For Cluster API integration:</p> <ul> <li>clusterctl   installed locally.</li> <li>Configured cloud provider. In this documentation set, we describe   configuration examples for the following providers: AWS, Docker,   Hetzner Cloud, OpenStack, vSphere. For setup instructions, refer to the   official documentation of the selected cloud provider.</li> </ul> </li> </ul> <ul> <li>Optional. CSI provider for persistent storage in managed clusters.</li> <li>Optional. Load balancer provider for ensuring high availability of the   control plane.</li> </ul>"},{"location":"install/#full-installation","title":"Full installation","text":"<p>A full k0smotron installation implies the following components:</p> <ul> <li>k0smotron operator</li> <li>Custom Resource Definitions</li> <li>Role-based access control rules</li> <li>Bootstrap provider</li> <li>Infrastructure provider</li> <li>Control plane provider</li> </ul> <p>To install the full version of k0smotron:</p> <pre><code>kubectl apply --server-side=true -f https://docs.k0smotron.io/None/install.yaml\n</code></pre> <p>Now, you can create your first control planes using k0smotron either as a standalone manager, or as a Cluster API provider. For use case details, see k0smotron usage.</p>"},{"location":"install/#per-module-installation-for-cluster-api","title":"Per-module installation for Cluster API","text":"<p>k0smotron is compatible with <code>clusterctl</code> and can act as a Cluster API bootstrap, infrastructure, and control plane provider. You can use <code>clusterctl</code> to install each k0smotron Cluster API module separately:</p> <pre><code>clusterctl init --bootstrap k0sproject-k0smotron \\\n                --control-plane k0sproject-k0smotron \\\n                --infrastructure k0sproject-k0smotron\n</code></pre> <p>To start using the k0smotron Cluster API, refer to Cluster API.</p>"},{"location":"join-nodes/","title":"Join a worker node","text":"<p>Joining worker nodes to your control plane is similar to the process of joining worker nodes with k0s. You need to obtain a join token that establishes mutual trust between the worker node and control plane, allowing the node to join the cluster as worker.</p> <p>To join a worker node to the cluster:</p> <ol> <li> <p>Obtain a join token:</p> <ol> <li> <p>Create a <code>JoinTokenRequest</code> resource to generate a join token for the     worker node. For example:</p> <pre><code>apiVersion: k0smotron.io/v1beta1\nkind: JoinTokenRequest\nmetadata:\n  name: my-token\n  namespace: default\nspec:\n  clusterRef:\n    name: my-cluster\n    namespace: default\n  expiry: 1h\n</code></pre> <p>Tip</p> <p>The <code>expiry</code> field defines the expiration time of the token. Refer to API reference: JoinTokenRequest.spec for the configuration details.</p> <p>k0smotron processes the <code>JoinTokenRequest</code> resource and creates    a <code>Secret</code> resource:</p> <pre><code>apiVersion: v1\nkind: Secret\nmetadata:\n  name: my-token\n  namespace: default\n  labels:\n    k0smotron.io/cluster: my-cluster.default\n    k0smotron.io/role: worker\n    k0smotron.io/token-request: my-token\ntype: Opaque\ndata:\n  token: &lt;base64-encoded-token&gt;\n</code></pre> <p>The <code>token</code> field contains the base64-encoded token that you can use   to join a worker node to the cluster.</p> </li> <li> <p>Retrieve the decoded join token from the generated <code>Secret</code>:</p> <pre><code>kubectl get secret my-token -o jsonpath='{.data.token}' | base64 -d\n</code></pre> </li> </ol> </li> <li> <p>Install <code>k0s</code> on the worker node:</p> <ol> <li> <p>Ensure that the <code>k0s</code> binary is installed on the worker node:</p> <pre><code>curl -sSLf https://get.k0s.sh | sudo sh\n</code></pre> </li> <li> <p>Verify that the k0s version in the worker node matches the k0s version     installed on the control plane. If needed, you can adjust the k0s version     using the <code>K0S_VERSION</code> environment variable.</p> </li> </ol> </li> <li> <p>Join the worker node specifying the join token created earlier:</p> <pre><code>sudo k0s install worker --token-file /path/to/token/file\nsudo k0s start\n</code></pre> </li> <li> <p>Delete the <code>JoinTokenRequest</code> resource to invalidate the issued token:</p> <pre><code>kubectl delete jointokenrequest my-token\n</code></pre> </li> </ol> <p>Note</p> <p>API reference: JoinTokenRequest.spec</p>"},{"location":"known-limitations/","title":"Known Limitations","text":"<p>This pages lists the known limitations we have in k0smotron.</p>"},{"location":"known-limitations/#controlplane-vm-updates","title":"Controlplane VM updates","text":"<p>When running CAPI managed controlplane in VMs, k0smotron currently supports only <code>InPlace</code> upgrade strategy. This means that k0smotron will actually trigger k0s autopilot to update the control plane nodes.</p> <p>The reason behind is that the \"traditional\" CAPI way of re-creating the machines involves etcd cluster tweaking, namely removing and adding peers. This is unfortunately not possible with k0s from external toolin, k0smotron in this case, as k0s configures etcd so that it cannot be accessed externally from the nodes.</p> <p>We are working on an approach to allow also <code>ReCreate</code> strategy, to comply with traditional CAPI way and to match with other providers.</p>"},{"location":"known-limitations/#infrastructure-controlplane-lbs-need-extra-ports","title":"Infrastructure Controlplane LBs need extra ports","text":"<p>k0s uses 3 ports on controllers: 6443 for Kubernetes API, 8132 for konnectivity and 9443 for k0s internal join API. With CAPI all these three ports needs to be enabled on the control plane LBs. Most of the infrastructure providers support adding extra ports. For example with AWS provider you'd need to specify these ports in <code>AWSCluster.spec.controlPlaneLoadBalancer.additionalListeners</code>.</p> <p>If you encounter an infrastructure provider which does not support adding additional ports, please let us know. We're happy to work with that upstream project to get that functionality added.</p>"},{"location":"monitoring/","title":"Control plane monitoring","text":"<p>For the standalone and Cluster API in-cluster use cases, k0smotron provides a mechanism to expose control plane metrics of a managed cluster to a Prometheus instance running in the management cluster. This allows you to monitor the control plane components of the managed cluster as a usual Kubernetes workload using the same Prometheus instance that is used to monitor the management cluster.</p> <p>To enable monitoring for a k0smotron cluster, set <code>spec.monitoring.enabled=true</code> in the <code>Cluster</code> resource:</p> <pre><code>apiVersion: k0smotron.io/v1beta1\nkind: Cluster\nmetadata:\n  name: k0smotron-test\nspec:\n  monitoring:\n    enabled: true\n</code></pre> <p>Once done, two sidecar containers are added to the control plane pods:</p> <ul> <li><code>monitoring-agent</code> - a container that scrapes metrics from the control plane   components.</li> <li><code>monitoring-proxy</code> - a container with a proxy that exposes metrics scraped by   <code>monitoring-agent</code> to the management cluster.</li> </ul> <p>All metrics contain the <code>k0smotron_cluster</code> label with the name of the managed cluster.</p>"},{"location":"status/","title":"Project status","text":"<p>To gauge the level of interest in running k0s control planes as Kubernetes resources, we are releasing k0smotron at the earliest possible moment. Of course, as with any young project just getting started, there are bound to be some bumps, unforeseen issues, and a few surprises. In line with that, we can offer no guarantees regarding backward or forward compatibility, and you should expect a certain amount of breakage with each ensuing k0smotron release.</p> <p>All caveats aside, though, we are truly excited about what k0smotron has to offer, and look forward to seeing how it can transform the way you manage your Kubernetes deployments. We are confident that the open source community will take great interest in the project, too, and help us to smooth out the rough edges in the days, weeks, and months ahead.</p>"},{"location":"status/#cluster-api","title":"Cluster API","text":"<p>One key focus of the k0smotron project is to have it function as a Cluster API provider for <code>ControlPlane</code>, <code>Bootstrap</code> and <code>Infrastructure</code> providers.</p>"},{"location":"terminology/","title":"Terminology","text":"Control plane A set of components that manages the overall state of a cluster"},{"location":"troubleshooting/","title":"Troubleshooting","text":""},{"location":"troubleshooting/#worker-nodes-cannot-be-joined","title":"Worker nodes cannot be joined","text":"<p>If you are using k0smotron in standalone mode, check whether the join token has expired. If this is the case, attempt to create a new one using JoinTokenRequest.</p> <p>If you are using k0smotron as a Cluster API provider, use the following procedure to check the logs of your infrastructure provider controller:</p> <ol> <li> <p>Decode the token:</p> <pre><code>echo \"&lt;token&gt;\" | base64 -d | gunzip\n</code></pre> </li> <li> <p>Take note of the <code>users.user.token</code> field. For purposes of example, the    field will be <code>gb823t.b8ftcytc4ktmvkjz</code>.</p> </li> <li> <p>Run the following command, using the KUBECONFIG of the child cluster, which    is the first part of the <code>users.user.token</code> field:</p> <pre><code>kubectl -n kube-system get secret bootstrap-token-gb823t --template='{{.data.expiration}}' | base64 -d\n2024-03-14T11:08:13Z\n</code></pre> </li> </ol> <p>Furthermore, check whether different Kubernetes minor versions were used in the initial cluster creation for the control plane and the worker nodes, as k0s requires that the controllers and workers were created using the same minor version. For more information, refer to the Kubernetes Version Skew Policy.</p>"},{"location":"troubleshooting/#machinedeployment-with-docker-provider-does-not-function","title":"MachineDeployment with Docker Provider does not function","text":"<p>Docker Provider uses the version field to determine the docker image version for the worker nodes. If you are using k0smotron as a Cluster API provider, check whether the MachineDeployment <code>spec.template.spec.version</code> field is present. If it is present, check that the version is supported by your infrastructure provider.</p>"},{"location":"usage-overview/","title":"Usage","text":"<p>Users can use k0smotron in two distinct ways:</p> Standalone <p>In this mode, standalone k0smotron manages only k0s control planes running in the management cluster offering streamlined control and monitoring capabilities for k0s clusters.</p> Cluster API integration <p>Alternatively, users can opt for k0smotron integration with Cluster API, enabling k0smotron to manage Kubernetes clusters across various infrastructure providers. This integration extends k0smotron management capabilities to a broader range of Kubernetes deployments.</p> <p>Within the context of Cluster API, k0smotron can serve several roles:</p> <ul> <li>Control plane provider: k0smotron manages the control plane within the management cluster.   It orchestrates the creation, scaling, and management of the Kubernetes control plane   components, ensuring their proper functioning and high availability.</li> </ul> <ul> <li>Control plane bootstrap provider: k0smotron acts as a bootstrap provider for <code>Machine</code>   resources that run the control plane components. It handles the initialization and   configuration of these machines, ensuring they are properly set up to serve as part   of the cluster control plane.</li> </ul> <ul> <li>Bootstrap provider: k0smotron serves as the bootstrap provider for worker machines.   It manages provisioning and configuring worker nodes, ensuring they are ready   to run containerized workloads within the Kubernetes cluster.</li> </ul> <ul> <li>Remote machine provider: k0smotron acts as an infrastructure provider, enabling   the configuration of <code>Machine</code> resources on existing infrastructure over SSH.   This enables users to leverage their existing infrastructure resources while   still benefiting from the management capabilities provided by ClusterAPI and k0smotron.</li> </ul> <p>See also</p> <p>k0smotron installation</p>"},{"location":"contributing/contribute-overview/","title":"Contribute to k0smotron","text":"<p>Thank you for your interest in k0smotron. We look forward to working with you to grow and enhance the product.</p>"},{"location":"contributing/contribute-overview/#report-issue","title":"Report issue","text":"<p>Before making your k0mostron contribution, open a GitHub issue in the k0smotron project to discuss your idea.</p> <p>Subscribe to an issue to receive notifications and stay up to date.</p>"},{"location":"contributing/contribute-overview/#code-of-conduct","title":"Code of conduct","text":"<p>k0smotron follows the CNCF Code of Conduct.</p>"},{"location":"contributing/contribute-overview/#coding-guidelines","title":"Coding guidelines","text":"<p>k0smotron follows the Effective Go coding guidelines.</p>"},{"location":"contributing/contribute-overview/#development-environment","title":"Development environment","text":"<p>Ensure successful development by setting up your environment correctly. For basic k0smotron development, install Go, and follow k0smotron GitHub workflow. For tasks involving CAPI testing, follow k0smotron instructions on setting up the CAPI development environment.</p>"},{"location":"contributing/contribute-overview/#follow-k0smotron-github-workflow","title":"Follow k0smotron GitHub workflow","text":"<p>Ensure that your contribution adheres to the k0smotron GitHub workflow:</p> <ol> <li>Fork the project.</li> <li>Configure remote repository.</li> <li>Prepare feature branch.</li> <li>Test your change.</li> <li>Commit with a sign-off.</li> <li>Push your change.</li> <li>Open a pull request.</li> </ol>"},{"location":"contributing/contribute-overview/#test-code","title":"Test code","text":"<p>All PRs submitted to the k0smotron project go through a series of tests and reviews. As such, you should run your own tests before you submit a PR, as this will reduce the number of review iterations and automated test runs. For detailed information, refer to the k0smotron testing guidelines.</p>"},{"location":"contributing/contribute-overview/#license","title":"License","text":"<p>In contributing to the k0smotron project, you agree that your submissions will be licensed as follows:</p> <ul> <li>All content residing under the <code>docs</code> directory is licensed under \"Creative Commons Attribution Share Alike 4.0 International\" (CC-BY-SA-4.0).</li> <li>Content outside the above-mentioned directories or restrictions above is available under the \"Apache License 2.0\".</li> </ul>"},{"location":"contributing/contribute-overview/#community","title":"Community","text":"<p>Get the latest news on k0smotron from the k0sproject Twitter account. You can also learn about k0smotron updates and initiatives on the official k0s community blog. Share your views on the Lens Forums.</p>"},{"location":"contributing/contribute-testing/","title":"Testing guidelines","text":"<p>K0smotron follows a comprehensive testing strategy that includes unit, integration, and e2e testing to ensure the reliability and robustness of the system.</p> <p>All unit, integration, and e2e tests are executed automatically on pull requests that are intended to be merged, ensuring that changes are thoroughly validated before integration into the main codebase. These tests are executed using GitHub Actions, which provides a seamless and automated way to validate proposed changes. This layered approach ensures that proposed changes are both correct and meet the expected quality standards.</p> <p>For details on the contribution process, including how to follow the GitHub workflow and ensure your changes pass all necessary validations, please refer to the Contributing Workflow.</p>"},{"location":"contributing/contribute-testing/#unit-and-integration-testing","title":"Unit and Integration Testing","text":"<p>In k0smotron project, tests are prioritized to execute quickly in order to maintain a fast feedback loop, ensuring efficient and agile development.</p> <p>K0smotron uses go test as the foundation for all our tests, combined with the testify library to simplify assertions and improve test readability and reliability. Both unit and integration tests rely on this approach to ensure consistency and ease of development.</p> <ul> <li>Unit Testing: Focused on isolated components, unit tests validate the correctness of individual functions or methods in a controlled environment, ensuring they behave as expected.</li> </ul> <ul> <li> <p>Integration Testing: For integration testing, k0smotron uses envtest, which provides a lightweight Kubernetes control plane with the essential components needed to test interactions between the code and Kubernetes API. This approach allows us to validate the behavior of our controllers and other Kubernetes integrations in a reproducible and efficient manner without requiring a full cluster. </p> <p>Following the best practices suggested in the Cluster API documentation, integration tests are written using generic infrastructure providers rather than a specific provider. This ensures that tests remain agnostic and reusable across different infrastructures, fostering better maintainability and adaptability.</p> </li> </ul>"},{"location":"contributing/contribute-testing/#e2e-testing","title":"E2E testing","text":"<p>K0smotron's end-to-end (E2E) testing leverages the CAPI E2E framework to provide configurability and utilities that support various phases of E2E testing, including the creation and configuration of the management cluster, waiting for specific resources, log dumping, and more.</p>"},{"location":"contributing/contribute-testing/#run-e2e","title":"Run E2E","text":"<p>You can run the tests using the command:</p> <pre><code>make e2e\n</code></pre> <p>This will perform the following actions:</p> <ol> <li>Deploy a local cluster using Kind as the management cluster.</li> <li> <p>Install the desired providers. Basically the same achieved by executing the command <code>clusterctl init ...</code>, by including:</p> <ul> <li>Cluster API for core components.</li> <li>k0smotron as controlplane and bootstrap provider.</li> <li>Configurable infrastructure provider (currently only docker supported). </li> </ul> </li> <li> <p>Execute the E2E test suite.</p> </li> </ol> <p>NOTE: This command will run the tests using docker as infrastructure provider but it is intended to make use of the configurability offered by the CAPI E2E framework to add other infrastructure providers that can be used in e2e testing.</p>"},{"location":"contributing/contribute-workflow/","title":"k0smotron GitHub workflow","text":"<p>Create pull requests to contribute to k0smotron GitHub repository.</p>"},{"location":"contributing/contribute-workflow/#fork-the-project","title":"Fork the project","text":"<ol> <li>Go to k0smotron GitHub repository.</li> <li>In the top right-hand corner, click \"Fork\" and select your username for the fork destination.</li> </ol>"},{"location":"contributing/contribute-workflow/#configure-remote-repository","title":"Configure remote repository","text":"<ol> <li> <p>Add k0smotron as a remote branch:</p> <pre><code>cd $WORKDIR/k0smotron\ngit remote add my_fork git@github.com:${GITHUB_USER}/k0smotron.git\n</code></pre> </li> <li> <p>Prevent push to upstream branch:</p> <pre><code>git remote set-url --push origin no_push\n</code></pre> </li> <li> <p>Set your fork remote as a default push target:</p> <pre><code>git push --set-upstream my_fork main\n</code></pre> </li> <li> <p>Check the remote branches with the following command:</p> <p><pre><code>git remote -v\n</code></pre>   The origin branch should have <code>no_push</code> next to it:</p> <pre><code>origin  https://github.com/k0sproject/k0smotron (fetch)\norigin  no_push (push)\nmy_fork git@github.com:{ github_username }/k0smotron.git (fetch)\nmy_fork git@github.com:{ github_username }/k0smotron.git (push)\n</code></pre> </li> </ol>"},{"location":"contributing/contribute-workflow/#create-and-rebase-feature-branch","title":"Create and rebase feature branch","text":"<ol> <li> <p>Create and switch to a feature branch:</p> <pre><code>git checkout -b my_feature_branch\n</code></pre> </li> <li> <p>Rebase your branch:</p> <pre><code>git fetch origin &amp;&amp; \\\n  git rebase origin/main\n</code></pre> </li> </ol> <p>Note</p> <p>Use <code>git fetch</code> or <code>git rebase</code> instead of <code>git pull</code> to keep the commit history linear. The <code>git pull</code> command performs a merge, which leaves merge commits. Too many commits make the history messy and violate the principle that commits ought to be individually understandable and useful.</p>"},{"location":"contributing/contribute-workflow/#run-local-verifications","title":"Run local verifications","text":"<p>Run the following style and formatting commands to fix or check-in the changes:</p> <ol> <li> <p>Verify code style using <code>golangci-lint</code>. In the root directory of the repository run: <pre><code>make lint\n</code></pre> The build system automatically installs <code>golangci-lint</code>.</p> </li> <li> <p>Format Go source code using the <code>go fmt</code> command: <pre><code>go fmt ./...\n</code></pre></p> </li> <li> <p>Check documentation.</p> <p>The Dockerized setup is used to locally perform documentation tests.  Run <code>make docs-serve-dev</code> to build documentation on http://localhost:8000.</p> <p>If your port <code>8000</code> is busy, run <code>make docs-serve-dev DOCS_DEV_PORT=9999</code>.  The documentation page will be available on http://localhost:9999.</p> </li> <li> <p>Pre-submit flight checks.</p> <p>In the repository root directory, ensure that the following commands are successfully run:</p> <p>* <code>make build &amp;&amp; git diff --exit-code</code>     This command verifies that the build is working     and that the generated source code matches the code checked into source control.   * <code>make test</code>     This command verifies that all the unit tests pass.</p> <p>Once all tests have passed, you can open a pull request upstream.</p> </li> </ol>"},{"location":"contributing/contribute-workflow/#commit-and-push","title":"Commit and push","text":"<p>Commit and sign your changes:</p> <pre><code>git commit --signoff\n</code></pre> <p>The commit message should have:</p> <ul> <li>title</li> <li>description</li> <li>link to the GitHub issue</li> <li>sign-off</li> </ul> <p>For example:</p> <pre><code>Title that summarizes changes in 50 characters or less\n\nDescription that briefly explains the problem your commit is solving. \nFocus on why you are making this change as opposed to how.\nAre there any consequences of this change? Here you can include them.\n\nFixes: https://github.com/k0sproject/k0smotron/issues/373\n\nSigned-off-by: Name Lastname &lt;user@example.com&gt;\n</code></pre> <p>To add some additional changes or tests use <code>commit --amend</code> command. Push your changes to your fork's repository:</p> <pre><code>git push --set-upstream my_fork my_feature_branch\n</code></pre>"},{"location":"contributing/contribute-workflow/#open-pull-request","title":"Open pull request","text":"<p>Refer to the official GitHub documentation Creating a pull request from a fork.</p>"},{"location":"contributing/contribute-workflow/#draft-mode","title":"Draft mode","text":"<p>If you open a pull request in draft mode, it will only go through the automated testing. Once you decide the PR is ready for review, transition it out of draft mode to notify the k0smotron team.</p>"},{"location":"contributing/contribute-workflow/#pre-requisites-for-merge","title":"Pre-requisites for merge","text":"<p>In order for a pull request to be merged, the following conditions should be met:</p> <ol> <li>The PR has passed all the automated tests (style, build and conformance tests).</li> <li>All the PR commits have been signed with the <code>--signoff</code> option.</li> <li>The PR has been reviewed and approved by a code owner.</li> <li>The PR has been rebased against upstream main branch.</li> </ol>"},{"location":"contributing/contribute-workflow/#wait-for-code-review","title":"Wait for code review","text":"<p>The k0smotron team will review your pull request and leave comments. Commit changes made in response to review comments should be added to the same branch on your fork.</p> <p>Keep the PRs small to speed up the review process.</p>"},{"location":"contributing/contribute-workflow/#squash-small-commits","title":"Squash small commits","text":"<p>Commits on your branch should represent meaningful milestones or units of work. Squash together small commits that contain typo fixes, rebases, review feedbacks, and so on. To do that, perform an interactive rebase.</p>"},{"location":"contributing/contribute-workflow/#push-final-changes","title":"Push final changes","text":"<p>Once done, you can push the final commits to your branch:</p> <pre><code>git push --force\n</code></pre> <p>If necessary, you can run multiple iteration of <code>rebase</code>/<code>push -f</code>.</p>"},{"location":"contributing/contribute-workflow/#cleanup-local-workspace","title":"Cleanup local workspace","text":"<p>Run <code>make clean</code> to remove all the intermediate files and directories created locally during the k0smotron build. You cannot use <code>git clean -X</code> or <code>rm -rf</code>, since the Go modules cache sets all of its subdirectories to read-only. If you encounter problems during a deletion process, run <code>chmod -R u+w /path/to/workspace &amp;&amp; rm -rf /path/to/workspace</code>.</p>"},{"location":"contributing/dev-environment/","title":"Set up CAPI development environment","text":"<p>To contribute to k0smotron, ensure you have set up the development environment properly. For simple development tasks, it is enough to install Go, and follow k0smotron GitHub workflow. For more complicated changes that require running CAPI (Common Application Programming Interface) tests, follow the steps below to configure your environment:</p> <ol> <li> <p>Use KinD (Kubernetes in Docker) to create a Kubernetes cluster based on the provided configuration file:</p> <pre><code>kind create cluster --config config/samples/capi/docker/kind.yaml\n</code></pre> </li> <li> <p>Generate a custom image bundle and load it into the KinD cluster:</p> <pre><code>make k0smotron-image-bundle.tar &amp;&amp; kind load image-archive k0smotron-image-bundle.tar\n</code></pre> </li> <li> <p>Release the necessary components and install them into the Kubernetes cluster:</p> <pre><code>make release &amp;&amp; kubectl apply --server-side=true -f install.yaml\n</code></pre> </li> <li> <p>Initialize the cluster, patch configurations, and enable features:</p> <pre><code>clusterctl init --infrastructure docker\n          kubectl patch -n capi-system deployment/capi-controller-manager -p \\\n            '{\"spec\":{\"template\":{\"spec\":{\"containers\":[{\"name\":\"manager\",\"args\":[\"--leader-elect\", \"--metrics-bind-addr=localhost:8080\", \"--feature-gates=ClusterTopology=true\"]}]}}}}'\n          kubectl patch -n capd-system deployment/capd-controller-manager -p \\\n            '{\"spec\":{\"template\":{\"spec\":{\"containers\":[{\"name\":\"manager\",\"args\":[\"--leader-elect\", \"--metrics-bind-addr=localhost:8080\", \"--feature-gates=ClusterTopology=true\"]}]}}}}'\n</code></pre> </li> <li> <p>Deploy the Local Path Provisioner for storage provisioning:</p> <pre><code>kubectl apply -f https://raw.githubusercontent.com/rancher/local-path-provisioner/v0.0.24/deploy/local-path-storage.yaml\n</code></pre> </li> <li> <p>Extract the Kubernetes configuration for the KinD cluster and save it to a <code>kind.conf</code> file:</p> <pre><code>kind get kubeconfig &gt; kind.conf\n</code></pre> </li> <li> <p>Run tests using the following command:</p> <pre><code>make -C inttest check-capi-controlplane-docker KUBECONFIG=$(realpath kind.conf)\n</code></pre> <p>This command runs tests against the control plane of the Kubernetes cluster  deployed using Docker. It uses the Kubernetes configuration from <code>kind.conf</code>.</p> </li> </ol>"},{"location":"resource-reference/bootstrap.cluster.x-k8s.io-v1beta1/","title":"API Reference","text":"<p>Packages:</p> <ul> <li>bootstrap.cluster.x-k8s.io/v1beta1</li> </ul>"},{"location":"resource-reference/bootstrap.cluster.x-k8s.io-v1beta1/#bootstrapclusterx-k8siov1beta1","title":"bootstrap.cluster.x-k8s.io/v1beta1","text":"<p>Resource Types:</p> <ul> <li>K0sControllerConfig</li> </ul> <ul> <li>K0sWorkerConfig</li> </ul> <ul> <li>K0sWorkerConfigTemplate</li> </ul>"},{"location":"resource-reference/bootstrap.cluster.x-k8s.io-v1beta1/#k0scontrollerconfig","title":"K0sControllerConfig","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> Name Type Description Required apiVersion string bootstrap.cluster.x-k8s.io/v1beta1 true kind string K0sControllerConfig true metadata object Refer to the Kubernetes API documentation for the fields of the `metadata` field. true spec object false status object false"},{"location":"resource-reference/bootstrap.cluster.x-k8s.io-v1beta1/#k0scontrollerconfigspec","title":"K0sControllerConfig.spec","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> Name Type Description Required args []string            Args specifies extra arguments to be passed to k0s controller. See: https://docs.k0sproject.io/stable/cli/k0s_controller/ false customUserDataRef object            CustomUserDataRef is a reference to a secret or a configmap that contains the custom user data. Provided user-data will be merged with the one generated by k0smotron. Note that you may want to specify the merge type. See: https://cloudinit.readthedocs.io/en/latest/reference/merging.html false downloadURL string            DownloadURL specifies the URL from which to download the k0s binary. If the version field is specified, it is ignored, and whatever version is downloaded from the URL is used. false files []object            Files specifies extra files to be passed to user_data upon creation. false k0s object            K0s defines the k0s configuration. Note, that some fields will be overwritten by k0smotron. If empty, will be used default configuration. @see https://docs.k0sproject.io/stable/configuration/ false postStartCommands []string            PostStartCommands specifies commands to be run after starting k0s worker. false preInstalledK0s boolean            PreInstallK0s specifies whether k0s binary is pre-installed on the node. false preStartCommands []string            PreStartCommands specifies commands to be run before starting k0s worker. false tunneling object            Tunneling defines the tunneling configuration for the cluster. false useSystemHostname boolean            UseSystemHostname specifies whether to use the system hostname for the kubernetes node name. By default, k0smotron will use Machine name as a node name. If true, it will pick it from `hostname` command output. Default: false false version string            Version is the version of k0s to use. In case this is not set, k0smotron will use a version field of the Machine object. If it's empty, the latest version is used. Make sure the version is compatible with the k0s version running on the control plane. For reference see the Kubernetes version skew policy: https://kubernetes.io/docs/setup/release/version-skew-policy/ false"},{"location":"resource-reference/bootstrap.cluster.x-k8s.io-v1beta1/#k0scontrollerconfigspeccustomuserdataref","title":"K0sControllerConfig.spec.customUserDataRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>CustomUserDataRef is a reference to a secret or a configmap that contains the custom user data. Provided user-data will be merged with the one generated by k0smotron. Note that you may want to specify the merge type. See: https://cloudinit.readthedocs.io/en/latest/reference/merging.html</p> Name Type Description Required configMapRef object            ConfigMapRef is a reference to a configmap that contains the content. false secretRef object            SecretRef is a reference to a secret that contains the content. false"},{"location":"resource-reference/bootstrap.cluster.x-k8s.io-v1beta1/#k0scontrollerconfigspeccustomuserdatarefconfigmapref","title":"K0sControllerConfig.spec.customUserDataRef.configMapRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>ConfigMapRef is a reference to a configmap that contains the content.</p> Name Type Description Required key string            Key is the key in the source that contains the content true name string            Name is the name of the source true"},{"location":"resource-reference/bootstrap.cluster.x-k8s.io-v1beta1/#k0scontrollerconfigspeccustomuserdatarefsecretref","title":"K0sControllerConfig.spec.customUserDataRef.secretRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>SecretRef is a reference to a secret that contains the content.</p> Name Type Description Required key string            Key is the key in the source that contains the content true name string            Name is the name of the source true"},{"location":"resource-reference/bootstrap.cluster.x-k8s.io-v1beta1/#k0scontrollerconfigspecfilesindex","title":"K0sControllerConfig.spec.files[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>File defines a file to be passed to user_data upon creation.</p> Name Type Description Required content string false contentFrom object            ContentFrom specifies the source of the content. false path string false permissions string false"},{"location":"resource-reference/bootstrap.cluster.x-k8s.io-v1beta1/#k0scontrollerconfigspecfilesindexcontentfrom","title":"K0sControllerConfig.spec.files[index].contentFrom","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>ContentFrom specifies the source of the content.</p> Name Type Description Required configMapRef object            ConfigMapRef is a reference to a configmap that contains the content. false secretRef object            SecretRef is a reference to a secret that contains the content. false"},{"location":"resource-reference/bootstrap.cluster.x-k8s.io-v1beta1/#k0scontrollerconfigspecfilesindexcontentfromconfigmapref","title":"K0sControllerConfig.spec.files[index].contentFrom.configMapRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>ConfigMapRef is a reference to a configmap that contains the content.</p> Name Type Description Required key string            Key is the key in the source that contains the content true name string            Name is the name of the source true"},{"location":"resource-reference/bootstrap.cluster.x-k8s.io-v1beta1/#k0scontrollerconfigspecfilesindexcontentfromsecretref","title":"K0sControllerConfig.spec.files[index].contentFrom.secretRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>SecretRef is a reference to a secret that contains the content.</p> Name Type Description Required key string            Key is the key in the source that contains the content true name string            Name is the name of the source true"},{"location":"resource-reference/bootstrap.cluster.x-k8s.io-v1beta1/#k0scontrollerconfigspectunneling","title":"K0sControllerConfig.spec.tunneling","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Tunneling defines the tunneling configuration for the cluster.</p> Name Type Description Required enabled boolean            Enabled specifies whether tunneling is enabled. Default: false false mode enum            Mode describes tunneling mode. If empty, k0smotron will use the default one. Enum: tunnel, proxy Default: tunnel false serverAddress string            Server address of the tunneling server. If empty, k0smotron will try to detect worker node address for. false serverNodePort integer            NodePort to publish for server port of the tunneling server. If empty, k0smotron will use the default one. Format: int32 Default: 31700 false tunnelingNodePort integer            NodePort to publish for tunneling port. If empty, k0smotron will use the default one. Format: int32 Default: 31443 false"},{"location":"resource-reference/bootstrap.cluster.x-k8s.io-v1beta1/#k0scontrollerconfigstatus","title":"K0sControllerConfig.status","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> Name Type Description Required conditions []object            Conditions defines current service state of the K0sControllerConfig. false dataSecretName string            DataSecretName is the name of the secret that stores the bootstrap data script. false ready boolean            Ready indicates the Bootstrapdata field is ready to be consumed false"},{"location":"resource-reference/bootstrap.cluster.x-k8s.io-v1beta1/#k0scontrollerconfigstatusconditionsindex","title":"K0sControllerConfig.status.conditions[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Condition defines an observation of a Cluster API resource operational state.</p> Name Type Description Required lastTransitionTime string            Last time the condition transitioned from one status to another. This should be when the underlying condition changed. If that is not known, then using the time when the API field changed is acceptable. Format: date-time true status string            Status of the condition, one of True, False, Unknown. true type string            Type of condition in CamelCase or in foo.example.com/CamelCase. Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. true message string            A human readable message indicating details about the transition. This field may be empty. false reason string            The reason for the condition's last transition in CamelCase. The specific API may choose whether or not this field is considered a guaranteed API. This field may not be empty. false severity string            Severity provides an explicit classification of Reason code, so the users or machines can immediately understand the current situation and act accordingly. The Severity field MUST be set only when Status=False. false"},{"location":"resource-reference/bootstrap.cluster.x-k8s.io-v1beta1/#k0sworkerconfig","title":"K0sWorkerConfig","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> Name Type Description Required apiVersion string bootstrap.cluster.x-k8s.io/v1beta1 true kind string K0sWorkerConfig true metadata object Refer to the Kubernetes API documentation for the fields of the `metadata` field. true spec object false status object false"},{"location":"resource-reference/bootstrap.cluster.x-k8s.io-v1beta1/#k0sworkerconfigspec","title":"K0sWorkerConfig.spec","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> Name Type Description Required args []string            Args specifies extra arguments to be passed to k0s worker. See: https://docs.k0sproject.io/stable/worker-node-config/ See: https://docs.k0sproject.io/stable/cli/k0s_worker/ false customUserDataRef object            CustomUserDataRef is a reference to a secret or a configmap that contains the custom user data. Provided user-data will be merged with the one generated by k0smotron. Note that you may want to specify the merge type. See: https://cloudinit.readthedocs.io/en/latest/reference/merging.html false downloadURL string            DownloadURL specifies the URL to download k0s binary from. If specified the version field is ignored and what ever version is downloaded from the URL is used. false files []object            Files specifies extra files to be passed to user_data upon creation. false postStartCommands []string            PostStartCommands specifies commands to be run after starting k0s worker. false preInstalledK0s boolean            PreInstallK0s specifies whether k0s binary is pre-installed on the node. false preStartCommands []string            PreStartCommands specifies commands to be run before starting k0s worker. false secretMetadata object            SecretMetadata specifies metadata (labels and annotations) to be propagated to the bootstrap Secret. false useSystemHostname boolean            UseSystemHostname specifies whether to use the system hostname for the kubernetes node name. By default, k0smotron will use Machine name as a node name. If true, it will pick it from `hostname` command output. Default: false false version string            Version is the version of k0s to use. In case this is not set, k0smotron will use a version field of the Machine object. If it's empty, the latest version is used. Make sure the version is compatible with the k0s version running on the control plane. For reference see the Kubernetes version skew policy: https://kubernetes.io/docs/setup/release/version-skew-policy/ false"},{"location":"resource-reference/bootstrap.cluster.x-k8s.io-v1beta1/#k0sworkerconfigspeccustomuserdataref","title":"K0sWorkerConfig.spec.customUserDataRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>CustomUserDataRef is a reference to a secret or a configmap that contains the custom user data. Provided user-data will be merged with the one generated by k0smotron. Note that you may want to specify the merge type. See: https://cloudinit.readthedocs.io/en/latest/reference/merging.html</p> Name Type Description Required configMapRef object            ConfigMapRef is a reference to a configmap that contains the content. false secretRef object            SecretRef is a reference to a secret that contains the content. false"},{"location":"resource-reference/bootstrap.cluster.x-k8s.io-v1beta1/#k0sworkerconfigspeccustomuserdatarefconfigmapref","title":"K0sWorkerConfig.spec.customUserDataRef.configMapRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>ConfigMapRef is a reference to a configmap that contains the content.</p> Name Type Description Required key string            Key is the key in the source that contains the content true name string            Name is the name of the source true"},{"location":"resource-reference/bootstrap.cluster.x-k8s.io-v1beta1/#k0sworkerconfigspeccustomuserdatarefsecretref","title":"K0sWorkerConfig.spec.customUserDataRef.secretRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>SecretRef is a reference to a secret that contains the content.</p> Name Type Description Required key string            Key is the key in the source that contains the content true name string            Name is the name of the source true"},{"location":"resource-reference/bootstrap.cluster.x-k8s.io-v1beta1/#k0sworkerconfigspecfilesindex","title":"K0sWorkerConfig.spec.files[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>File defines a file to be passed to user_data upon creation.</p> Name Type Description Required content string false contentFrom object            ContentFrom specifies the source of the content. false path string false permissions string false"},{"location":"resource-reference/bootstrap.cluster.x-k8s.io-v1beta1/#k0sworkerconfigspecfilesindexcontentfrom","title":"K0sWorkerConfig.spec.files[index].contentFrom","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>ContentFrom specifies the source of the content.</p> Name Type Description Required configMapRef object            ConfigMapRef is a reference to a configmap that contains the content. false secretRef object            SecretRef is a reference to a secret that contains the content. false"},{"location":"resource-reference/bootstrap.cluster.x-k8s.io-v1beta1/#k0sworkerconfigspecfilesindexcontentfromconfigmapref","title":"K0sWorkerConfig.spec.files[index].contentFrom.configMapRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>ConfigMapRef is a reference to a configmap that contains the content.</p> Name Type Description Required key string            Key is the key in the source that contains the content true name string            Name is the name of the source true"},{"location":"resource-reference/bootstrap.cluster.x-k8s.io-v1beta1/#k0sworkerconfigspecfilesindexcontentfromsecretref","title":"K0sWorkerConfig.spec.files[index].contentFrom.secretRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>SecretRef is a reference to a secret that contains the content.</p> Name Type Description Required key string            Key is the key in the source that contains the content true name string            Name is the name of the source true"},{"location":"resource-reference/bootstrap.cluster.x-k8s.io-v1beta1/#k0sworkerconfigspecsecretmetadata","title":"K0sWorkerConfig.spec.secretMetadata","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>SecretMetadata specifies metadata (labels and annotations) to be propagated to the bootstrap Secret.</p> Name Type Description Required annotations map[string]string            Annotations to be added to the bootstrap Secret false labels map[string]string            Labels to be added to the bootstrap Secret false"},{"location":"resource-reference/bootstrap.cluster.x-k8s.io-v1beta1/#k0sworkerconfigstatus","title":"K0sWorkerConfig.status","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> Name Type Description Required conditions []object            Conditions defines current service state of the K0sWorkerConfig. false dataSecretName string            DataSecretName is the name of the secret that stores the bootstrap data script. false ready boolean            Ready indicates the Bootstrapdata field is ready to be consumed false"},{"location":"resource-reference/bootstrap.cluster.x-k8s.io-v1beta1/#k0sworkerconfigstatusconditionsindex","title":"K0sWorkerConfig.status.conditions[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Condition defines an observation of a Cluster API resource operational state.</p> Name Type Description Required lastTransitionTime string            Last time the condition transitioned from one status to another. This should be when the underlying condition changed. If that is not known, then using the time when the API field changed is acceptable. Format: date-time true status string            Status of the condition, one of True, False, Unknown. true type string            Type of condition in CamelCase or in foo.example.com/CamelCase. Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. true message string            A human readable message indicating details about the transition. This field may be empty. false reason string            The reason for the condition's last transition in CamelCase. The specific API may choose whether or not this field is considered a guaranteed API. This field may not be empty. false severity string            Severity provides an explicit classification of Reason code, so the users or machines can immediately understand the current situation and act accordingly. The Severity field MUST be set only when Status=False. false"},{"location":"resource-reference/bootstrap.cluster.x-k8s.io-v1beta1/#k0sworkerconfigtemplate","title":"K0sWorkerConfigTemplate","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> Name Type Description Required apiVersion string bootstrap.cluster.x-k8s.io/v1beta1 true kind string K0sWorkerConfigTemplate true metadata object Refer to the Kubernetes API documentation for the fields of the `metadata` field. true spec object false"},{"location":"resource-reference/bootstrap.cluster.x-k8s.io-v1beta1/#k0sworkerconfigtemplatespec","title":"K0sWorkerConfigTemplate.spec","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> Name Type Description Required template object false"},{"location":"resource-reference/bootstrap.cluster.x-k8s.io-v1beta1/#k0sworkerconfigtemplatespectemplate","title":"K0sWorkerConfigTemplate.spec.template","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> Name Type Description Required metadata object false spec object false"},{"location":"resource-reference/bootstrap.cluster.x-k8s.io-v1beta1/#k0sworkerconfigtemplatespectemplatemetadata","title":"K0sWorkerConfigTemplate.spec.template.metadata","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> Name Type Description Required annotations map[string]string false finalizers []string false labels map[string]string false name string false namespace string false"},{"location":"resource-reference/bootstrap.cluster.x-k8s.io-v1beta1/#k0sworkerconfigtemplatespectemplatespec","title":"K0sWorkerConfigTemplate.spec.template.spec","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> Name Type Description Required args []string            Args specifies extra arguments to be passed to k0s worker. See: https://docs.k0sproject.io/stable/worker-node-config/ See: https://docs.k0sproject.io/stable/cli/k0s_worker/ false customUserDataRef object            CustomUserDataRef is a reference to a secret or a configmap that contains the custom user data. Provided user-data will be merged with the one generated by k0smotron. Note that you may want to specify the merge type. See: https://cloudinit.readthedocs.io/en/latest/reference/merging.html false downloadURL string            DownloadURL specifies the URL to download k0s binary from. If specified the version field is ignored and what ever version is downloaded from the URL is used. false files []object            Files specifies extra files to be passed to user_data upon creation. false postStartCommands []string            PostStartCommands specifies commands to be run after starting k0s worker. false preInstalledK0s boolean            PreInstallK0s specifies whether k0s binary is pre-installed on the node. false preStartCommands []string            PreStartCommands specifies commands to be run before starting k0s worker. false secretMetadata object            SecretMetadata specifies metadata (labels and annotations) to be propagated to the bootstrap Secret. false useSystemHostname boolean            UseSystemHostname specifies whether to use the system hostname for the kubernetes node name. By default, k0smotron will use Machine name as a node name. If true, it will pick it from `hostname` command output. Default: false false version string            Version is the version of k0s to use. In case this is not set, k0smotron will use a version field of the Machine object. If it's empty, the latest version is used. Make sure the version is compatible with the k0s version running on the control plane. For reference see the Kubernetes version skew policy: https://kubernetes.io/docs/setup/release/version-skew-policy/ false"},{"location":"resource-reference/bootstrap.cluster.x-k8s.io-v1beta1/#k0sworkerconfigtemplatespectemplatespeccustomuserdataref","title":"K0sWorkerConfigTemplate.spec.template.spec.customUserDataRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>CustomUserDataRef is a reference to a secret or a configmap that contains the custom user data. Provided user-data will be merged with the one generated by k0smotron. Note that you may want to specify the merge type. See: https://cloudinit.readthedocs.io/en/latest/reference/merging.html</p> Name Type Description Required configMapRef object            ConfigMapRef is a reference to a configmap that contains the content. false secretRef object            SecretRef is a reference to a secret that contains the content. false"},{"location":"resource-reference/bootstrap.cluster.x-k8s.io-v1beta1/#k0sworkerconfigtemplatespectemplatespeccustomuserdatarefconfigmapref","title":"K0sWorkerConfigTemplate.spec.template.spec.customUserDataRef.configMapRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>ConfigMapRef is a reference to a configmap that contains the content.</p> Name Type Description Required key string            Key is the key in the source that contains the content true name string            Name is the name of the source true"},{"location":"resource-reference/bootstrap.cluster.x-k8s.io-v1beta1/#k0sworkerconfigtemplatespectemplatespeccustomuserdatarefsecretref","title":"K0sWorkerConfigTemplate.spec.template.spec.customUserDataRef.secretRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>SecretRef is a reference to a secret that contains the content.</p> Name Type Description Required key string            Key is the key in the source that contains the content true name string            Name is the name of the source true"},{"location":"resource-reference/bootstrap.cluster.x-k8s.io-v1beta1/#k0sworkerconfigtemplatespectemplatespecfilesindex","title":"K0sWorkerConfigTemplate.spec.template.spec.files[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>File defines a file to be passed to user_data upon creation.</p> Name Type Description Required content string false contentFrom object            ContentFrom specifies the source of the content. false path string false permissions string false"},{"location":"resource-reference/bootstrap.cluster.x-k8s.io-v1beta1/#k0sworkerconfigtemplatespectemplatespecfilesindexcontentfrom","title":"K0sWorkerConfigTemplate.spec.template.spec.files[index].contentFrom","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>ContentFrom specifies the source of the content.</p> Name Type Description Required configMapRef object            ConfigMapRef is a reference to a configmap that contains the content. false secretRef object            SecretRef is a reference to a secret that contains the content. false"},{"location":"resource-reference/bootstrap.cluster.x-k8s.io-v1beta1/#k0sworkerconfigtemplatespectemplatespecfilesindexcontentfromconfigmapref","title":"K0sWorkerConfigTemplate.spec.template.spec.files[index].contentFrom.configMapRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>ConfigMapRef is a reference to a configmap that contains the content.</p> Name Type Description Required key string            Key is the key in the source that contains the content true name string            Name is the name of the source true"},{"location":"resource-reference/bootstrap.cluster.x-k8s.io-v1beta1/#k0sworkerconfigtemplatespectemplatespecfilesindexcontentfromsecretref","title":"K0sWorkerConfigTemplate.spec.template.spec.files[index].contentFrom.secretRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>SecretRef is a reference to a secret that contains the content.</p> Name Type Description Required key string            Key is the key in the source that contains the content true name string            Name is the name of the source true"},{"location":"resource-reference/bootstrap.cluster.x-k8s.io-v1beta1/#k0sworkerconfigtemplatespectemplatespecsecretmetadata","title":"K0sWorkerConfigTemplate.spec.template.spec.secretMetadata","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>SecretMetadata specifies metadata (labels and annotations) to be propagated to the bootstrap Secret.</p> Name Type Description Required annotations map[string]string            Annotations to be added to the bootstrap Secret false labels map[string]string            Labels to be added to the bootstrap Secret false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/","title":"API Reference","text":"<p>Packages:</p> <ul> <li>controlplane.cluster.x-k8s.io/v1beta1</li> </ul>"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#controlplaneclusterx-k8siov1beta1","title":"controlplane.cluster.x-k8s.io/v1beta1","text":"<p>Resource Types:</p> <ul> <li>K0sControlPlane</li> </ul> <ul> <li>K0sControlPlaneTemplate</li> </ul> <ul> <li>K0smotronControlPlane</li> </ul> <ul> <li>K0smotronControlPlaneTemplate</li> </ul>"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0scontrolplane","title":"K0sControlPlane","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> Name Type Description Required apiVersion string controlplane.cluster.x-k8s.io/v1beta1 true kind string K0sControlPlane true metadata object Refer to the Kubernetes API documentation for the fields of the `metadata` field. true spec object false status object Default: map[version:] false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0scontrolplanespec","title":"K0sControlPlane.spec","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> Name Type Description Required k0sConfigSpec object true machineTemplate object true replicas integer Format: int32 Default: 1 false updateStrategy enum            UpdateStrategy defines the strategy to use when updating the control plane. Enum: InPlace, Recreate Default: InPlace false version string            Version defines the k0s version to be deployed. You can use a specific k0s version (e.g. v1.27.1+k0s.0) or just the Kubernetes version (e.g. v1.27.1). If left empty, k0smotron will select one automatically. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0scontrolplanespeck0sconfigspec","title":"K0sControlPlane.spec.k0sConfigSpec","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> Name Type Description Required args []string            Args specifies extra arguments to be passed to k0s controller. See: https://docs.k0sproject.io/stable/cli/k0s_controller/ false customUserDataRef object            CustomUserDataRef is a reference to a secret or a configmap that contains the custom user data. Provided user-data will be merged with the one generated by k0smotron. Note that you may want to specify the merge type. See: https://cloudinit.readthedocs.io/en/latest/reference/merging.html false downloadURL string            DownloadURL specifies the URL from which to download the k0s binary. If the version field is specified, it is ignored, and whatever version is downloaded from the URL is used. false files []object            Files specifies extra files to be passed to user_data upon creation. false k0s object            K0s defines the k0s configuration. Note, that some fields will be overwritten by k0smotron. If empty, will be used default configuration. @see https://docs.k0sproject.io/stable/configuration/ false postStartCommands []string            PostStartCommands specifies commands to be run after starting k0s worker. false preInstalledK0s boolean            PreInstallK0s specifies whether k0s binary is pre-installed on the node. false preStartCommands []string            PreStartCommands specifies commands to be run before starting k0s worker. false tunneling object            Tunneling defines the tunneling configuration for the cluster. false useSystemHostname boolean            UseSystemHostname specifies whether to use the system hostname for the kubernetes node name. By default, k0smotron will use Machine name as a node name. If true, it will pick it from `hostname` command output. Default: false false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0scontrolplanespeck0sconfigspeccustomuserdataref","title":"K0sControlPlane.spec.k0sConfigSpec.customUserDataRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>CustomUserDataRef is a reference to a secret or a configmap that contains the custom user data. Provided user-data will be merged with the one generated by k0smotron. Note that you may want to specify the merge type. See: https://cloudinit.readthedocs.io/en/latest/reference/merging.html</p> Name Type Description Required configMapRef object            ConfigMapRef is a reference to a configmap that contains the content. false secretRef object            SecretRef is a reference to a secret that contains the content. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0scontrolplanespeck0sconfigspeccustomuserdatarefconfigmapref","title":"K0sControlPlane.spec.k0sConfigSpec.customUserDataRef.configMapRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>ConfigMapRef is a reference to a configmap that contains the content.</p> Name Type Description Required key string            Key is the key in the source that contains the content true name string            Name is the name of the source true"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0scontrolplanespeck0sconfigspeccustomuserdatarefsecretref","title":"K0sControlPlane.spec.k0sConfigSpec.customUserDataRef.secretRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>SecretRef is a reference to a secret that contains the content.</p> Name Type Description Required key string            Key is the key in the source that contains the content true name string            Name is the name of the source true"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0scontrolplanespeck0sconfigspecfilesindex","title":"K0sControlPlane.spec.k0sConfigSpec.files[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>File defines a file to be passed to user_data upon creation.</p> Name Type Description Required content string false contentFrom object            ContentFrom specifies the source of the content. false path string false permissions string false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0scontrolplanespeck0sconfigspecfilesindexcontentfrom","title":"K0sControlPlane.spec.k0sConfigSpec.files[index].contentFrom","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>ContentFrom specifies the source of the content.</p> Name Type Description Required configMapRef object            ConfigMapRef is a reference to a configmap that contains the content. false secretRef object            SecretRef is a reference to a secret that contains the content. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0scontrolplanespeck0sconfigspecfilesindexcontentfromconfigmapref","title":"K0sControlPlane.spec.k0sConfigSpec.files[index].contentFrom.configMapRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>ConfigMapRef is a reference to a configmap that contains the content.</p> Name Type Description Required key string            Key is the key in the source that contains the content true name string            Name is the name of the source true"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0scontrolplanespeck0sconfigspecfilesindexcontentfromsecretref","title":"K0sControlPlane.spec.k0sConfigSpec.files[index].contentFrom.secretRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>SecretRef is a reference to a secret that contains the content.</p> Name Type Description Required key string            Key is the key in the source that contains the content true name string            Name is the name of the source true"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0scontrolplanespeck0sconfigspectunneling","title":"K0sControlPlane.spec.k0sConfigSpec.tunneling","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Tunneling defines the tunneling configuration for the cluster.</p> Name Type Description Required enabled boolean            Enabled specifies whether tunneling is enabled. Default: false false mode enum            Mode describes tunneling mode. If empty, k0smotron will use the default one. Enum: tunnel, proxy Default: tunnel false serverAddress string            Server address of the tunneling server. If empty, k0smotron will try to detect worker node address for. false serverNodePort integer            NodePort to publish for server port of the tunneling server. If empty, k0smotron will use the default one. Format: int32 Default: 31700 false tunnelingNodePort integer            NodePort to publish for tunneling port. If empty, k0smotron will use the default one. Format: int32 Default: 31443 false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0scontrolplanespecmachinetemplate","title":"K0sControlPlane.spec.machineTemplate","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> Name Type Description Required infrastructureRef object            InfrastructureRef is a required reference to a custom resource offered by an infrastructure provider. true metadata object            Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata false nodeDeletionTimeout string            NodeDeletionTimeout defines how long the machine controller will attempt to delete the Node that the Machine hosts after the Machine is marked for deletion. A duration of 0 will retry deletion indefinitely. If no value is provided, the default value for this property of the Machine resource will be used. false nodeDrainTimeout string            NodeDrainTimeout is the total amount of time that the controller will spend on draining a controlplane node The default value is 0, meaning that the node can be drained without any time limitations. NOTE: NodeDrainTimeout is different from `kubectl drain --timeout` false nodeVolumeDetachTimeout string            NodeVolumeDetachTimeout is the total amount of time that the controller will spend on waiting for all volumes to be detached. The default value is 0, meaning that the volumes can be detached without any time limitations. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0scontrolplanespecmachinetemplateinfrastructureref","title":"K0sControlPlane.spec.machineTemplate.infrastructureRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>InfrastructureRef is a required reference to a custom resource offered by an infrastructure provider.</p> Name Type Description Required apiVersion string            API version of the referent. false fieldPath string            If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered the event) or if no container name is specified \"spec.containers[2]\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future. false kind string            Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds false name string            Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names false namespace string            Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/ false resourceVersion string            Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency false uid string            UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0scontrolplanespecmachinetemplatemetadata","title":"K0sControlPlane.spec.machineTemplate.metadata","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata</p> Name Type Description Required annotations map[string]string            Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations false labels map[string]string            Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0scontrolplanestatus","title":"K0sControlPlane.status","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> Name Type Description Required conditions []object            Conditions defines current service state of the K0sControlPlane. false externalManagedControlPlane boolean            externalManagedControlPlane is a bool that should be set to true if the Node objects do not exist in the cluster. false initialized boolean            initialized denotes that the K0sControlPlane API Server is initialized and thus it can accept requests. NOTE: this field is part of the Cluster API contract and it is used to orchestrate provisioning. The value of this field is never updated after provisioning is completed. Please use conditions to check the operational state of the control plane. false ready boolean            Ready denotes that the control plane is ready false readyReplicas integer            readyReplicas is the total number of fully running and ready control plane machines. Format: int32 false replicas integer            replicas is the total number of non-terminated machines targeted by this control plane (their labels match the selector). Format: int32 false selector string            selector is the label selector in string format to avoid introspection by clients, and is used to provide the CRD-based integration for the scale subresource and additional integrations for things like kubectl describe.. The string will be in the same format as the query-param syntax. More info about label selectors: http://kubernetes.io/docs/user-guide/labels#label-selectors false unavailableReplicas integer            unavailableReplicas is the total number of unavailable machines targeted by this control plane. This is the total number of machines that are still required for the deployment to have 100% available capacity. They may either be machines that are running but not yet ready or machines that still have not been created. Format: int32 false updatedReplicas integer            updatedReplicas is the total number of non-terminated machines targeted by this control plane that have the desired template spec. Format: int32 false version string            version represents the minimum Kubernetes version for the control plane machines in the cluster. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0scontrolplanestatusconditionsindex","title":"K0sControlPlane.status.conditions[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Condition defines an observation of a Cluster API resource operational state.</p> Name Type Description Required lastTransitionTime string            Last time the condition transitioned from one status to another. This should be when the underlying condition changed. If that is not known, then using the time when the API field changed is acceptable. Format: date-time true status string            Status of the condition, one of True, False, Unknown. true type string            Type of condition in CamelCase or in foo.example.com/CamelCase. Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. true message string            A human readable message indicating details about the transition. This field may be empty. false reason string            The reason for the condition's last transition in CamelCase. The specific API may choose whether or not this field is considered a guaranteed API. This field may not be empty. false severity string            Severity provides an explicit classification of Reason code, so the users or machines can immediately understand the current situation and act accordingly. The Severity field MUST be set only when Status=False. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0scontrolplanetemplate","title":"K0sControlPlaneTemplate","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> Name Type Description Required apiVersion string controlplane.cluster.x-k8s.io/v1beta1 true kind string K0sControlPlaneTemplate true metadata object Refer to the Kubernetes API documentation for the fields of the `metadata` field. true spec object false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0scontrolplanetemplatespec","title":"K0sControlPlaneTemplate.spec","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> Name Type Description Required template object false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0scontrolplanetemplatespectemplate","title":"K0sControlPlaneTemplate.spec.template","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> Name Type Description Required metadata object false spec object false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0scontrolplanetemplatespectemplatemetadata","title":"K0sControlPlaneTemplate.spec.template.metadata","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> Name Type Description Required annotations map[string]string false finalizers []string false labels map[string]string false name string false namespace string false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0scontrolplanetemplatespectemplatespec","title":"K0sControlPlaneTemplate.spec.template.spec","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> Name Type Description Required k0sConfigSpec object true machineTemplate object            K0sControlPlaneTemplateMachineTemplate defines the template for Machines in a K0sControlPlaneMachineTemplate object. NOTE: K0sControlPlaneTemplateMachineTemplate is similar to K0sControlPlaneMachineTemplate but omits ObjectMeta and InfrastructureRef fields. These fields do not make sense on the K0sControlPlaneTemplate, because they are calculated by the Cluster topology reconciler during reconciliation and thus cannot be configured on the K0sControlPlaneTemplate. false updateStrategy enum            UpdateStrategy defines the strategy to use when updating the control plane. Enum: InPlace, Recreate Default: InPlace false version string false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0scontrolplanetemplatespectemplatespeck0sconfigspec","title":"K0sControlPlaneTemplate.spec.template.spec.k0sConfigSpec","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> Name Type Description Required args []string            Args specifies extra arguments to be passed to k0s controller. See: https://docs.k0sproject.io/stable/cli/k0s_controller/ false customUserDataRef object            CustomUserDataRef is a reference to a secret or a configmap that contains the custom user data. Provided user-data will be merged with the one generated by k0smotron. Note that you may want to specify the merge type. See: https://cloudinit.readthedocs.io/en/latest/reference/merging.html false downloadURL string            DownloadURL specifies the URL from which to download the k0s binary. If the version field is specified, it is ignored, and whatever version is downloaded from the URL is used. false files []object            Files specifies extra files to be passed to user_data upon creation. false k0s object            K0s defines the k0s configuration. Note, that some fields will be overwritten by k0smotron. If empty, will be used default configuration. @see https://docs.k0sproject.io/stable/configuration/ false postStartCommands []string            PostStartCommands specifies commands to be run after starting k0s worker. false preInstalledK0s boolean            PreInstallK0s specifies whether k0s binary is pre-installed on the node. false preStartCommands []string            PreStartCommands specifies commands to be run before starting k0s worker. false tunneling object            Tunneling defines the tunneling configuration for the cluster. false useSystemHostname boolean            UseSystemHostname specifies whether to use the system hostname for the kubernetes node name. By default, k0smotron will use Machine name as a node name. If true, it will pick it from `hostname` command output. Default: false false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0scontrolplanetemplatespectemplatespeck0sconfigspeccustomuserdataref","title":"K0sControlPlaneTemplate.spec.template.spec.k0sConfigSpec.customUserDataRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>CustomUserDataRef is a reference to a secret or a configmap that contains the custom user data. Provided user-data will be merged with the one generated by k0smotron. Note that you may want to specify the merge type. See: https://cloudinit.readthedocs.io/en/latest/reference/merging.html</p> Name Type Description Required configMapRef object            ConfigMapRef is a reference to a configmap that contains the content. false secretRef object            SecretRef is a reference to a secret that contains the content. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0scontrolplanetemplatespectemplatespeck0sconfigspeccustomuserdatarefconfigmapref","title":"K0sControlPlaneTemplate.spec.template.spec.k0sConfigSpec.customUserDataRef.configMapRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>ConfigMapRef is a reference to a configmap that contains the content.</p> Name Type Description Required key string            Key is the key in the source that contains the content true name string            Name is the name of the source true"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0scontrolplanetemplatespectemplatespeck0sconfigspeccustomuserdatarefsecretref","title":"K0sControlPlaneTemplate.spec.template.spec.k0sConfigSpec.customUserDataRef.secretRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>SecretRef is a reference to a secret that contains the content.</p> Name Type Description Required key string            Key is the key in the source that contains the content true name string            Name is the name of the source true"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0scontrolplanetemplatespectemplatespeck0sconfigspecfilesindex","title":"K0sControlPlaneTemplate.spec.template.spec.k0sConfigSpec.files[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>File defines a file to be passed to user_data upon creation.</p> Name Type Description Required content string false contentFrom object            ContentFrom specifies the source of the content. false path string false permissions string false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0scontrolplanetemplatespectemplatespeck0sconfigspecfilesindexcontentfrom","title":"K0sControlPlaneTemplate.spec.template.spec.k0sConfigSpec.files[index].contentFrom","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>ContentFrom specifies the source of the content.</p> Name Type Description Required configMapRef object            ConfigMapRef is a reference to a configmap that contains the content. false secretRef object            SecretRef is a reference to a secret that contains the content. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0scontrolplanetemplatespectemplatespeck0sconfigspecfilesindexcontentfromconfigmapref","title":"K0sControlPlaneTemplate.spec.template.spec.k0sConfigSpec.files[index].contentFrom.configMapRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>ConfigMapRef is a reference to a configmap that contains the content.</p> Name Type Description Required key string            Key is the key in the source that contains the content true name string            Name is the name of the source true"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0scontrolplanetemplatespectemplatespeck0sconfigspecfilesindexcontentfromsecretref","title":"K0sControlPlaneTemplate.spec.template.spec.k0sConfigSpec.files[index].contentFrom.secretRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>SecretRef is a reference to a secret that contains the content.</p> Name Type Description Required key string            Key is the key in the source that contains the content true name string            Name is the name of the source true"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0scontrolplanetemplatespectemplatespeck0sconfigspectunneling","title":"K0sControlPlaneTemplate.spec.template.spec.k0sConfigSpec.tunneling","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Tunneling defines the tunneling configuration for the cluster.</p> Name Type Description Required enabled boolean            Enabled specifies whether tunneling is enabled. Default: false false mode enum            Mode describes tunneling mode. If empty, k0smotron will use the default one. Enum: tunnel, proxy Default: tunnel false serverAddress string            Server address of the tunneling server. If empty, k0smotron will try to detect worker node address for. false serverNodePort integer            NodePort to publish for server port of the tunneling server. If empty, k0smotron will use the default one. Format: int32 Default: 31700 false tunnelingNodePort integer            NodePort to publish for tunneling port. If empty, k0smotron will use the default one. Format: int32 Default: 31443 false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0scontrolplanetemplatespectemplatespecmachinetemplate","title":"K0sControlPlaneTemplate.spec.template.spec.machineTemplate","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>K0sControlPlaneTemplateMachineTemplate defines the template for Machines in a K0sControlPlaneMachineTemplate object. NOTE: K0sControlPlaneTemplateMachineTemplate is similar to K0sControlPlaneMachineTemplate but omits ObjectMeta and InfrastructureRef fields. These fields do not make sense on the K0sControlPlaneTemplate, because they are calculated by the Cluster topology reconciler during reconciliation and thus cannot be configured on the K0sControlPlaneTemplate.</p> Name Type Description Required metadata object            Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata false nodeDeletionTimeout string            NodeDeletionTimeout defines how long the machine controller will attempt to delete the Node that the Machine hosts after the Machine is marked for deletion. A duration of 0 will retry deletion indefinitely. If no value is provided, the default value for this property of the Machine resource will be used. false nodeDrainTimeout string            NodeDrainTimeout is the total amount of time that the controller will spend on draining a controlplane node The default value is 0, meaning that the node can be drained without any time limitations. NOTE: NodeDrainTimeout is different from `kubectl drain --timeout` false nodeVolumeDetachTimeout string            NodeVolumeDetachTimeout is the total amount of time that the controller will spend on waiting for all volumes to be detached. The default value is 0, meaning that the volumes can be detached without any time limitations. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0scontrolplanetemplatespectemplatespecmachinetemplatemetadata","title":"K0sControlPlaneTemplate.spec.template.spec.machineTemplate.metadata","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata</p> Name Type Description Required annotations map[string]string            Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations false labels map[string]string            Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplane","title":"K0smotronControlPlane","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> Name Type Description Required apiVersion string controlplane.cluster.x-k8s.io/v1beta1 true kind string K0smotronControlPlane true metadata object Refer to the Kubernetes API documentation for the fields of the `metadata` field. true spec object            ClusterSpec defines the desired state of K0smotronCluster false status object false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespec","title":"K0smotronControlPlane.spec","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>ClusterSpec defines the desired state of K0smotronCluster</p> Name Type Description Required certificateRefs []object            CertificateRefs defines the certificate references. false controllerPlaneFlags []string            ControlPlaneFlags allows to configure additional flags for k0s control plane and to override existing ones. The default flags are kept unless they are overriden explicitly. Flags with arguments must be specified as a single string, e.g. --some-flag=argument false etcd object            Etcd defines the etcd configuration. Default: map[image:quay.io/k0sproject/etcd:v3.5.13 persistence:map[]] false externalAddress string            ExternalAddress defines k0s external address. See https://docs.k0sproject.io/stable/configuration/#specapi Will be detected automatically for service type LoadBalancer. false image string            Image defines the k0s image to be deployed. If empty k0smotron will pick it automatically. Must not include the image tag. Default: k0sproject/k0s false k0sConfig object            k0sConfig defines the k0s configuration. Note, that some fields will be overwritten by k0smotron. If empty, will be used default configuration. @see https://docs.k0sproject.io/stable/configuration/ false kineDataSourceSecretName string            KineDataSourceSecretName defines the name of kine datasource URL secret. false kineDataSourceURL string            KineDataSourceURL defines the kine datasource URL. false manifests []object            Manifests allows to specify list of volumes with manifests to be deployed in the cluster. The volumes will be mounted in /var/lib/k0s/manifests/, for this reason each manifest is a stack. K0smotron allows any kind of volume, but the recommendation is to use secrets and configmaps. For more information check: https://docs.k0sproject.io/stable/manifests/ and https://kubernetes.io/docs/concepts/storage/volumes false monitoring object            Monitoring defines the monitoring configuration. false mounts []object            Mounts allows to specify list of volumes with any files to be mounted in the controlplane pod. K0smotron allows any kind of volume, but the recommendation is to use secrets and configmaps. For more information check: https://kubernetes.io/docs/concepts/storage/volumes false persistence object            Persistence defines the persistence configuration. If empty k0smotron will use emptyDir as a volume. See https://docs.k0smotron.io/stable/configuration/#persistence false replicas integer            Replicas is the desired number of replicas of the k0s control planes. If unspecified, defaults to 1. If the value is above 1, k0smotron requires kine datasource URL to be set. Recommended value is 3. Format: int32 Default: 1 false resources object            Resources describes the compute resource requirements for the control plane pods. false service object            Service defines the service configuration. Default: map[apiPort:30443 konnectivityPort:30132 type:ClusterIP] false serviceAccount string            ServiceAccount defines the service account to be used by both k0s and etcd StatefulSets. false topologySpreadConstraints []object            TopologySpreadConstraints will be passed directly to BOTH etcd and k0s pods. See https://kubernetes.io/docs/concepts/scheduling-eviction/topology-spread-constraints/ for more information. false version string            Version defines the k0s version to be deployed. If empty k0smotron will pick it automatically. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespeccertificaterefsindex","title":"K0smotronControlPlane.spec.certificateRefs[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> Name Type Description Required type enum Enum: ca, sa, proxy, etcd, apiserver-etcd-client, etcd-peer, etcd-server true name string false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecetcd","title":"K0smotronControlPlane.spec.etcd","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Etcd defines the etcd configuration.</p> Name Type Description Required image string            Image defines the etcd image to be deployed. Default: quay.io/k0sproject/etcd:v3.5.13 true args []string            Args defines the etcd arguments. false autoDeletePVCs boolean            AutoDeletePVCs defines whether the PVC should be deleted when the etcd cluster is deleted. Default: false false defragJob object            DefragJob defines the etcd defragmentation job configuration. false persistence object            Persistence defines the persistence configuration. false resources object            Resources defines the compute resource requirements for the etcd container. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecetcddefragjob","title":"K0smotronControlPlane.spec.etcd.defragJob","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>DefragJob defines the etcd defragmentation job configuration.</p> Name Type Description Required enabled boolean            Enabled enables the etcd defragmentation job. Default: false true image string            Image defines the etcd defragmentation job image. Default: ghcr.io/ahrtr/etcd-defrag:v0.16.0 true rule string            Rule defines the etcd defragmentation job defrag-rule. For more information check: https://github.com/ahrtr/etcd-defrag/tree/main?tab=readme-ov-file#defragmentation-rule Default: dbQuotaUsage &gt; 0.8 || dbSize - dbSizeInUse &gt; 200*1024*1024 true schedule string            Schedule defines the etcd defragmentation job schedule. Default: 0 12 * * * true"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecetcdpersistence","title":"K0smotronControlPlane.spec.etcd.persistence","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Persistence defines the persistence configuration.</p> Name Type Description Required size int or string            Size defines the size of the etcd volume. Default: 1Gi Default: 1Gi false storageClass string            StorageClass defines the storage class to be used for etcd persistence. If empty, will be used the default storage class. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecetcdresources","title":"K0smotronControlPlane.spec.etcd.resources","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Resources defines the compute resource requirements for the etcd container.</p> Name Type Description Required claims []object            Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container.   This is an alpha field and requires enabling the DynamicResourceAllocation feature gate.   This field is immutable. It can only be set for containers. false limits map[string]int or string            Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/ false requests map[string]int or string            Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/ false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecetcdresourcesclaimsindex","title":"K0smotronControlPlane.spec.etcd.resources.claims[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>ResourceClaim references one entry in PodSpec.ResourceClaims.</p> Name Type Description Required name string            Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container. true"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmanifestsindex","title":"K0smotronControlPlane.spec.manifests[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Volume represents a named volume in a pod that may be accessed by any container in the pod.</p> Name Type Description Required name string            name of the volume. Must be a DNS_LABEL and unique within the pod. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names true awsElasticBlockStore object            awsElasticBlockStore represents an AWS Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore false azureDisk object            azureDisk represents an Azure Data Disk mount on the host and bind mount to the pod. false azureFile object            azureFile represents an Azure File Service mount on the host and bind mount to the pod. false cephfs object            cephFS represents a Ceph FS mount on the host that shares a pod's lifetime false cinder object            cinder represents a cinder volume attached and mounted on kubelets host machine. More info: https://examples.k8s.io/mysql-cinder-pd/README.md false configMap object            configMap represents a configMap that should populate this volume false csi object            csi (Container Storage Interface) represents ephemeral storage that is handled by certain external CSI drivers (Beta feature). false downwardAPI object            downwardAPI represents downward API about the pod that should populate this volume false emptyDir object            emptyDir represents a temporary directory that shares a pod's lifetime. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir false ephemeral object            ephemeral represents a volume that is handled by a cluster storage driver. The volume's lifecycle is tied to the pod that defines it - it will be created before the pod starts, and deleted when the pod is removed.   Use this if: a) the volume is only needed while the pod runs, b) features of normal volumes like restoring from snapshot or capacity    tracking are needed, c) the storage driver is specified through a storage class, and d) the storage driver supports dynamic volume provisioning through    a PersistentVolumeClaim (see EphemeralVolumeSource for more    information on the connection between this volume type    and PersistentVolumeClaim).   Use PersistentVolumeClaim or one of the vendor-specific APIs for volumes that persist for longer than the lifecycle of an individual pod.   Use CSI for light-weight local ephemeral volumes if the CSI driver is meant to be used that way - see the documentation of the driver for more information.   A pod can use both types of ephemeral volumes and persistent volumes at the same time. false fc object            fc represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod. false flexVolume object            flexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin. false flocker object            flocker represents a Flocker volume attached to a kubelet's host machine. This depends on the Flocker control service being running false gcePersistentDisk object            gcePersistentDisk represents a GCE Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk false gitRepo object            gitRepo represents a git repository at a particular revision. DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir into the Pod's container. false glusterfs object            glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime. More info: https://examples.k8s.io/volumes/glusterfs/README.md false hostPath object            hostPath represents a pre-existing file or directory on the host machine that is directly exposed to the container. This is generally used for system agents or other privileged things that are allowed to see the host machine. Most containers will NOT need this. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath --- TODO(jonesdl) We need to restrict who can use host directory mounts and who can/can not mount host directories as read/write. false iscsi object            iscsi represents an ISCSI Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://examples.k8s.io/volumes/iscsi/README.md false nfs object            nfs represents an NFS mount on the host that shares a pod's lifetime More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs false persistentVolumeClaim object            persistentVolumeClaimVolumeSource represents a reference to a PersistentVolumeClaim in the same namespace. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims false photonPersistentDisk object            photonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine false portworxVolume object            portworxVolume represents a portworx volume attached and mounted on kubelets host machine false projected object            projected items for all in one resources secrets, configmaps, and downward API false quobyte object            quobyte represents a Quobyte mount on the host that shares a pod's lifetime false rbd object            rbd represents a Rados Block Device mount on the host that shares a pod's lifetime. More info: https://examples.k8s.io/volumes/rbd/README.md false scaleIO object            scaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes. false secret object            secret represents a secret that should populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret false storageos object            storageOS represents a StorageOS volume attached and mounted on Kubernetes nodes. false vsphereVolume object            vsphereVolume represents a vSphere volume attached and mounted on kubelets host machine false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmanifestsindexawselasticblockstore","title":"K0smotronControlPlane.spec.manifests[index].awsElasticBlockStore","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>awsElasticBlockStore represents an AWS Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore</p> Name Type Description Required volumeID string            volumeID is unique ID of the persistent disk resource in AWS (Amazon EBS volume). More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore true fsType string            fsType is the filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore TODO: how do we prevent errors in the filesystem from compromising the machine false partition integer            partition is the partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as \"1\". Similarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty). Format: int32 false readOnly boolean            readOnly value true will force the readOnly setting in VolumeMounts. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmanifestsindexazuredisk","title":"K0smotronControlPlane.spec.manifests[index].azureDisk","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>azureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.</p> Name Type Description Required diskName string            diskName is the Name of the data disk in the blob storage true diskURI string            diskURI is the URI of data disk in the blob storage true cachingMode string            cachingMode is the Host Caching mode: None, Read Only, Read Write. false fsType string            fsType is Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. false kind string            kind expected values are Shared: multiple blob disks per storage account  Dedicated: single blob disk per storage account  Managed: azure managed data disk (only in managed availability set). defaults to shared false readOnly boolean            readOnly Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmanifestsindexazurefile","title":"K0smotronControlPlane.spec.manifests[index].azureFile","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>azureFile represents an Azure File Service mount on the host and bind mount to the pod.</p> Name Type Description Required secretName string            secretName is the  name of secret that contains Azure Storage Account Name and Key true shareName string            shareName is the azure share Name true readOnly boolean            readOnly defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmanifestsindexcephfs","title":"K0smotronControlPlane.spec.manifests[index].cephfs","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>cephFS represents a Ceph FS mount on the host that shares a pod's lifetime</p> Name Type Description Required monitors []string            monitors is Required: Monitors is a collection of Ceph monitors More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it true path string            path is Optional: Used as the mounted root, rather than the full Ceph tree, default is / false readOnly boolean            readOnly is Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it false secretFile string            secretFile is Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it false secretRef object            secretRef is Optional: SecretRef is reference to the authentication secret for User, default is empty. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it false user string            user is optional: User is the rados user name, default is admin More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmanifestsindexcephfssecretref","title":"K0smotronControlPlane.spec.manifests[index].cephfs.secretRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>secretRef is Optional: SecretRef is reference to the authentication secret for User, default is empty. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it</p> Name Type Description Required name string            Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. TODO: Add other useful fields. apiVersion, kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896. Default:  false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmanifestsindexcinder","title":"K0smotronControlPlane.spec.manifests[index].cinder","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>cinder represents a cinder volume attached and mounted on kubelets host machine. More info: https://examples.k8s.io/mysql-cinder-pd/README.md</p> Name Type Description Required volumeID string            volumeID used to identify the volume in cinder. More info: https://examples.k8s.io/mysql-cinder-pd/README.md true fsType string            fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://examples.k8s.io/mysql-cinder-pd/README.md false readOnly boolean            readOnly defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/mysql-cinder-pd/README.md false secretRef object            secretRef is optional: points to a secret object containing parameters used to connect to OpenStack. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmanifestsindexcindersecretref","title":"K0smotronControlPlane.spec.manifests[index].cinder.secretRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>secretRef is optional: points to a secret object containing parameters used to connect to OpenStack.</p> Name Type Description Required name string            Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. TODO: Add other useful fields. apiVersion, kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896. Default:  false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmanifestsindexconfigmap","title":"K0smotronControlPlane.spec.manifests[index].configMap","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>configMap represents a configMap that should populate this volume</p> Name Type Description Required defaultMode integer            defaultMode is optional: mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set. Format: int32 false items []object            items if unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'. false name string            Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. TODO: Add other useful fields. apiVersion, kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896. Default:  false optional boolean            optional specify whether the ConfigMap or its keys must be defined false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmanifestsindexconfigmapitemsindex","title":"K0smotronControlPlane.spec.manifests[index].configMap.items[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Maps a string key to a path within a volume.</p> Name Type Description Required key string            key is the key to project. true path string            path is the relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'. true mode integer            mode is Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set. Format: int32 false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmanifestsindexcsi","title":"K0smotronControlPlane.spec.manifests[index].csi","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>csi (Container Storage Interface) represents ephemeral storage that is handled by certain external CSI drivers (Beta feature).</p> Name Type Description Required driver string            driver is the name of the CSI driver that handles this volume. Consult with your admin for the correct name as registered in the cluster. true fsType string            fsType to mount. Ex. \"ext4\", \"xfs\", \"ntfs\". If not provided, the empty value is passed to the associated CSI driver which will determine the default filesystem to apply. false nodePublishSecretRef object            nodePublishSecretRef is a reference to the secret object containing sensitive information to pass to the CSI driver to complete the CSI NodePublishVolume and NodeUnpublishVolume calls. This field is optional, and  may be empty if no secret is required. If the secret object contains more than one secret, all secret references are passed. false readOnly boolean            readOnly specifies a read-only configuration for the volume. Defaults to false (read/write). false volumeAttributes map[string]string            volumeAttributes stores driver-specific properties that are passed to the CSI driver. Consult your driver's documentation for supported values. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmanifestsindexcsinodepublishsecretref","title":"K0smotronControlPlane.spec.manifests[index].csi.nodePublishSecretRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>nodePublishSecretRef is a reference to the secret object containing sensitive information to pass to the CSI driver to complete the CSI NodePublishVolume and NodeUnpublishVolume calls. This field is optional, and  may be empty if no secret is required. If the secret object contains more than one secret, all secret references are passed.</p> Name Type Description Required name string            Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. TODO: Add other useful fields. apiVersion, kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896. Default:  false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmanifestsindexdownwardapi","title":"K0smotronControlPlane.spec.manifests[index].downwardAPI","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>downwardAPI represents downward API about the pod that should populate this volume</p> Name Type Description Required defaultMode integer            Optional: mode bits to use on created files by default. Must be a Optional: mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set. Format: int32 false items []object            Items is a list of downward API volume file false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmanifestsindexdownwardapiitemsindex","title":"K0smotronControlPlane.spec.manifests[index].downwardAPI.items[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>DownwardAPIVolumeFile represents information to create the file containing the pod field</p> Name Type Description Required path string            Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..' true fieldRef object            Required: Selects a field of the pod: only annotations, labels, name, namespace and uid are supported. false mode integer            Optional: mode bits used to set permissions on this file, must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set. Format: int32 false resourceFieldRef object            Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmanifestsindexdownwardapiitemsindexfieldref","title":"K0smotronControlPlane.spec.manifests[index].downwardAPI.items[index].fieldRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Required: Selects a field of the pod: only annotations, labels, name, namespace and uid are supported.</p> Name Type Description Required fieldPath string            Path of the field to select in the specified API version. true apiVersion string            Version of the schema the FieldPath is written in terms of, defaults to \"v1\". false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmanifestsindexdownwardapiitemsindexresourcefieldref","title":"K0smotronControlPlane.spec.manifests[index].downwardAPI.items[index].resourceFieldRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.</p> Name Type Description Required resource string            Required: resource to select true containerName string            Container name: required for volumes, optional for env vars false divisor int or string            Specifies the output format of the exposed resources, defaults to \"1\" false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmanifestsindexemptydir","title":"K0smotronControlPlane.spec.manifests[index].emptyDir","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>emptyDir represents a temporary directory that shares a pod's lifetime. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir</p> Name Type Description Required medium string            medium represents what type of storage medium should back this directory. The default is \"\" which means to use the node's default medium. Must be an empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir false sizeLimit int or string            sizeLimit is the total amount of local storage required for this EmptyDir volume. The size limit is also applicable for memory medium. The maximum usage on memory medium EmptyDir would be the minimum value between the SizeLimit specified here and the sum of memory limits of all containers in a pod. The default is nil which means that the limit is undefined. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmanifestsindexephemeral","title":"K0smotronControlPlane.spec.manifests[index].ephemeral","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>ephemeral represents a volume that is handled by a cluster storage driver. The volume's lifecycle is tied to the pod that defines it - it will be created before the pod starts, and deleted when the pod is removed.</p> <p>Use this if: a) the volume is only needed while the pod runs, b) features of normal volumes like restoring from snapshot or capacity    tracking are needed, c) the storage driver is specified through a storage class, and d) the storage driver supports dynamic volume provisioning through    a PersistentVolumeClaim (see EphemeralVolumeSource for more    information on the connection between this volume type    and PersistentVolumeClaim).</p> <p>Use PersistentVolumeClaim or one of the vendor-specific APIs for volumes that persist for longer than the lifecycle of an individual pod.</p> <p>Use CSI for light-weight local ephemeral volumes if the CSI driver is meant to be used that way - see the documentation of the driver for more information.</p> <p>A pod can use both types of ephemeral volumes and persistent volumes at the same time.</p> Name Type Description Required volumeClaimTemplate object            Will be used to create a stand-alone PVC to provision the volume. The pod in which this EphemeralVolumeSource is embedded will be the owner of the PVC, i.e. the PVC will be deleted together with the pod.  The name of the PVC will be `-` where `` is the name from the `PodSpec.Volumes` array entry. Pod validation will reject the pod if the concatenated name is not valid for a PVC (for example, too long).   An existing PVC with that name that is not owned by the pod will *not* be used for the pod to avoid using an unrelated volume by mistake. Starting the pod is then blocked until the unrelated PVC is removed. If such a pre-created PVC is meant to be used by the pod, the PVC has to updated with an owner reference to the pod once the pod exists. Normally this should not be necessary, but it may be useful when manually reconstructing a broken cluster.   This field is read-only and no changes will be made by Kubernetes to the PVC after it has been created.   Required, must not be nil. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmanifestsindexephemeralvolumeclaimtemplate","title":"K0smotronControlPlane.spec.manifests[index].ephemeral.volumeClaimTemplate","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Will be used to create a stand-alone PVC to provision the volume. The pod in which this EphemeralVolumeSource is embedded will be the owner of the PVC, i.e. the PVC will be deleted together with the pod.  The name of the PVC will be <code>&lt;pod name&gt;-&lt;volume name&gt;</code> where <code>&lt;volume name&gt;</code> is the name from the <code>PodSpec.Volumes</code> array entry. Pod validation will reject the pod if the concatenated name is not valid for a PVC (for example, too long).</p> <p>An existing PVC with that name that is not owned by the pod will not be used for the pod to avoid using an unrelated volume by mistake. Starting the pod is then blocked until the unrelated PVC is removed. If such a pre-created PVC is meant to be used by the pod, the PVC has to updated with an owner reference to the pod once the pod exists. Normally this should not be necessary, but it may be useful when manually reconstructing a broken cluster.</p> <p>This field is read-only and no changes will be made by Kubernetes to the PVC after it has been created.</p> <p>Required, must not be nil.</p> Name Type Description Required spec object            The specification for the PersistentVolumeClaim. The entire content is copied unchanged into the PVC that gets created from this template. The same fields as in a PersistentVolumeClaim are also valid here. true metadata object            May contain labels and annotations that will be copied into the PVC when creating it. No other fields are allowed and will be rejected during validation. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmanifestsindexephemeralvolumeclaimtemplatespec","title":"K0smotronControlPlane.spec.manifests[index].ephemeral.volumeClaimTemplate.spec","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>The specification for the PersistentVolumeClaim. The entire content is copied unchanged into the PVC that gets created from this template. The same fields as in a PersistentVolumeClaim are also valid here.</p> Name Type Description Required accessModes []string            accessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1 false dataSource object            dataSource field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. When the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef, and dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified. If the namespace is specified, then dataSourceRef will not be copied to dataSource. false dataSourceRef object            dataSourceRef specifies the object from which to populate the volume with data, if a non-empty volume is desired. This may be any object from a non-empty API group (non core object) or a PersistentVolumeClaim object. When this field is specified, volume binding will only succeed if the type of the specified object matches some installed volume populator or dynamic provisioner. This field will replace the functionality of the dataSource field and as such if both fields are non-empty, they must have the same value. For backwards compatibility, when namespace isn't specified in dataSourceRef, both fields (dataSource and dataSourceRef) will be set to the same value automatically if one of them is empty and the other is non-empty. When namespace is specified in dataSourceRef, dataSource isn't set to the same value and must be empty. There are three important differences between dataSource and dataSourceRef: * While dataSource only allows two specific types of objects, dataSourceRef   allows any non-core object, as well as PersistentVolumeClaim objects. * While dataSource ignores disallowed values (dropping them), dataSourceRef   preserves all values, and generates an error if a disallowed value is   specified. * While dataSource only allows local objects, dataSourceRef allows objects   in any namespaces. (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled. (Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled. false resources object            resources represents the minimum resources the volume should have. If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements that are lower than previous value but must still be higher than capacity recorded in the status field of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources false selector object            selector is a label query over volumes to consider for binding. false storageClassName string            storageClassName is the name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1 false volumeAttributesClassName string            volumeAttributesClassName may be used to set the VolumeAttributesClass used by this claim. If specified, the CSI driver will create or update the volume with the attributes defined in the corresponding VolumeAttributesClass. This has a different purpose than storageClassName, it can be changed after the claim is created. An empty string value means that no VolumeAttributesClass will be applied to the claim but it's not allowed to reset this field to empty string once it is set. If unspecified and the PersistentVolumeClaim is unbound, the default VolumeAttributesClass will be set by the persistentvolume controller if it exists. If the resource referred to by volumeAttributesClass does not exist, this PersistentVolumeClaim will be set to a Pending state, as reflected by the modifyVolumeStatus field, until such as a resource exists. More info: https://kubernetes.io/docs/concepts/storage/volume-attributes-classes/ (Alpha) Using this field requires the VolumeAttributesClass feature gate to be enabled. false volumeMode string            volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec. false volumeName string            volumeName is the binding reference to the PersistentVolume backing this claim. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmanifestsindexephemeralvolumeclaimtemplatespecdatasource","title":"K0smotronControlPlane.spec.manifests[index].ephemeral.volumeClaimTemplate.spec.dataSource","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>dataSource field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. When the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef, and dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified. If the namespace is specified, then dataSourceRef will not be copied to dataSource.</p> Name Type Description Required kind string            Kind is the type of resource being referenced true name string            Name is the name of resource being referenced true apiGroup string            APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmanifestsindexephemeralvolumeclaimtemplatespecdatasourceref","title":"K0smotronControlPlane.spec.manifests[index].ephemeral.volumeClaimTemplate.spec.dataSourceRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>dataSourceRef specifies the object from which to populate the volume with data, if a non-empty volume is desired. This may be any object from a non-empty API group (non core object) or a PersistentVolumeClaim object. When this field is specified, volume binding will only succeed if the type of the specified object matches some installed volume populator or dynamic provisioner. This field will replace the functionality of the dataSource field and as such if both fields are non-empty, they must have the same value. For backwards compatibility, when namespace isn't specified in dataSourceRef, both fields (dataSource and dataSourceRef) will be set to the same value automatically if one of them is empty and the other is non-empty. When namespace is specified in dataSourceRef, dataSource isn't set to the same value and must be empty. There are three important differences between dataSource and dataSourceRef: * While dataSource only allows two specific types of objects, dataSourceRef   allows any non-core object, as well as PersistentVolumeClaim objects. * While dataSource ignores disallowed values (dropping them), dataSourceRef   preserves all values, and generates an error if a disallowed value is   specified. * While dataSource only allows local objects, dataSourceRef allows objects   in any namespaces. (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled. (Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled.</p> Name Type Description Required kind string            Kind is the type of resource being referenced true name string            Name is the name of resource being referenced true apiGroup string            APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required. false namespace string            Namespace is the namespace of resource being referenced Note that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details. (Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmanifestsindexephemeralvolumeclaimtemplatespecresources","title":"K0smotronControlPlane.spec.manifests[index].ephemeral.volumeClaimTemplate.spec.resources","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>resources represents the minimum resources the volume should have. If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements that are lower than previous value but must still be higher than capacity recorded in the status field of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources</p> Name Type Description Required limits map[string]int or string            Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/ false requests map[string]int or string            Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/ false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmanifestsindexephemeralvolumeclaimtemplatespecselector","title":"K0smotronControlPlane.spec.manifests[index].ephemeral.volumeClaimTemplate.spec.selector","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>selector is a label query over volumes to consider for binding.</p> Name Type Description Required matchExpressions []object            matchExpressions is a list of label selector requirements. The requirements are ANDed. false matchLabels map[string]string            matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmanifestsindexephemeralvolumeclaimtemplatespecselectormatchexpressionsindex","title":"K0smotronControlPlane.spec.manifests[index].ephemeral.volumeClaimTemplate.spec.selector.matchExpressions[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.</p> Name Type Description Required key string            key is the label key that the selector applies to. true operator string            operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist. true values []string            values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmanifestsindexephemeralvolumeclaimtemplatemetadata","title":"K0smotronControlPlane.spec.manifests[index].ephemeral.volumeClaimTemplate.metadata","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>May contain labels and annotations that will be copied into the PVC when creating it. No other fields are allowed and will be rejected during validation.</p> Name Type Description Required annotations map[string]string false finalizers []string false labels map[string]string false name string false namespace string false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmanifestsindexfc","title":"K0smotronControlPlane.spec.manifests[index].fc","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>fc represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.</p> Name Type Description Required fsType string            fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. TODO: how do we prevent errors in the filesystem from compromising the machine false lun integer            lun is Optional: FC target lun number Format: int32 false readOnly boolean            readOnly is Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. false targetWWNs []string            targetWWNs is Optional: FC target worldwide names (WWNs) false wwids []string            wwids Optional: FC volume world wide identifiers (wwids) Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmanifestsindexflexvolume","title":"K0smotronControlPlane.spec.manifests[index].flexVolume","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>flexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin.</p> Name Type Description Required driver string            driver is the name of the driver to use for this volume. true fsType string            fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". The default filesystem depends on FlexVolume script. false options map[string]string            options is Optional: this field holds extra command options if any. false readOnly boolean            readOnly is Optional: defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. false secretRef object            secretRef is Optional: secretRef is reference to the secret object containing sensitive information to pass to the plugin scripts. This may be empty if no secret object is specified. If the secret object contains more than one secret, all secrets are passed to the plugin scripts. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmanifestsindexflexvolumesecretref","title":"K0smotronControlPlane.spec.manifests[index].flexVolume.secretRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>secretRef is Optional: secretRef is reference to the secret object containing sensitive information to pass to the plugin scripts. This may be empty if no secret object is specified. If the secret object contains more than one secret, all secrets are passed to the plugin scripts.</p> Name Type Description Required name string            Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. TODO: Add other useful fields. apiVersion, kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896. Default:  false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmanifestsindexflocker","title":"K0smotronControlPlane.spec.manifests[index].flocker","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>flocker represents a Flocker volume attached to a kubelet's host machine. This depends on the Flocker control service being running</p> Name Type Description Required datasetName string            datasetName is Name of the dataset stored as metadata -&gt; name on the dataset for Flocker should be considered as deprecated false datasetUUID string            datasetUUID is the UUID of the dataset. This is unique identifier of a Flocker dataset false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmanifestsindexgcepersistentdisk","title":"K0smotronControlPlane.spec.manifests[index].gcePersistentDisk","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>gcePersistentDisk represents a GCE Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk</p> Name Type Description Required pdName string            pdName is unique name of the PD resource in GCE. Used to identify the disk in GCE. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk true fsType string            fsType is filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk TODO: how do we prevent errors in the filesystem from compromising the machine false partition integer            partition is the partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as \"1\". Similarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty). More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk Format: int32 false readOnly boolean            readOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmanifestsindexgitrepo","title":"K0smotronControlPlane.spec.manifests[index].gitRepo","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>gitRepo represents a git repository at a particular revision. DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir into the Pod's container.</p> Name Type Description Required repository string            repository is the URL true directory string            directory is the target directory name. Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the git repository.  Otherwise, if specified, the volume will contain the git repository in the subdirectory with the given name. false revision string            revision is the commit hash for the specified revision. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmanifestsindexglusterfs","title":"K0smotronControlPlane.spec.manifests[index].glusterfs","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime. More info: https://examples.k8s.io/volumes/glusterfs/README.md</p> Name Type Description Required endpoints string            endpoints is the endpoint name that details Glusterfs topology. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod true path string            path is the Glusterfs volume path. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod true readOnly boolean            readOnly here will force the Glusterfs volume to be mounted with read-only permissions. Defaults to false. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmanifestsindexhostpath","title":"K0smotronControlPlane.spec.manifests[index].hostPath","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>hostPath represents a pre-existing file or directory on the host machine that is directly exposed to the container. This is generally used for system agents or other privileged things that are allowed to see the host machine. Most containers will NOT need this. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath</p> <p>TODO(jonesdl) We need to restrict who can use host directory mounts and who can/can not mount host directories as read/write.</p> Name Type Description Required path string            path of the directory on the host. If the path is a symlink, it will follow the link to the real path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath true type string            type for HostPath Volume Defaults to \"\" More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmanifestsindexiscsi","title":"K0smotronControlPlane.spec.manifests[index].iscsi","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>iscsi represents an ISCSI Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://examples.k8s.io/volumes/iscsi/README.md</p> Name Type Description Required iqn string            iqn is the target iSCSI Qualified Name. true lun integer            lun represents iSCSI Target Lun number. Format: int32 true targetPortal string            targetPortal is iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260). true chapAuthDiscovery boolean            chapAuthDiscovery defines whether support iSCSI Discovery CHAP authentication false chapAuthSession boolean            chapAuthSession defines whether support iSCSI Session CHAP authentication false fsType string            fsType is the filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi TODO: how do we prevent errors in the filesystem from compromising the machine false initiatorName string            initiatorName is the custom iSCSI Initiator Name. If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface : will be created for the connection. false iscsiInterface string            iscsiInterface is the interface Name that uses an iSCSI transport. Defaults to 'default' (tcp). false portals []string            portals is the iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260). false readOnly boolean            readOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. false secretRef object            secretRef is the CHAP Secret for iSCSI target and initiator authentication false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmanifestsindexiscsisecretref","title":"K0smotronControlPlane.spec.manifests[index].iscsi.secretRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>secretRef is the CHAP Secret for iSCSI target and initiator authentication</p> Name Type Description Required name string            Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. TODO: Add other useful fields. apiVersion, kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896. Default:  false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmanifestsindexnfs","title":"K0smotronControlPlane.spec.manifests[index].nfs","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>nfs represents an NFS mount on the host that shares a pod's lifetime More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs</p> Name Type Description Required path string            path that is exported by the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs true server string            server is the hostname or IP address of the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs true readOnly boolean            readOnly here will force the NFS export to be mounted with read-only permissions. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmanifestsindexpersistentvolumeclaim","title":"K0smotronControlPlane.spec.manifests[index].persistentVolumeClaim","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>persistentVolumeClaimVolumeSource represents a reference to a PersistentVolumeClaim in the same namespace. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims</p> Name Type Description Required claimName string            claimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims true readOnly boolean            readOnly Will force the ReadOnly setting in VolumeMounts. Default false. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmanifestsindexphotonpersistentdisk","title":"K0smotronControlPlane.spec.manifests[index].photonPersistentDisk","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>photonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine</p> Name Type Description Required pdID string            pdID is the ID that identifies Photon Controller persistent disk true fsType string            fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmanifestsindexportworxvolume","title":"K0smotronControlPlane.spec.manifests[index].portworxVolume","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>portworxVolume represents a portworx volume attached and mounted on kubelets host machine</p> Name Type Description Required volumeID string            volumeID uniquely identifies a Portworx volume true fsType string            fSType represents the filesystem type to mount Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\". Implicitly inferred to be \"ext4\" if unspecified. false readOnly boolean            readOnly defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmanifestsindexprojected","title":"K0smotronControlPlane.spec.manifests[index].projected","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>projected items for all in one resources secrets, configmaps, and downward API</p> Name Type Description Required defaultMode integer            defaultMode are the mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set. Format: int32 false sources []object            sources is the list of volume projections false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmanifestsindexprojectedsourcesindex","title":"K0smotronControlPlane.spec.manifests[index].projected.sources[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Projection that may be projected along with other supported volume types</p> Name Type Description Required clusterTrustBundle object            ClusterTrustBundle allows a pod to access the `.spec.trustBundle` field of ClusterTrustBundle objects in an auto-updating file.   Alpha, gated by the ClusterTrustBundleProjection feature gate.   ClusterTrustBundle objects can either be selected by name, or by the combination of signer name and a label selector.   Kubelet performs aggressive normalization of the PEM contents written into the pod filesystem.  Esoteric PEM features such as inter-block comments and block headers are stripped.  Certificates are deduplicated. The ordering of certificates within the file is arbitrary, and Kubelet may change the order over time. false configMap object            configMap information about the configMap data to project false downwardAPI object            downwardAPI information about the downwardAPI data to project false secret object            secret information about the secret data to project false serviceAccountToken object            serviceAccountToken is information about the serviceAccountToken data to project false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmanifestsindexprojectedsourcesindexclustertrustbundle","title":"K0smotronControlPlane.spec.manifests[index].projected.sources[index].clusterTrustBundle","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>ClusterTrustBundle allows a pod to access the <code>.spec.trustBundle</code> field of ClusterTrustBundle objects in an auto-updating file.</p> <p>Alpha, gated by the ClusterTrustBundleProjection feature gate.</p> <p>ClusterTrustBundle objects can either be selected by name, or by the combination of signer name and a label selector.</p> <p>Kubelet performs aggressive normalization of the PEM contents written into the pod filesystem.  Esoteric PEM features such as inter-block comments and block headers are stripped.  Certificates are deduplicated. The ordering of certificates within the file is arbitrary, and Kubelet may change the order over time.</p> Name Type Description Required path string            Relative path from the volume root to write the bundle. true labelSelector object            Select all ClusterTrustBundles that match this label selector.  Only has effect if signerName is set.  Mutually-exclusive with name.  If unset, interpreted as \"match nothing\".  If set but empty, interpreted as \"match everything\". false name string            Select a single ClusterTrustBundle by object name.  Mutually-exclusive with signerName and labelSelector. false optional boolean            If true, don't block pod startup if the referenced ClusterTrustBundle(s) aren't available.  If using name, then the named ClusterTrustBundle is allowed not to exist.  If using signerName, then the combination of signerName and labelSelector is allowed to match zero ClusterTrustBundles. false signerName string            Select all ClusterTrustBundles that match this signer name. Mutually-exclusive with name.  The contents of all selected ClusterTrustBundles will be unified and deduplicated. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmanifestsindexprojectedsourcesindexclustertrustbundlelabelselector","title":"K0smotronControlPlane.spec.manifests[index].projected.sources[index].clusterTrustBundle.labelSelector","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Select all ClusterTrustBundles that match this label selector.  Only has effect if signerName is set.  Mutually-exclusive with name.  If unset, interpreted as \"match nothing\".  If set but empty, interpreted as \"match everything\".</p> Name Type Description Required matchExpressions []object            matchExpressions is a list of label selector requirements. The requirements are ANDed. false matchLabels map[string]string            matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmanifestsindexprojectedsourcesindexclustertrustbundlelabelselectormatchexpressionsindex","title":"K0smotronControlPlane.spec.manifests[index].projected.sources[index].clusterTrustBundle.labelSelector.matchExpressions[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.</p> Name Type Description Required key string            key is the label key that the selector applies to. true operator string            operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist. true values []string            values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmanifestsindexprojectedsourcesindexconfigmap","title":"K0smotronControlPlane.spec.manifests[index].projected.sources[index].configMap","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>configMap information about the configMap data to project</p> Name Type Description Required items []object            items if unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'. false name string            Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. TODO: Add other useful fields. apiVersion, kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896. Default:  false optional boolean            optional specify whether the ConfigMap or its keys must be defined false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmanifestsindexprojectedsourcesindexconfigmapitemsindex","title":"K0smotronControlPlane.spec.manifests[index].projected.sources[index].configMap.items[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Maps a string key to a path within a volume.</p> Name Type Description Required key string            key is the key to project. true path string            path is the relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'. true mode integer            mode is Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set. Format: int32 false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmanifestsindexprojectedsourcesindexdownwardapi","title":"K0smotronControlPlane.spec.manifests[index].projected.sources[index].downwardAPI","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>downwardAPI information about the downwardAPI data to project</p> Name Type Description Required items []object            Items is a list of DownwardAPIVolume file false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmanifestsindexprojectedsourcesindexdownwardapiitemsindex","title":"K0smotronControlPlane.spec.manifests[index].projected.sources[index].downwardAPI.items[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>DownwardAPIVolumeFile represents information to create the file containing the pod field</p> Name Type Description Required path string            Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..' true fieldRef object            Required: Selects a field of the pod: only annotations, labels, name, namespace and uid are supported. false mode integer            Optional: mode bits used to set permissions on this file, must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set. Format: int32 false resourceFieldRef object            Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmanifestsindexprojectedsourcesindexdownwardapiitemsindexfieldref","title":"K0smotronControlPlane.spec.manifests[index].projected.sources[index].downwardAPI.items[index].fieldRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Required: Selects a field of the pod: only annotations, labels, name, namespace and uid are supported.</p> Name Type Description Required fieldPath string            Path of the field to select in the specified API version. true apiVersion string            Version of the schema the FieldPath is written in terms of, defaults to \"v1\". false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmanifestsindexprojectedsourcesindexdownwardapiitemsindexresourcefieldref","title":"K0smotronControlPlane.spec.manifests[index].projected.sources[index].downwardAPI.items[index].resourceFieldRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.</p> Name Type Description Required resource string            Required: resource to select true containerName string            Container name: required for volumes, optional for env vars false divisor int or string            Specifies the output format of the exposed resources, defaults to \"1\" false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmanifestsindexprojectedsourcesindexsecret","title":"K0smotronControlPlane.spec.manifests[index].projected.sources[index].secret","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>secret information about the secret data to project</p> Name Type Description Required items []object            items if unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'. false name string            Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. TODO: Add other useful fields. apiVersion, kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896. Default:  false optional boolean            optional field specify whether the Secret or its key must be defined false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmanifestsindexprojectedsourcesindexsecretitemsindex","title":"K0smotronControlPlane.spec.manifests[index].projected.sources[index].secret.items[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Maps a string key to a path within a volume.</p> Name Type Description Required key string            key is the key to project. true path string            path is the relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'. true mode integer            mode is Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set. Format: int32 false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmanifestsindexprojectedsourcesindexserviceaccounttoken","title":"K0smotronControlPlane.spec.manifests[index].projected.sources[index].serviceAccountToken","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>serviceAccountToken is information about the serviceAccountToken data to project</p> Name Type Description Required path string            path is the path relative to the mount point of the file to project the token into. true audience string            audience is the intended audience of the token. A recipient of a token must identify itself with an identifier specified in the audience of the token, and otherwise should reject the token. The audience defaults to the identifier of the apiserver. false expirationSeconds integer            expirationSeconds is the requested duration of validity of the service account token. As the token approaches expiration, the kubelet volume plugin will proactively rotate the service account token. The kubelet will start trying to rotate the token if the token is older than 80 percent of its time to live or if the token is older than 24 hours.Defaults to 1 hour and must be at least 10 minutes. Format: int64 false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmanifestsindexquobyte","title":"K0smotronControlPlane.spec.manifests[index].quobyte","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>quobyte represents a Quobyte mount on the host that shares a pod's lifetime</p> Name Type Description Required registry string            registry represents a single or multiple Quobyte Registry services specified as a string as host:port pair (multiple entries are separated with commas) which acts as the central registry for volumes true volume string            volume is a string that references an already created Quobyte volume by name. true group string            group to map volume access to Default is no group false readOnly boolean            readOnly here will force the Quobyte volume to be mounted with read-only permissions. Defaults to false. false tenant string            tenant owning the given Quobyte volume in the Backend Used with dynamically provisioned Quobyte volumes, value is set by the plugin false user string            user to map volume access to Defaults to serivceaccount user false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmanifestsindexrbd","title":"K0smotronControlPlane.spec.manifests[index].rbd","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>rbd represents a Rados Block Device mount on the host that shares a pod's lifetime. More info: https://examples.k8s.io/volumes/rbd/README.md</p> Name Type Description Required image string            image is the rados image name. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it true monitors []string            monitors is a collection of Ceph monitors. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it true fsType string            fsType is the filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd TODO: how do we prevent errors in the filesystem from compromising the machine false keyring string            keyring is the path to key ring for RBDUser. Default is /etc/ceph/keyring. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it false pool string            pool is the rados pool name. Default is rbd. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it false readOnly boolean            readOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it false secretRef object            secretRef is name of the authentication secret for RBDUser. If provided overrides keyring. Default is nil. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it false user string            user is the rados user name. Default is admin. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmanifestsindexrbdsecretref","title":"K0smotronControlPlane.spec.manifests[index].rbd.secretRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>secretRef is name of the authentication secret for RBDUser. If provided overrides keyring. Default is nil. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it</p> Name Type Description Required name string            Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. TODO: Add other useful fields. apiVersion, kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896. Default:  false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmanifestsindexscaleio","title":"K0smotronControlPlane.spec.manifests[index].scaleIO","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>scaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.</p> Name Type Description Required gateway string            gateway is the host address of the ScaleIO API Gateway. true secretRef object            secretRef references to the secret for ScaleIO user and other sensitive information. If this is not provided, Login operation will fail. true system string            system is the name of the storage system as configured in ScaleIO. true fsType string            fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Default is \"xfs\". false protectionDomain string            protectionDomain is the name of the ScaleIO Protection Domain for the configured storage. false readOnly boolean            readOnly Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. false sslEnabled boolean            sslEnabled Flag enable/disable SSL communication with Gateway, default false false storageMode string            storageMode indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned. Default is ThinProvisioned. false storagePool string            storagePool is the ScaleIO Storage Pool associated with the protection domain. false volumeName string            volumeName is the name of a volume already created in the ScaleIO system that is associated with this volume source. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmanifestsindexscaleiosecretref","title":"K0smotronControlPlane.spec.manifests[index].scaleIO.secretRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>secretRef references to the secret for ScaleIO user and other sensitive information. If this is not provided, Login operation will fail.</p> Name Type Description Required name string            Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. TODO: Add other useful fields. apiVersion, kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896. Default:  false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmanifestsindexsecret","title":"K0smotronControlPlane.spec.manifests[index].secret","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>secret represents a secret that should populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret</p> Name Type Description Required defaultMode integer            defaultMode is Optional: mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set. Format: int32 false items []object            items If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'. false optional boolean            optional field specify whether the Secret or its keys must be defined false secretName string            secretName is the name of the secret in the pod's namespace to use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmanifestsindexsecretitemsindex","title":"K0smotronControlPlane.spec.manifests[index].secret.items[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Maps a string key to a path within a volume.</p> Name Type Description Required key string            key is the key to project. true path string            path is the relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'. true mode integer            mode is Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set. Format: int32 false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmanifestsindexstorageos","title":"K0smotronControlPlane.spec.manifests[index].storageos","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>storageOS represents a StorageOS volume attached and mounted on Kubernetes nodes.</p> Name Type Description Required fsType string            fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. false readOnly boolean            readOnly defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. false secretRef object            secretRef specifies the secret to use for obtaining the StorageOS API credentials.  If not specified, default values will be attempted. false volumeName string            volumeName is the human-readable name of the StorageOS volume.  Volume names are only unique within a namespace. false volumeNamespace string            volumeNamespace specifies the scope of the volume within StorageOS.  If no namespace is specified then the Pod's namespace will be used.  This allows the Kubernetes name scoping to be mirrored within StorageOS for tighter integration. Set VolumeName to any name to override the default behaviour. Set to \"default\" if you are not using namespaces within StorageOS. Namespaces that do not pre-exist within StorageOS will be created. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmanifestsindexstorageossecretref","title":"K0smotronControlPlane.spec.manifests[index].storageos.secretRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>secretRef specifies the secret to use for obtaining the StorageOS API credentials.  If not specified, default values will be attempted.</p> Name Type Description Required name string            Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. TODO: Add other useful fields. apiVersion, kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896. Default:  false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmanifestsindexvspherevolume","title":"K0smotronControlPlane.spec.manifests[index].vsphereVolume","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>vsphereVolume represents a vSphere volume attached and mounted on kubelets host machine</p> Name Type Description Required volumePath string            volumePath is the path that identifies vSphere volume vmdk true fsType string            fsType is filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. false storagePolicyID string            storagePolicyID is the storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName. false storagePolicyName string            storagePolicyName is the storage Policy Based Management (SPBM) profile name. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmonitoring","title":"K0smotronControlPlane.spec.monitoring","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Monitoring defines the monitoring configuration.</p> Name Type Description Required enabled boolean            Enabled enables prometheus sidecar that scrapes metrics from the child cluster system components and expose them as usual kubernetes pod metrics. true prometheusImage string            PrometheusImage defines the image used for the prometheus sidecar. Default: quay.io/k0sproject/prometheus:v2.44.0 true proxyImage string            ProxyImage defines the image used for the nginx proxy sidecar. Default: nginx:1.19.10 true"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmountsindex","title":"K0smotronControlPlane.spec.mounts[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> Name Type Description Required path string true awsElasticBlockStore object            awsElasticBlockStore represents an AWS Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore false azureDisk object            azureDisk represents an Azure Data Disk mount on the host and bind mount to the pod. false azureFile object            azureFile represents an Azure File Service mount on the host and bind mount to the pod. false cephfs object            cephFS represents a Ceph FS mount on the host that shares a pod's lifetime false cinder object            cinder represents a cinder volume attached and mounted on kubelets host machine. More info: https://examples.k8s.io/mysql-cinder-pd/README.md false configMap object            configMap represents a configMap that should populate this volume false csi object            csi (Container Storage Interface) represents ephemeral storage that is handled by certain external CSI drivers (Beta feature). false downwardAPI object            downwardAPI represents downward API about the pod that should populate this volume false emptyDir object            emptyDir represents a temporary directory that shares a pod's lifetime. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir false ephemeral object            ephemeral represents a volume that is handled by a cluster storage driver. The volume's lifecycle is tied to the pod that defines it - it will be created before the pod starts, and deleted when the pod is removed.   Use this if: a) the volume is only needed while the pod runs, b) features of normal volumes like restoring from snapshot or capacity    tracking are needed, c) the storage driver is specified through a storage class, and d) the storage driver supports dynamic volume provisioning through    a PersistentVolumeClaim (see EphemeralVolumeSource for more    information on the connection between this volume type    and PersistentVolumeClaim).   Use PersistentVolumeClaim or one of the vendor-specific APIs for volumes that persist for longer than the lifecycle of an individual pod.   Use CSI for light-weight local ephemeral volumes if the CSI driver is meant to be used that way - see the documentation of the driver for more information.   A pod can use both types of ephemeral volumes and persistent volumes at the same time. false fc object            fc represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod. false flexVolume object            flexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin. false flocker object            flocker represents a Flocker volume attached to a kubelet's host machine. This depends on the Flocker control service being running false gcePersistentDisk object            gcePersistentDisk represents a GCE Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk false gitRepo object            gitRepo represents a git repository at a particular revision. DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir into the Pod's container. false glusterfs object            glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime. More info: https://examples.k8s.io/volumes/glusterfs/README.md false hostPath object            hostPath represents a pre-existing file or directory on the host machine that is directly exposed to the container. This is generally used for system agents or other privileged things that are allowed to see the host machine. Most containers will NOT need this. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath --- TODO(jonesdl) We need to restrict who can use host directory mounts and who can/can not mount host directories as read/write. false iscsi object            iscsi represents an ISCSI Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://examples.k8s.io/volumes/iscsi/README.md false nfs object            nfs represents an NFS mount on the host that shares a pod's lifetime More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs false persistentVolumeClaim object            persistentVolumeClaimVolumeSource represents a reference to a PersistentVolumeClaim in the same namespace. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims false photonPersistentDisk object            photonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine false portworxVolume object            portworxVolume represents a portworx volume attached and mounted on kubelets host machine false projected object            projected items for all in one resources secrets, configmaps, and downward API false quobyte object            quobyte represents a Quobyte mount on the host that shares a pod's lifetime false rbd object            rbd represents a Rados Block Device mount on the host that shares a pod's lifetime. More info: https://examples.k8s.io/volumes/rbd/README.md false readOnly boolean            ReadOnly specifies whether the volume should be mounted as read-only. (default: false, except for ConfigMaps and Secrets) false scaleIO object            scaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes. false secret object            secret represents a secret that should populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret false storageos object            storageOS represents a StorageOS volume attached and mounted on Kubernetes nodes. false vsphereVolume object            vsphereVolume represents a vSphere volume attached and mounted on kubelets host machine false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmountsindexawselasticblockstore","title":"K0smotronControlPlane.spec.mounts[index].awsElasticBlockStore","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>awsElasticBlockStore represents an AWS Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore</p> Name Type Description Required volumeID string            volumeID is unique ID of the persistent disk resource in AWS (Amazon EBS volume). More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore true fsType string            fsType is the filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore TODO: how do we prevent errors in the filesystem from compromising the machine false partition integer            partition is the partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as \"1\". Similarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty). Format: int32 false readOnly boolean            readOnly value true will force the readOnly setting in VolumeMounts. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmountsindexazuredisk","title":"K0smotronControlPlane.spec.mounts[index].azureDisk","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>azureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.</p> Name Type Description Required diskName string            diskName is the Name of the data disk in the blob storage true diskURI string            diskURI is the URI of data disk in the blob storage true cachingMode string            cachingMode is the Host Caching mode: None, Read Only, Read Write. false fsType string            fsType is Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. false kind string            kind expected values are Shared: multiple blob disks per storage account  Dedicated: single blob disk per storage account  Managed: azure managed data disk (only in managed availability set). defaults to shared false readOnly boolean            readOnly Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmountsindexazurefile","title":"K0smotronControlPlane.spec.mounts[index].azureFile","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>azureFile represents an Azure File Service mount on the host and bind mount to the pod.</p> Name Type Description Required secretName string            secretName is the  name of secret that contains Azure Storage Account Name and Key true shareName string            shareName is the azure share Name true readOnly boolean            readOnly defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmountsindexcephfs","title":"K0smotronControlPlane.spec.mounts[index].cephfs","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>cephFS represents a Ceph FS mount on the host that shares a pod's lifetime</p> Name Type Description Required monitors []string            monitors is Required: Monitors is a collection of Ceph monitors More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it true path string            path is Optional: Used as the mounted root, rather than the full Ceph tree, default is / false readOnly boolean            readOnly is Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it false secretFile string            secretFile is Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it false secretRef object            secretRef is Optional: SecretRef is reference to the authentication secret for User, default is empty. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it false user string            user is optional: User is the rados user name, default is admin More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmountsindexcephfssecretref","title":"K0smotronControlPlane.spec.mounts[index].cephfs.secretRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>secretRef is Optional: SecretRef is reference to the authentication secret for User, default is empty. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it</p> Name Type Description Required name string            Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. TODO: Add other useful fields. apiVersion, kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896. Default:  false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmountsindexcinder","title":"K0smotronControlPlane.spec.mounts[index].cinder","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>cinder represents a cinder volume attached and mounted on kubelets host machine. More info: https://examples.k8s.io/mysql-cinder-pd/README.md</p> Name Type Description Required volumeID string            volumeID used to identify the volume in cinder. More info: https://examples.k8s.io/mysql-cinder-pd/README.md true fsType string            fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://examples.k8s.io/mysql-cinder-pd/README.md false readOnly boolean            readOnly defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/mysql-cinder-pd/README.md false secretRef object            secretRef is optional: points to a secret object containing parameters used to connect to OpenStack. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmountsindexcindersecretref","title":"K0smotronControlPlane.spec.mounts[index].cinder.secretRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>secretRef is optional: points to a secret object containing parameters used to connect to OpenStack.</p> Name Type Description Required name string            Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. TODO: Add other useful fields. apiVersion, kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896. Default:  false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmountsindexconfigmap","title":"K0smotronControlPlane.spec.mounts[index].configMap","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>configMap represents a configMap that should populate this volume</p> Name Type Description Required defaultMode integer            defaultMode is optional: mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set. Format: int32 false items []object            items if unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'. false name string            Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. TODO: Add other useful fields. apiVersion, kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896. Default:  false optional boolean            optional specify whether the ConfigMap or its keys must be defined false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmountsindexconfigmapitemsindex","title":"K0smotronControlPlane.spec.mounts[index].configMap.items[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Maps a string key to a path within a volume.</p> Name Type Description Required key string            key is the key to project. true path string            path is the relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'. true mode integer            mode is Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set. Format: int32 false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmountsindexcsi","title":"K0smotronControlPlane.spec.mounts[index].csi","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>csi (Container Storage Interface) represents ephemeral storage that is handled by certain external CSI drivers (Beta feature).</p> Name Type Description Required driver string            driver is the name of the CSI driver that handles this volume. Consult with your admin for the correct name as registered in the cluster. true fsType string            fsType to mount. Ex. \"ext4\", \"xfs\", \"ntfs\". If not provided, the empty value is passed to the associated CSI driver which will determine the default filesystem to apply. false nodePublishSecretRef object            nodePublishSecretRef is a reference to the secret object containing sensitive information to pass to the CSI driver to complete the CSI NodePublishVolume and NodeUnpublishVolume calls. This field is optional, and  may be empty if no secret is required. If the secret object contains more than one secret, all secret references are passed. false readOnly boolean            readOnly specifies a read-only configuration for the volume. Defaults to false (read/write). false volumeAttributes map[string]string            volumeAttributes stores driver-specific properties that are passed to the CSI driver. Consult your driver's documentation for supported values. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmountsindexcsinodepublishsecretref","title":"K0smotronControlPlane.spec.mounts[index].csi.nodePublishSecretRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>nodePublishSecretRef is a reference to the secret object containing sensitive information to pass to the CSI driver to complete the CSI NodePublishVolume and NodeUnpublishVolume calls. This field is optional, and  may be empty if no secret is required. If the secret object contains more than one secret, all secret references are passed.</p> Name Type Description Required name string            Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. TODO: Add other useful fields. apiVersion, kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896. Default:  false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmountsindexdownwardapi","title":"K0smotronControlPlane.spec.mounts[index].downwardAPI","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>downwardAPI represents downward API about the pod that should populate this volume</p> Name Type Description Required defaultMode integer            Optional: mode bits to use on created files by default. Must be a Optional: mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set. Format: int32 false items []object            Items is a list of downward API volume file false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmountsindexdownwardapiitemsindex","title":"K0smotronControlPlane.spec.mounts[index].downwardAPI.items[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>DownwardAPIVolumeFile represents information to create the file containing the pod field</p> Name Type Description Required path string            Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..' true fieldRef object            Required: Selects a field of the pod: only annotations, labels, name, namespace and uid are supported. false mode integer            Optional: mode bits used to set permissions on this file, must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set. Format: int32 false resourceFieldRef object            Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmountsindexdownwardapiitemsindexfieldref","title":"K0smotronControlPlane.spec.mounts[index].downwardAPI.items[index].fieldRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Required: Selects a field of the pod: only annotations, labels, name, namespace and uid are supported.</p> Name Type Description Required fieldPath string            Path of the field to select in the specified API version. true apiVersion string            Version of the schema the FieldPath is written in terms of, defaults to \"v1\". false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmountsindexdownwardapiitemsindexresourcefieldref","title":"K0smotronControlPlane.spec.mounts[index].downwardAPI.items[index].resourceFieldRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.</p> Name Type Description Required resource string            Required: resource to select true containerName string            Container name: required for volumes, optional for env vars false divisor int or string            Specifies the output format of the exposed resources, defaults to \"1\" false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmountsindexemptydir","title":"K0smotronControlPlane.spec.mounts[index].emptyDir","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>emptyDir represents a temporary directory that shares a pod's lifetime. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir</p> Name Type Description Required medium string            medium represents what type of storage medium should back this directory. The default is \"\" which means to use the node's default medium. Must be an empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir false sizeLimit int or string            sizeLimit is the total amount of local storage required for this EmptyDir volume. The size limit is also applicable for memory medium. The maximum usage on memory medium EmptyDir would be the minimum value between the SizeLimit specified here and the sum of memory limits of all containers in a pod. The default is nil which means that the limit is undefined. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmountsindexephemeral","title":"K0smotronControlPlane.spec.mounts[index].ephemeral","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>ephemeral represents a volume that is handled by a cluster storage driver. The volume's lifecycle is tied to the pod that defines it - it will be created before the pod starts, and deleted when the pod is removed.</p> <p>Use this if: a) the volume is only needed while the pod runs, b) features of normal volumes like restoring from snapshot or capacity    tracking are needed, c) the storage driver is specified through a storage class, and d) the storage driver supports dynamic volume provisioning through    a PersistentVolumeClaim (see EphemeralVolumeSource for more    information on the connection between this volume type    and PersistentVolumeClaim).</p> <p>Use PersistentVolumeClaim or one of the vendor-specific APIs for volumes that persist for longer than the lifecycle of an individual pod.</p> <p>Use CSI for light-weight local ephemeral volumes if the CSI driver is meant to be used that way - see the documentation of the driver for more information.</p> <p>A pod can use both types of ephemeral volumes and persistent volumes at the same time.</p> Name Type Description Required volumeClaimTemplate object            Will be used to create a stand-alone PVC to provision the volume. The pod in which this EphemeralVolumeSource is embedded will be the owner of the PVC, i.e. the PVC will be deleted together with the pod.  The name of the PVC will be `-` where `` is the name from the `PodSpec.Volumes` array entry. Pod validation will reject the pod if the concatenated name is not valid for a PVC (for example, too long).   An existing PVC with that name that is not owned by the pod will *not* be used for the pod to avoid using an unrelated volume by mistake. Starting the pod is then blocked until the unrelated PVC is removed. If such a pre-created PVC is meant to be used by the pod, the PVC has to updated with an owner reference to the pod once the pod exists. Normally this should not be necessary, but it may be useful when manually reconstructing a broken cluster.   This field is read-only and no changes will be made by Kubernetes to the PVC after it has been created.   Required, must not be nil. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmountsindexephemeralvolumeclaimtemplate","title":"K0smotronControlPlane.spec.mounts[index].ephemeral.volumeClaimTemplate","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Will be used to create a stand-alone PVC to provision the volume. The pod in which this EphemeralVolumeSource is embedded will be the owner of the PVC, i.e. the PVC will be deleted together with the pod.  The name of the PVC will be <code>&lt;pod name&gt;-&lt;volume name&gt;</code> where <code>&lt;volume name&gt;</code> is the name from the <code>PodSpec.Volumes</code> array entry. Pod validation will reject the pod if the concatenated name is not valid for a PVC (for example, too long).</p> <p>An existing PVC with that name that is not owned by the pod will not be used for the pod to avoid using an unrelated volume by mistake. Starting the pod is then blocked until the unrelated PVC is removed. If such a pre-created PVC is meant to be used by the pod, the PVC has to updated with an owner reference to the pod once the pod exists. Normally this should not be necessary, but it may be useful when manually reconstructing a broken cluster.</p> <p>This field is read-only and no changes will be made by Kubernetes to the PVC after it has been created.</p> <p>Required, must not be nil.</p> Name Type Description Required spec object            The specification for the PersistentVolumeClaim. The entire content is copied unchanged into the PVC that gets created from this template. The same fields as in a PersistentVolumeClaim are also valid here. true metadata object            May contain labels and annotations that will be copied into the PVC when creating it. No other fields are allowed and will be rejected during validation. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmountsindexephemeralvolumeclaimtemplatespec","title":"K0smotronControlPlane.spec.mounts[index].ephemeral.volumeClaimTemplate.spec","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>The specification for the PersistentVolumeClaim. The entire content is copied unchanged into the PVC that gets created from this template. The same fields as in a PersistentVolumeClaim are also valid here.</p> Name Type Description Required accessModes []string            accessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1 false dataSource object            dataSource field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. When the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef, and dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified. If the namespace is specified, then dataSourceRef will not be copied to dataSource. false dataSourceRef object            dataSourceRef specifies the object from which to populate the volume with data, if a non-empty volume is desired. This may be any object from a non-empty API group (non core object) or a PersistentVolumeClaim object. When this field is specified, volume binding will only succeed if the type of the specified object matches some installed volume populator or dynamic provisioner. This field will replace the functionality of the dataSource field and as such if both fields are non-empty, they must have the same value. For backwards compatibility, when namespace isn't specified in dataSourceRef, both fields (dataSource and dataSourceRef) will be set to the same value automatically if one of them is empty and the other is non-empty. When namespace is specified in dataSourceRef, dataSource isn't set to the same value and must be empty. There are three important differences between dataSource and dataSourceRef: * While dataSource only allows two specific types of objects, dataSourceRef   allows any non-core object, as well as PersistentVolumeClaim objects. * While dataSource ignores disallowed values (dropping them), dataSourceRef   preserves all values, and generates an error if a disallowed value is   specified. * While dataSource only allows local objects, dataSourceRef allows objects   in any namespaces. (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled. (Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled. false resources object            resources represents the minimum resources the volume should have. If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements that are lower than previous value but must still be higher than capacity recorded in the status field of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources false selector object            selector is a label query over volumes to consider for binding. false storageClassName string            storageClassName is the name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1 false volumeAttributesClassName string            volumeAttributesClassName may be used to set the VolumeAttributesClass used by this claim. If specified, the CSI driver will create or update the volume with the attributes defined in the corresponding VolumeAttributesClass. This has a different purpose than storageClassName, it can be changed after the claim is created. An empty string value means that no VolumeAttributesClass will be applied to the claim but it's not allowed to reset this field to empty string once it is set. If unspecified and the PersistentVolumeClaim is unbound, the default VolumeAttributesClass will be set by the persistentvolume controller if it exists. If the resource referred to by volumeAttributesClass does not exist, this PersistentVolumeClaim will be set to a Pending state, as reflected by the modifyVolumeStatus field, until such as a resource exists. More info: https://kubernetes.io/docs/concepts/storage/volume-attributes-classes/ (Alpha) Using this field requires the VolumeAttributesClass feature gate to be enabled. false volumeMode string            volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec. false volumeName string            volumeName is the binding reference to the PersistentVolume backing this claim. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmountsindexephemeralvolumeclaimtemplatespecdatasource","title":"K0smotronControlPlane.spec.mounts[index].ephemeral.volumeClaimTemplate.spec.dataSource","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>dataSource field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. When the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef, and dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified. If the namespace is specified, then dataSourceRef will not be copied to dataSource.</p> Name Type Description Required kind string            Kind is the type of resource being referenced true name string            Name is the name of resource being referenced true apiGroup string            APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmountsindexephemeralvolumeclaimtemplatespecdatasourceref","title":"K0smotronControlPlane.spec.mounts[index].ephemeral.volumeClaimTemplate.spec.dataSourceRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>dataSourceRef specifies the object from which to populate the volume with data, if a non-empty volume is desired. This may be any object from a non-empty API group (non core object) or a PersistentVolumeClaim object. When this field is specified, volume binding will only succeed if the type of the specified object matches some installed volume populator or dynamic provisioner. This field will replace the functionality of the dataSource field and as such if both fields are non-empty, they must have the same value. For backwards compatibility, when namespace isn't specified in dataSourceRef, both fields (dataSource and dataSourceRef) will be set to the same value automatically if one of them is empty and the other is non-empty. When namespace is specified in dataSourceRef, dataSource isn't set to the same value and must be empty. There are three important differences between dataSource and dataSourceRef: * While dataSource only allows two specific types of objects, dataSourceRef   allows any non-core object, as well as PersistentVolumeClaim objects. * While dataSource ignores disallowed values (dropping them), dataSourceRef   preserves all values, and generates an error if a disallowed value is   specified. * While dataSource only allows local objects, dataSourceRef allows objects   in any namespaces. (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled. (Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled.</p> Name Type Description Required kind string            Kind is the type of resource being referenced true name string            Name is the name of resource being referenced true apiGroup string            APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required. false namespace string            Namespace is the namespace of resource being referenced Note that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details. (Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmountsindexephemeralvolumeclaimtemplatespecresources","title":"K0smotronControlPlane.spec.mounts[index].ephemeral.volumeClaimTemplate.spec.resources","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>resources represents the minimum resources the volume should have. If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements that are lower than previous value but must still be higher than capacity recorded in the status field of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources</p> Name Type Description Required limits map[string]int or string            Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/ false requests map[string]int or string            Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/ false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmountsindexephemeralvolumeclaimtemplatespecselector","title":"K0smotronControlPlane.spec.mounts[index].ephemeral.volumeClaimTemplate.spec.selector","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>selector is a label query over volumes to consider for binding.</p> Name Type Description Required matchExpressions []object            matchExpressions is a list of label selector requirements. The requirements are ANDed. false matchLabels map[string]string            matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmountsindexephemeralvolumeclaimtemplatespecselectormatchexpressionsindex","title":"K0smotronControlPlane.spec.mounts[index].ephemeral.volumeClaimTemplate.spec.selector.matchExpressions[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.</p> Name Type Description Required key string            key is the label key that the selector applies to. true operator string            operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist. true values []string            values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmountsindexephemeralvolumeclaimtemplatemetadata","title":"K0smotronControlPlane.spec.mounts[index].ephemeral.volumeClaimTemplate.metadata","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>May contain labels and annotations that will be copied into the PVC when creating it. No other fields are allowed and will be rejected during validation.</p> Name Type Description Required annotations map[string]string false finalizers []string false labels map[string]string false name string false namespace string false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmountsindexfc","title":"K0smotronControlPlane.spec.mounts[index].fc","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>fc represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.</p> Name Type Description Required fsType string            fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. TODO: how do we prevent errors in the filesystem from compromising the machine false lun integer            lun is Optional: FC target lun number Format: int32 false readOnly boolean            readOnly is Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. false targetWWNs []string            targetWWNs is Optional: FC target worldwide names (WWNs) false wwids []string            wwids Optional: FC volume world wide identifiers (wwids) Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmountsindexflexvolume","title":"K0smotronControlPlane.spec.mounts[index].flexVolume","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>flexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin.</p> Name Type Description Required driver string            driver is the name of the driver to use for this volume. true fsType string            fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". The default filesystem depends on FlexVolume script. false options map[string]string            options is Optional: this field holds extra command options if any. false readOnly boolean            readOnly is Optional: defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. false secretRef object            secretRef is Optional: secretRef is reference to the secret object containing sensitive information to pass to the plugin scripts. This may be empty if no secret object is specified. If the secret object contains more than one secret, all secrets are passed to the plugin scripts. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmountsindexflexvolumesecretref","title":"K0smotronControlPlane.spec.mounts[index].flexVolume.secretRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>secretRef is Optional: secretRef is reference to the secret object containing sensitive information to pass to the plugin scripts. This may be empty if no secret object is specified. If the secret object contains more than one secret, all secrets are passed to the plugin scripts.</p> Name Type Description Required name string            Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. TODO: Add other useful fields. apiVersion, kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896. Default:  false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmountsindexflocker","title":"K0smotronControlPlane.spec.mounts[index].flocker","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>flocker represents a Flocker volume attached to a kubelet's host machine. This depends on the Flocker control service being running</p> Name Type Description Required datasetName string            datasetName is Name of the dataset stored as metadata -&gt; name on the dataset for Flocker should be considered as deprecated false datasetUUID string            datasetUUID is the UUID of the dataset. This is unique identifier of a Flocker dataset false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmountsindexgcepersistentdisk","title":"K0smotronControlPlane.spec.mounts[index].gcePersistentDisk","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>gcePersistentDisk represents a GCE Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk</p> Name Type Description Required pdName string            pdName is unique name of the PD resource in GCE. Used to identify the disk in GCE. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk true fsType string            fsType is filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk TODO: how do we prevent errors in the filesystem from compromising the machine false partition integer            partition is the partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as \"1\". Similarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty). More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk Format: int32 false readOnly boolean            readOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmountsindexgitrepo","title":"K0smotronControlPlane.spec.mounts[index].gitRepo","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>gitRepo represents a git repository at a particular revision. DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir into the Pod's container.</p> Name Type Description Required repository string            repository is the URL true directory string            directory is the target directory name. Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the git repository.  Otherwise, if specified, the volume will contain the git repository in the subdirectory with the given name. false revision string            revision is the commit hash for the specified revision. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmountsindexglusterfs","title":"K0smotronControlPlane.spec.mounts[index].glusterfs","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime. More info: https://examples.k8s.io/volumes/glusterfs/README.md</p> Name Type Description Required endpoints string            endpoints is the endpoint name that details Glusterfs topology. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod true path string            path is the Glusterfs volume path. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod true readOnly boolean            readOnly here will force the Glusterfs volume to be mounted with read-only permissions. Defaults to false. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmountsindexhostpath","title":"K0smotronControlPlane.spec.mounts[index].hostPath","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>hostPath represents a pre-existing file or directory on the host machine that is directly exposed to the container. This is generally used for system agents or other privileged things that are allowed to see the host machine. Most containers will NOT need this. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath</p> <p>TODO(jonesdl) We need to restrict who can use host directory mounts and who can/can not mount host directories as read/write.</p> Name Type Description Required path string            path of the directory on the host. If the path is a symlink, it will follow the link to the real path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath true type string            type for HostPath Volume Defaults to \"\" More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmountsindexiscsi","title":"K0smotronControlPlane.spec.mounts[index].iscsi","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>iscsi represents an ISCSI Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://examples.k8s.io/volumes/iscsi/README.md</p> Name Type Description Required iqn string            iqn is the target iSCSI Qualified Name. true lun integer            lun represents iSCSI Target Lun number. Format: int32 true targetPortal string            targetPortal is iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260). true chapAuthDiscovery boolean            chapAuthDiscovery defines whether support iSCSI Discovery CHAP authentication false chapAuthSession boolean            chapAuthSession defines whether support iSCSI Session CHAP authentication false fsType string            fsType is the filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi TODO: how do we prevent errors in the filesystem from compromising the machine false initiatorName string            initiatorName is the custom iSCSI Initiator Name. If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface : will be created for the connection. false iscsiInterface string            iscsiInterface is the interface Name that uses an iSCSI transport. Defaults to 'default' (tcp). false portals []string            portals is the iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260). false readOnly boolean            readOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. false secretRef object            secretRef is the CHAP Secret for iSCSI target and initiator authentication false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmountsindexiscsisecretref","title":"K0smotronControlPlane.spec.mounts[index].iscsi.secretRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>secretRef is the CHAP Secret for iSCSI target and initiator authentication</p> Name Type Description Required name string            Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. TODO: Add other useful fields. apiVersion, kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896. Default:  false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmountsindexnfs","title":"K0smotronControlPlane.spec.mounts[index].nfs","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>nfs represents an NFS mount on the host that shares a pod's lifetime More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs</p> Name Type Description Required path string            path that is exported by the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs true server string            server is the hostname or IP address of the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs true readOnly boolean            readOnly here will force the NFS export to be mounted with read-only permissions. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmountsindexpersistentvolumeclaim","title":"K0smotronControlPlane.spec.mounts[index].persistentVolumeClaim","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>persistentVolumeClaimVolumeSource represents a reference to a PersistentVolumeClaim in the same namespace. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims</p> Name Type Description Required claimName string            claimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims true readOnly boolean            readOnly Will force the ReadOnly setting in VolumeMounts. Default false. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmountsindexphotonpersistentdisk","title":"K0smotronControlPlane.spec.mounts[index].photonPersistentDisk","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>photonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine</p> Name Type Description Required pdID string            pdID is the ID that identifies Photon Controller persistent disk true fsType string            fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmountsindexportworxvolume","title":"K0smotronControlPlane.spec.mounts[index].portworxVolume","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>portworxVolume represents a portworx volume attached and mounted on kubelets host machine</p> Name Type Description Required volumeID string            volumeID uniquely identifies a Portworx volume true fsType string            fSType represents the filesystem type to mount Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\". Implicitly inferred to be \"ext4\" if unspecified. false readOnly boolean            readOnly defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmountsindexprojected","title":"K0smotronControlPlane.spec.mounts[index].projected","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>projected items for all in one resources secrets, configmaps, and downward API</p> Name Type Description Required defaultMode integer            defaultMode are the mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set. Format: int32 false sources []object            sources is the list of volume projections false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmountsindexprojectedsourcesindex","title":"K0smotronControlPlane.spec.mounts[index].projected.sources[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Projection that may be projected along with other supported volume types</p> Name Type Description Required clusterTrustBundle object            ClusterTrustBundle allows a pod to access the `.spec.trustBundle` field of ClusterTrustBundle objects in an auto-updating file.   Alpha, gated by the ClusterTrustBundleProjection feature gate.   ClusterTrustBundle objects can either be selected by name, or by the combination of signer name and a label selector.   Kubelet performs aggressive normalization of the PEM contents written into the pod filesystem.  Esoteric PEM features such as inter-block comments and block headers are stripped.  Certificates are deduplicated. The ordering of certificates within the file is arbitrary, and Kubelet may change the order over time. false configMap object            configMap information about the configMap data to project false downwardAPI object            downwardAPI information about the downwardAPI data to project false secret object            secret information about the secret data to project false serviceAccountToken object            serviceAccountToken is information about the serviceAccountToken data to project false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmountsindexprojectedsourcesindexclustertrustbundle","title":"K0smotronControlPlane.spec.mounts[index].projected.sources[index].clusterTrustBundle","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>ClusterTrustBundle allows a pod to access the <code>.spec.trustBundle</code> field of ClusterTrustBundle objects in an auto-updating file.</p> <p>Alpha, gated by the ClusterTrustBundleProjection feature gate.</p> <p>ClusterTrustBundle objects can either be selected by name, or by the combination of signer name and a label selector.</p> <p>Kubelet performs aggressive normalization of the PEM contents written into the pod filesystem.  Esoteric PEM features such as inter-block comments and block headers are stripped.  Certificates are deduplicated. The ordering of certificates within the file is arbitrary, and Kubelet may change the order over time.</p> Name Type Description Required path string            Relative path from the volume root to write the bundle. true labelSelector object            Select all ClusterTrustBundles that match this label selector.  Only has effect if signerName is set.  Mutually-exclusive with name.  If unset, interpreted as \"match nothing\".  If set but empty, interpreted as \"match everything\". false name string            Select a single ClusterTrustBundle by object name.  Mutually-exclusive with signerName and labelSelector. false optional boolean            If true, don't block pod startup if the referenced ClusterTrustBundle(s) aren't available.  If using name, then the named ClusterTrustBundle is allowed not to exist.  If using signerName, then the combination of signerName and labelSelector is allowed to match zero ClusterTrustBundles. false signerName string            Select all ClusterTrustBundles that match this signer name. Mutually-exclusive with name.  The contents of all selected ClusterTrustBundles will be unified and deduplicated. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmountsindexprojectedsourcesindexclustertrustbundlelabelselector","title":"K0smotronControlPlane.spec.mounts[index].projected.sources[index].clusterTrustBundle.labelSelector","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Select all ClusterTrustBundles that match this label selector.  Only has effect if signerName is set.  Mutually-exclusive with name.  If unset, interpreted as \"match nothing\".  If set but empty, interpreted as \"match everything\".</p> Name Type Description Required matchExpressions []object            matchExpressions is a list of label selector requirements. The requirements are ANDed. false matchLabels map[string]string            matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmountsindexprojectedsourcesindexclustertrustbundlelabelselectormatchexpressionsindex","title":"K0smotronControlPlane.spec.mounts[index].projected.sources[index].clusterTrustBundle.labelSelector.matchExpressions[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.</p> Name Type Description Required key string            key is the label key that the selector applies to. true operator string            operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist. true values []string            values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmountsindexprojectedsourcesindexconfigmap","title":"K0smotronControlPlane.spec.mounts[index].projected.sources[index].configMap","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>configMap information about the configMap data to project</p> Name Type Description Required items []object            items if unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'. false name string            Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. TODO: Add other useful fields. apiVersion, kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896. Default:  false optional boolean            optional specify whether the ConfigMap or its keys must be defined false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmountsindexprojectedsourcesindexconfigmapitemsindex","title":"K0smotronControlPlane.spec.mounts[index].projected.sources[index].configMap.items[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Maps a string key to a path within a volume.</p> Name Type Description Required key string            key is the key to project. true path string            path is the relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'. true mode integer            mode is Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set. Format: int32 false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmountsindexprojectedsourcesindexdownwardapi","title":"K0smotronControlPlane.spec.mounts[index].projected.sources[index].downwardAPI","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>downwardAPI information about the downwardAPI data to project</p> Name Type Description Required items []object            Items is a list of DownwardAPIVolume file false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmountsindexprojectedsourcesindexdownwardapiitemsindex","title":"K0smotronControlPlane.spec.mounts[index].projected.sources[index].downwardAPI.items[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>DownwardAPIVolumeFile represents information to create the file containing the pod field</p> Name Type Description Required path string            Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..' true fieldRef object            Required: Selects a field of the pod: only annotations, labels, name, namespace and uid are supported. false mode integer            Optional: mode bits used to set permissions on this file, must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set. Format: int32 false resourceFieldRef object            Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmountsindexprojectedsourcesindexdownwardapiitemsindexfieldref","title":"K0smotronControlPlane.spec.mounts[index].projected.sources[index].downwardAPI.items[index].fieldRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Required: Selects a field of the pod: only annotations, labels, name, namespace and uid are supported.</p> Name Type Description Required fieldPath string            Path of the field to select in the specified API version. true apiVersion string            Version of the schema the FieldPath is written in terms of, defaults to \"v1\". false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmountsindexprojectedsourcesindexdownwardapiitemsindexresourcefieldref","title":"K0smotronControlPlane.spec.mounts[index].projected.sources[index].downwardAPI.items[index].resourceFieldRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.</p> Name Type Description Required resource string            Required: resource to select true containerName string            Container name: required for volumes, optional for env vars false divisor int or string            Specifies the output format of the exposed resources, defaults to \"1\" false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmountsindexprojectedsourcesindexsecret","title":"K0smotronControlPlane.spec.mounts[index].projected.sources[index].secret","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>secret information about the secret data to project</p> Name Type Description Required items []object            items if unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'. false name string            Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. TODO: Add other useful fields. apiVersion, kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896. Default:  false optional boolean            optional field specify whether the Secret or its key must be defined false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmountsindexprojectedsourcesindexsecretitemsindex","title":"K0smotronControlPlane.spec.mounts[index].projected.sources[index].secret.items[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Maps a string key to a path within a volume.</p> Name Type Description Required key string            key is the key to project. true path string            path is the relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'. true mode integer            mode is Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set. Format: int32 false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmountsindexprojectedsourcesindexserviceaccounttoken","title":"K0smotronControlPlane.spec.mounts[index].projected.sources[index].serviceAccountToken","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>serviceAccountToken is information about the serviceAccountToken data to project</p> Name Type Description Required path string            path is the path relative to the mount point of the file to project the token into. true audience string            audience is the intended audience of the token. A recipient of a token must identify itself with an identifier specified in the audience of the token, and otherwise should reject the token. The audience defaults to the identifier of the apiserver. false expirationSeconds integer            expirationSeconds is the requested duration of validity of the service account token. As the token approaches expiration, the kubelet volume plugin will proactively rotate the service account token. The kubelet will start trying to rotate the token if the token is older than 80 percent of its time to live or if the token is older than 24 hours.Defaults to 1 hour and must be at least 10 minutes. Format: int64 false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmountsindexquobyte","title":"K0smotronControlPlane.spec.mounts[index].quobyte","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>quobyte represents a Quobyte mount on the host that shares a pod's lifetime</p> Name Type Description Required registry string            registry represents a single or multiple Quobyte Registry services specified as a string as host:port pair (multiple entries are separated with commas) which acts as the central registry for volumes true volume string            volume is a string that references an already created Quobyte volume by name. true group string            group to map volume access to Default is no group false readOnly boolean            readOnly here will force the Quobyte volume to be mounted with read-only permissions. Defaults to false. false tenant string            tenant owning the given Quobyte volume in the Backend Used with dynamically provisioned Quobyte volumes, value is set by the plugin false user string            user to map volume access to Defaults to serivceaccount user false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmountsindexrbd","title":"K0smotronControlPlane.spec.mounts[index].rbd","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>rbd represents a Rados Block Device mount on the host that shares a pod's lifetime. More info: https://examples.k8s.io/volumes/rbd/README.md</p> Name Type Description Required image string            image is the rados image name. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it true monitors []string            monitors is a collection of Ceph monitors. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it true fsType string            fsType is the filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd TODO: how do we prevent errors in the filesystem from compromising the machine false keyring string            keyring is the path to key ring for RBDUser. Default is /etc/ceph/keyring. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it false pool string            pool is the rados pool name. Default is rbd. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it false readOnly boolean            readOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it false secretRef object            secretRef is name of the authentication secret for RBDUser. If provided overrides keyring. Default is nil. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it false user string            user is the rados user name. Default is admin. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmountsindexrbdsecretref","title":"K0smotronControlPlane.spec.mounts[index].rbd.secretRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>secretRef is name of the authentication secret for RBDUser. If provided overrides keyring. Default is nil. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it</p> Name Type Description Required name string            Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. TODO: Add other useful fields. apiVersion, kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896. Default:  false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmountsindexscaleio","title":"K0smotronControlPlane.spec.mounts[index].scaleIO","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>scaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.</p> Name Type Description Required gateway string            gateway is the host address of the ScaleIO API Gateway. true secretRef object            secretRef references to the secret for ScaleIO user and other sensitive information. If this is not provided, Login operation will fail. true system string            system is the name of the storage system as configured in ScaleIO. true fsType string            fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Default is \"xfs\". false protectionDomain string            protectionDomain is the name of the ScaleIO Protection Domain for the configured storage. false readOnly boolean            readOnly Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. false sslEnabled boolean            sslEnabled Flag enable/disable SSL communication with Gateway, default false false storageMode string            storageMode indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned. Default is ThinProvisioned. false storagePool string            storagePool is the ScaleIO Storage Pool associated with the protection domain. false volumeName string            volumeName is the name of a volume already created in the ScaleIO system that is associated with this volume source. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmountsindexscaleiosecretref","title":"K0smotronControlPlane.spec.mounts[index].scaleIO.secretRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>secretRef references to the secret for ScaleIO user and other sensitive information. If this is not provided, Login operation will fail.</p> Name Type Description Required name string            Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. TODO: Add other useful fields. apiVersion, kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896. Default:  false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmountsindexsecret","title":"K0smotronControlPlane.spec.mounts[index].secret","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>secret represents a secret that should populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret</p> Name Type Description Required defaultMode integer            defaultMode is Optional: mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set. Format: int32 false items []object            items If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'. false optional boolean            optional field specify whether the Secret or its keys must be defined false secretName string            secretName is the name of the secret in the pod's namespace to use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmountsindexsecretitemsindex","title":"K0smotronControlPlane.spec.mounts[index].secret.items[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Maps a string key to a path within a volume.</p> Name Type Description Required key string            key is the key to project. true path string            path is the relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'. true mode integer            mode is Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set. Format: int32 false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmountsindexstorageos","title":"K0smotronControlPlane.spec.mounts[index].storageos","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>storageOS represents a StorageOS volume attached and mounted on Kubernetes nodes.</p> Name Type Description Required fsType string            fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. false readOnly boolean            readOnly defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. false secretRef object            secretRef specifies the secret to use for obtaining the StorageOS API credentials.  If not specified, default values will be attempted. false volumeName string            volumeName is the human-readable name of the StorageOS volume.  Volume names are only unique within a namespace. false volumeNamespace string            volumeNamespace specifies the scope of the volume within StorageOS.  If no namespace is specified then the Pod's namespace will be used.  This allows the Kubernetes name scoping to be mirrored within StorageOS for tighter integration. Set VolumeName to any name to override the default behaviour. Set to \"default\" if you are not using namespaces within StorageOS. Namespaces that do not pre-exist within StorageOS will be created. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmountsindexstorageossecretref","title":"K0smotronControlPlane.spec.mounts[index].storageos.secretRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>secretRef specifies the secret to use for obtaining the StorageOS API credentials.  If not specified, default values will be attempted.</p> Name Type Description Required name string            Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. TODO: Add other useful fields. apiVersion, kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896. Default:  false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecmountsindexvspherevolume","title":"K0smotronControlPlane.spec.mounts[index].vsphereVolume","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>vsphereVolume represents a vSphere volume attached and mounted on kubelets host machine</p> Name Type Description Required volumePath string            volumePath is the path that identifies vSphere volume vmdk true fsType string            fsType is filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. false storagePolicyID string            storagePolicyID is the storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName. false storagePolicyName string            storagePolicyName is the storage Policy Based Management (SPBM) profile name. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecpersistence","title":"K0smotronControlPlane.spec.persistence","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Persistence defines the persistence configuration. If empty k0smotron will use emptyDir as a volume. See https://docs.k0smotron.io/stable/configuration/#persistence</p> Name Type Description Required type string Default: emptyDir true autoDeletePVCs boolean            AutoDeletePVCs defines whether the PVC should be deleted when the cluster is deleted. Default: false false hostPath string            HostPath defines the host path configuration. Will be used as is in case of .spec.persistence.type is hostPath. false persistentVolumeClaim object            PersistentVolumeClaim defines the PVC configuration. Will be used as is in case of .spec.persistence.type is pvc. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecpersistencepersistentvolumeclaim","title":"K0smotronControlPlane.spec.persistence.persistentVolumeClaim","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>PersistentVolumeClaim defines the PVC configuration. Will be used as is in case of .spec.persistence.type is pvc.</p> Name Type Description Required apiVersion string            APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources false kind string            Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds false metadata object            Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata false spec object            spec defines the desired characteristics of a volume requested by a pod author. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims false status object            status represents the current information/status of a persistent volume claim. Read-only. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecpersistencepersistentvolumeclaimmetadata","title":"K0smotronControlPlane.spec.persistence.persistentVolumeClaim.metadata","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata</p> Name Type Description Required annotations map[string]string false finalizers []string false labels map[string]string false name string false namespace string false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecpersistencepersistentvolumeclaimspec","title":"K0smotronControlPlane.spec.persistence.persistentVolumeClaim.spec","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>spec defines the desired characteristics of a volume requested by a pod author. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims</p> Name Type Description Required accessModes []string            accessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1 false dataSource object            dataSource field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. When the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef, and dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified. If the namespace is specified, then dataSourceRef will not be copied to dataSource. false dataSourceRef object            dataSourceRef specifies the object from which to populate the volume with data, if a non-empty volume is desired. This may be any object from a non-empty API group (non core object) or a PersistentVolumeClaim object. When this field is specified, volume binding will only succeed if the type of the specified object matches some installed volume populator or dynamic provisioner. This field will replace the functionality of the dataSource field and as such if both fields are non-empty, they must have the same value. For backwards compatibility, when namespace isn't specified in dataSourceRef, both fields (dataSource and dataSourceRef) will be set to the same value automatically if one of them is empty and the other is non-empty. When namespace is specified in dataSourceRef, dataSource isn't set to the same value and must be empty. There are three important differences between dataSource and dataSourceRef: * While dataSource only allows two specific types of objects, dataSourceRef   allows any non-core object, as well as PersistentVolumeClaim objects. * While dataSource ignores disallowed values (dropping them), dataSourceRef   preserves all values, and generates an error if a disallowed value is   specified. * While dataSource only allows local objects, dataSourceRef allows objects   in any namespaces. (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled. (Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled. false resources object            resources represents the minimum resources the volume should have. If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements that are lower than previous value but must still be higher than capacity recorded in the status field of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources false selector object            selector is a label query over volumes to consider for binding. false storageClassName string            storageClassName is the name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1 false volumeAttributesClassName string            volumeAttributesClassName may be used to set the VolumeAttributesClass used by this claim. If specified, the CSI driver will create or update the volume with the attributes defined in the corresponding VolumeAttributesClass. This has a different purpose than storageClassName, it can be changed after the claim is created. An empty string value means that no VolumeAttributesClass will be applied to the claim but it's not allowed to reset this field to empty string once it is set. If unspecified and the PersistentVolumeClaim is unbound, the default VolumeAttributesClass will be set by the persistentvolume controller if it exists. If the resource referred to by volumeAttributesClass does not exist, this PersistentVolumeClaim will be set to a Pending state, as reflected by the modifyVolumeStatus field, until such as a resource exists. More info: https://kubernetes.io/docs/concepts/storage/volume-attributes-classes/ (Alpha) Using this field requires the VolumeAttributesClass feature gate to be enabled. false volumeMode string            volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec. false volumeName string            volumeName is the binding reference to the PersistentVolume backing this claim. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecpersistencepersistentvolumeclaimspecdatasource","title":"K0smotronControlPlane.spec.persistence.persistentVolumeClaim.spec.dataSource","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>dataSource field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. When the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef, and dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified. If the namespace is specified, then dataSourceRef will not be copied to dataSource.</p> Name Type Description Required kind string            Kind is the type of resource being referenced true name string            Name is the name of resource being referenced true apiGroup string            APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecpersistencepersistentvolumeclaimspecdatasourceref","title":"K0smotronControlPlane.spec.persistence.persistentVolumeClaim.spec.dataSourceRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>dataSourceRef specifies the object from which to populate the volume with data, if a non-empty volume is desired. This may be any object from a non-empty API group (non core object) or a PersistentVolumeClaim object. When this field is specified, volume binding will only succeed if the type of the specified object matches some installed volume populator or dynamic provisioner. This field will replace the functionality of the dataSource field and as such if both fields are non-empty, they must have the same value. For backwards compatibility, when namespace isn't specified in dataSourceRef, both fields (dataSource and dataSourceRef) will be set to the same value automatically if one of them is empty and the other is non-empty. When namespace is specified in dataSourceRef, dataSource isn't set to the same value and must be empty. There are three important differences between dataSource and dataSourceRef: * While dataSource only allows two specific types of objects, dataSourceRef   allows any non-core object, as well as PersistentVolumeClaim objects. * While dataSource ignores disallowed values (dropping them), dataSourceRef   preserves all values, and generates an error if a disallowed value is   specified. * While dataSource only allows local objects, dataSourceRef allows objects   in any namespaces. (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled. (Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled.</p> Name Type Description Required kind string            Kind is the type of resource being referenced true name string            Name is the name of resource being referenced true apiGroup string            APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required. false namespace string            Namespace is the namespace of resource being referenced Note that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details. (Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecpersistencepersistentvolumeclaimspecresources","title":"K0smotronControlPlane.spec.persistence.persistentVolumeClaim.spec.resources","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>resources represents the minimum resources the volume should have. If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements that are lower than previous value but must still be higher than capacity recorded in the status field of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources</p> Name Type Description Required limits map[string]int or string            Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/ false requests map[string]int or string            Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/ false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecpersistencepersistentvolumeclaimspecselector","title":"K0smotronControlPlane.spec.persistence.persistentVolumeClaim.spec.selector","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>selector is a label query over volumes to consider for binding.</p> Name Type Description Required matchExpressions []object            matchExpressions is a list of label selector requirements. The requirements are ANDed. false matchLabels map[string]string            matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecpersistencepersistentvolumeclaimspecselectormatchexpressionsindex","title":"K0smotronControlPlane.spec.persistence.persistentVolumeClaim.spec.selector.matchExpressions[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.</p> Name Type Description Required key string            key is the label key that the selector applies to. true operator string            operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist. true values []string            values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecpersistencepersistentvolumeclaimstatus","title":"K0smotronControlPlane.spec.persistence.persistentVolumeClaim.status","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>status represents the current information/status of a persistent volume claim. Read-only. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims</p> Name Type Description Required accessModes []string            accessModes contains the actual access modes the volume backing the PVC has. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1 false allocatedResourceStatuses map[string]string            allocatedResourceStatuses stores status of resource being resized for the given PVC. Key names follow standard Kubernetes label syntax. Valid values are either:     * Un-prefixed keys:         - storage - the capacity of the volume.     * Custom resources must use implementation-defined prefixed names such as \"example.com/my-custom-resource\" Apart from above values - keys that are unprefixed or have kubernetes.io prefix are considered reserved and hence may not be used.   ClaimResourceStatus can be in any of following states:     - ControllerResizeInProgress:         State set when resize controller starts resizing the volume in control-plane.     - ControllerResizeFailed:         State set when resize has failed in resize controller with a terminal error.     - NodeResizePending:         State set when resize controller has finished resizing the volume but further resizing of         volume is needed on the node.     - NodeResizeInProgress:         State set when kubelet starts resizing the volume.     - NodeResizeFailed:         State set when resizing has failed in kubelet with a terminal error. Transient errors don't set         NodeResizeFailed. For example: if expanding a PVC for more capacity - this field can be one of the following states:     - pvc.status.allocatedResourceStatus['storage'] = \"ControllerResizeInProgress\"      - pvc.status.allocatedResourceStatus['storage'] = \"ControllerResizeFailed\"      - pvc.status.allocatedResourceStatus['storage'] = \"NodeResizePending\"      - pvc.status.allocatedResourceStatus['storage'] = \"NodeResizeInProgress\"      - pvc.status.allocatedResourceStatus['storage'] = \"NodeResizeFailed\" When this field is not set, it means that no resize operation is in progress for the given PVC.   A controller that receives PVC update with previously unknown resourceName or ClaimResourceStatus should ignore the update for the purpose it was designed. For example - a controller that only is responsible for resizing capacity of the volume, should ignore PVC updates that change other valid resources associated with PVC.   This is an alpha field and requires enabling RecoverVolumeExpansionFailure feature. false allocatedResources map[string]int or string            allocatedResources tracks the resources allocated to a PVC including its capacity. Key names follow standard Kubernetes label syntax. Valid values are either:     * Un-prefixed keys:         - storage - the capacity of the volume.     * Custom resources must use implementation-defined prefixed names such as \"example.com/my-custom-resource\" Apart from above values - keys that are unprefixed or have kubernetes.io prefix are considered reserved and hence may not be used.   Capacity reported here may be larger than the actual capacity when a volume expansion operation is requested. For storage quota, the larger value from allocatedResources and PVC.spec.resources is used. If allocatedResources is not set, PVC.spec.resources alone is used for quota calculation. If a volume expansion capacity request is lowered, allocatedResources is only lowered if there are no expansion operations in progress and if the actual volume capacity is equal or lower than the requested capacity.   A controller that receives PVC update with previously unknown resourceName should ignore the update for the purpose it was designed. For example - a controller that only is responsible for resizing capacity of the volume, should ignore PVC updates that change other valid resources associated with PVC.   This is an alpha field and requires enabling RecoverVolumeExpansionFailure feature. false capacity map[string]int or string            capacity represents the actual resources of the underlying volume. false conditions []object            conditions is the current Condition of persistent volume claim. If underlying persistent volume is being resized then the Condition will be set to 'Resizing'. false currentVolumeAttributesClassName string            currentVolumeAttributesClassName is the current name of the VolumeAttributesClass the PVC is using. When unset, there is no VolumeAttributeClass applied to this PersistentVolumeClaim This is an alpha field and requires enabling VolumeAttributesClass feature. false modifyVolumeStatus object            ModifyVolumeStatus represents the status object of ControllerModifyVolume operation. When this is unset, there is no ModifyVolume operation being attempted. This is an alpha field and requires enabling VolumeAttributesClass feature. false phase string            phase represents the current phase of PersistentVolumeClaim. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecpersistencepersistentvolumeclaimstatusconditionsindex","title":"K0smotronControlPlane.spec.persistence.persistentVolumeClaim.status.conditions[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>PersistentVolumeClaimCondition contains details about state of pvc</p> Name Type Description Required status string true type string            PersistentVolumeClaimConditionType is a valid value of PersistentVolumeClaimCondition.Type true lastProbeTime string            lastProbeTime is the time we probed the condition. Format: date-time false lastTransitionTime string            lastTransitionTime is the time the condition transitioned from one status to another. Format: date-time false message string            message is the human-readable message indicating details about last transition. false reason string            reason is a unique, this should be a short, machine understandable string that gives the reason for condition's last transition. If it reports \"Resizing\" that means the underlying persistent volume is being resized. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecpersistencepersistentvolumeclaimstatusmodifyvolumestatus","title":"K0smotronControlPlane.spec.persistence.persistentVolumeClaim.status.modifyVolumeStatus","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>ModifyVolumeStatus represents the status object of ControllerModifyVolume operation. When this is unset, there is no ModifyVolume operation being attempted. This is an alpha field and requires enabling VolumeAttributesClass feature.</p> Name Type Description Required status string            status is the status of the ControllerModifyVolume operation. It can be in any of following states:  - Pending    Pending indicates that the PersistentVolumeClaim cannot be modified due to unmet requirements, such as    the specified VolumeAttributesClass not existing.  - InProgress    InProgress indicates that the volume is being modified.  - Infeasible   Infeasible indicates that the request has been rejected as invalid by the CSI driver. To       resolve the error, a valid VolumeAttributesClass needs to be specified. Note: New statuses can be added in the future. Consumers should check for unknown statuses and fail appropriately. true targetVolumeAttributesClassName string            targetVolumeAttributesClassName is the name of the VolumeAttributesClass the PVC currently being reconciled false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecresources","title":"K0smotronControlPlane.spec.resources","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Resources describes the compute resource requirements for the control plane pods.</p> Name Type Description Required claims []object            Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container.   This is an alpha field and requires enabling the DynamicResourceAllocation feature gate.   This field is immutable. It can only be set for containers. false limits map[string]int or string            Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/ false requests map[string]int or string            Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/ false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecresourcesclaimsindex","title":"K0smotronControlPlane.spec.resources.claims[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>ResourceClaim references one entry in PodSpec.ResourceClaims.</p> Name Type Description Required name string            Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container. true"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespecservice","title":"K0smotronControlPlane.spec.service","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Service defines the service configuration.</p> Name Type Description Required type enum            Service Type string describes ingress methods for a service Enum: ClusterIP, NodePort, LoadBalancer Default: ClusterIP true annotations map[string]string            Annotations defines extra annotations to be added to the service. false apiPort integer            APIPort defines the kubernetes API port. If empty k0smotron will pick it automatically. Default: 30443 false konnectivityPort integer            KonnectivityPort defines the konnectivity port. If empty k0smotron will pick it automatically. Default: 30132 false labels map[string]string            Labels defines extra labels to be added to the service. false loadBalancerClass string            LoadBalancerClass defines the load balancer class to be used for the service. Used only when service type is LoadBalancer. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespectopologyspreadconstraintsindex","title":"K0smotronControlPlane.spec.topologySpreadConstraints[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>TopologySpreadConstraint specifies how to spread matching pods among the given topology.</p> Name Type Description Required maxSkew integer            MaxSkew describes the degree to which pods may be unevenly distributed. When `whenUnsatisfiable=DoNotSchedule`, it is the maximum permitted difference between the number of matching pods in the target topology and the global minimum. The global minimum is the minimum number of matching pods in an eligible domain or zero if the number of eligible domains is less than MinDomains. For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same labelSelector spread as 2/2/1: In this case, the global minimum is 1. | zone1 | zone2 | zone3 | |  P P  |  P P  |   P   | - if MaxSkew is 1, incoming pod can only be scheduled to zone3 to become 2/2/2; scheduling it onto zone1(zone2) would make the ActualSkew(3-1) on zone1(zone2) violate MaxSkew(1). - if MaxSkew is 2, incoming pod can be scheduled onto any zone. When `whenUnsatisfiable=ScheduleAnyway`, it is used to give higher precedence to topologies that satisfy it. It's a required field. Default value is 1 and 0 is not allowed. Format: int32 true topologyKey string            TopologyKey is the key of node labels. Nodes that have a label with this key and identical values are considered to be in the same topology. We consider each  as a \"bucket\", and try to put balanced number of pods into each bucket. We define a domain as a particular instance of a topology. Also, we define an eligible domain as a domain whose nodes meet the requirements of nodeAffinityPolicy and nodeTaintsPolicy. e.g. If TopologyKey is \"kubernetes.io/hostname\", each Node is a domain of that topology. And, if TopologyKey is \"topology.kubernetes.io/zone\", each zone is a domain of that topology. It's a required field. true whenUnsatisfiable string            WhenUnsatisfiable indicates how to deal with a pod if it doesn't satisfy the spread constraint. - DoNotSchedule (default) tells the scheduler not to schedule it. - ScheduleAnyway tells the scheduler to schedule the pod in any location,   but giving higher precedence to topologies that would help reduce the   skew. A constraint is considered \"Unsatisfiable\" for an incoming pod if and only if every possible node assignment for that pod would violate \"MaxSkew\" on some topology. For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same labelSelector spread as 3/1/1: | zone1 | zone2 | zone3 | | P P P |   P   |   P   | If WhenUnsatisfiable is set to DoNotSchedule, incoming pod can only be scheduled to zone2(zone3) to become 3/2/1(3/1/2) as ActualSkew(2-1) on zone2(zone3) satisfies MaxSkew(1). In other words, the cluster can still be imbalanced, but scheduler won't make it *more* imbalanced. It's a required field. true labelSelector object            LabelSelector is used to find matching pods. Pods that match this label selector are counted to determine the number of pods in their corresponding topology domain. false matchLabelKeys []string            MatchLabelKeys is a set of pod label keys to select the pods over which spreading will be calculated. The keys are used to lookup values from the incoming pod labels, those key-value labels are ANDed with labelSelector to select the group of existing pods over which spreading will be calculated for the incoming pod. The same key is forbidden to exist in both MatchLabelKeys and LabelSelector. MatchLabelKeys cannot be set when LabelSelector isn't set. Keys that don't exist in the incoming pod labels will be ignored. A null or empty list means only match against labelSelector.   This is a beta field and requires the MatchLabelKeysInPodTopologySpread feature gate to be enabled (enabled by default). false minDomains integer            MinDomains indicates a minimum number of eligible domains. When the number of eligible domains with matching topology keys is less than minDomains, Pod Topology Spread treats \"global minimum\" as 0, and then the calculation of Skew is performed. And when the number of eligible domains with matching topology keys equals or greater than minDomains, this value has no effect on scheduling. As a result, when the number of eligible domains is less than minDomains, scheduler won't schedule more than maxSkew Pods to those domains. If value is nil, the constraint behaves as if MinDomains is equal to 1. Valid values are integers greater than 0. When value is not nil, WhenUnsatisfiable must be DoNotSchedule.   For example, in a 3-zone cluster, MaxSkew is set to 2, MinDomains is set to 5 and pods with the same labelSelector spread as 2/2/2: | zone1 | zone2 | zone3 | |  P P  |  P P  |  P P  | The number of domains is less than 5(MinDomains), so \"global minimum\" is treated as 0. In this situation, new pod with the same labelSelector cannot be scheduled, because computed skew will be 3(3 - 0) if new Pod is scheduled to any of the three zones, it will violate MaxSkew. Format: int32 false nodeAffinityPolicy string            NodeAffinityPolicy indicates how we will treat Pod's nodeAffinity/nodeSelector when calculating pod topology spread skew. Options are: - Honor: only nodes matching nodeAffinity/nodeSelector are included in the calculations. - Ignore: nodeAffinity/nodeSelector are ignored. All nodes are included in the calculations.   If this value is nil, the behavior is equivalent to the Honor policy. This is a beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread feature flag. false nodeTaintsPolicy string            NodeTaintsPolicy indicates how we will treat node taints when calculating pod topology spread skew. Options are: - Honor: nodes without taints, along with tainted nodes for which the incoming pod has a toleration, are included. - Ignore: node taints are ignored. All nodes are included.   If this value is nil, the behavior is equivalent to the Ignore policy. This is a beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread feature flag. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespectopologyspreadconstraintsindexlabelselector","title":"K0smotronControlPlane.spec.topologySpreadConstraints[index].labelSelector","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>LabelSelector is used to find matching pods. Pods that match this label selector are counted to determine the number of pods in their corresponding topology domain.</p> Name Type Description Required matchExpressions []object            matchExpressions is a list of label selector requirements. The requirements are ANDed. false matchLabels map[string]string            matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanespectopologyspreadconstraintsindexlabelselectormatchexpressionsindex","title":"K0smotronControlPlane.spec.topologySpreadConstraints[index].labelSelector.matchExpressions[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.</p> Name Type Description Required key string            key is the label key that the selector applies to. true operator string            operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist. true values []string            values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanestatus","title":"K0smotronControlPlane.status","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> Name Type Description Required externalManagedControlPlane boolean            externalManagedControlPlane is a bool that should be set to true if the Node objects do not exist in the cluster. false initialized boolean            initialized denotes that the K0smotronControlPlane API Server is initialized and thus it can accept requests. NOTE: this field is part of the Cluster API contract and it is used to orchestrate provisioning. The value of this field is never updated after provisioning is completed. Please use conditions to check the operational state of the control plane. false ready boolean            Ready denotes that the control plane is ready false readyReplicas integer            readyReplicas is the total number of fully running and ready control plane pods. Format: int32 false replicas integer            replicas is the total number of pods targeted by this control plane Format: int32 false selector string            selector is the label selector for pods that should match the replicas count. false unavailableReplicas integer            unavailableReplicas is the total number of unavailable pods targeted by this control plane. This is the total number of pods with Condition Ready = false. They may either be pods that are running but not yet ready. Format: int32 false updatedReplicas integer            updatedReplicas is the total number of pods targeted by this control plane that have the desired version. Format: int32 false version string            version represents the minimum Kubernetes version for the control plane pods in the cluster. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplate","title":"K0smotronControlPlaneTemplate","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> Name Type Description Required apiVersion string controlplane.cluster.x-k8s.io/v1beta1 true kind string K0smotronControlPlaneTemplate true metadata object Refer to the Kubernetes API documentation for the fields of the `metadata` field. true spec object false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespec","title":"K0smotronControlPlaneTemplate.spec","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> Name Type Description Required template object false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplate","title":"K0smotronControlPlaneTemplate.spec.template","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> Name Type Description Required metadata object false spec object            ClusterSpec defines the desired state of K0smotronCluster false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatemetadata","title":"K0smotronControlPlaneTemplate.spec.template.metadata","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> Name Type Description Required annotations map[string]string false finalizers []string false labels map[string]string false name string false namespace string false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespec","title":"K0smotronControlPlaneTemplate.spec.template.spec","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>ClusterSpec defines the desired state of K0smotronCluster</p> Name Type Description Required certificateRefs []object            CertificateRefs defines the certificate references. false controllerPlaneFlags []string            ControlPlaneFlags allows to configure additional flags for k0s control plane and to override existing ones. The default flags are kept unless they are overriden explicitly. Flags with arguments must be specified as a single string, e.g. --some-flag=argument false etcd object            Etcd defines the etcd configuration. Default: map[image:quay.io/k0sproject/etcd:v3.5.13 persistence:map[]] false externalAddress string            ExternalAddress defines k0s external address. See https://docs.k0sproject.io/stable/configuration/#specapi Will be detected automatically for service type LoadBalancer. false image string            Image defines the k0s image to be deployed. If empty k0smotron will pick it automatically. Must not include the image tag. Default: k0sproject/k0s false k0sConfig object            k0sConfig defines the k0s configuration. Note, that some fields will be overwritten by k0smotron. If empty, will be used default configuration. @see https://docs.k0sproject.io/stable/configuration/ false kineDataSourceSecretName string            KineDataSourceSecretName defines the name of kine datasource URL secret. false kineDataSourceURL string            KineDataSourceURL defines the kine datasource URL. false manifests []object            Manifests allows to specify list of volumes with manifests to be deployed in the cluster. The volumes will be mounted in /var/lib/k0s/manifests/, for this reason each manifest is a stack. K0smotron allows any kind of volume, but the recommendation is to use secrets and configmaps. For more information check: https://docs.k0sproject.io/stable/manifests/ and https://kubernetes.io/docs/concepts/storage/volumes false monitoring object            Monitoring defines the monitoring configuration. false mounts []object            Mounts allows to specify list of volumes with any files to be mounted in the controlplane pod. K0smotron allows any kind of volume, but the recommendation is to use secrets and configmaps. For more information check: https://kubernetes.io/docs/concepts/storage/volumes false persistence object            Persistence defines the persistence configuration. If empty k0smotron will use emptyDir as a volume. See https://docs.k0smotron.io/stable/configuration/#persistence false replicas integer            Replicas is the desired number of replicas of the k0s control planes. If unspecified, defaults to 1. If the value is above 1, k0smotron requires kine datasource URL to be set. Recommended value is 3. Format: int32 Default: 1 false resources object            Resources describes the compute resource requirements for the control plane pods. false service object            Service defines the service configuration. Default: map[apiPort:30443 konnectivityPort:30132 type:ClusterIP] false serviceAccount string            ServiceAccount defines the service account to be used by both k0s and etcd StatefulSets. false topologySpreadConstraints []object            TopologySpreadConstraints will be passed directly to BOTH etcd and k0s pods. See https://kubernetes.io/docs/concepts/scheduling-eviction/topology-spread-constraints/ for more information. false version string            Version defines the k0s version to be deployed. If empty k0smotron will pick it automatically. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespeccertificaterefsindex","title":"K0smotronControlPlaneTemplate.spec.template.spec.certificateRefs[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> Name Type Description Required type enum Enum: ca, sa, proxy, etcd, apiserver-etcd-client, etcd-peer, etcd-server true name string false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecetcd","title":"K0smotronControlPlaneTemplate.spec.template.spec.etcd","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Etcd defines the etcd configuration.</p> Name Type Description Required image string            Image defines the etcd image to be deployed. Default: quay.io/k0sproject/etcd:v3.5.13 true args []string            Args defines the etcd arguments. false autoDeletePVCs boolean            AutoDeletePVCs defines whether the PVC should be deleted when the etcd cluster is deleted. Default: false false defragJob object            DefragJob defines the etcd defragmentation job configuration. false persistence object            Persistence defines the persistence configuration. false resources object            Resources defines the compute resource requirements for the etcd container. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecetcddefragjob","title":"K0smotronControlPlaneTemplate.spec.template.spec.etcd.defragJob","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>DefragJob defines the etcd defragmentation job configuration.</p> Name Type Description Required enabled boolean            Enabled enables the etcd defragmentation job. Default: false true image string            Image defines the etcd defragmentation job image. Default: ghcr.io/ahrtr/etcd-defrag:v0.16.0 true rule string            Rule defines the etcd defragmentation job defrag-rule. For more information check: https://github.com/ahrtr/etcd-defrag/tree/main?tab=readme-ov-file#defragmentation-rule Default: dbQuotaUsage &gt; 0.8 || dbSize - dbSizeInUse &gt; 200*1024*1024 true schedule string            Schedule defines the etcd defragmentation job schedule. Default: 0 12 * * * true"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecetcdpersistence","title":"K0smotronControlPlaneTemplate.spec.template.spec.etcd.persistence","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Persistence defines the persistence configuration.</p> Name Type Description Required size int or string            Size defines the size of the etcd volume. Default: 1Gi Default: 1Gi false storageClass string            StorageClass defines the storage class to be used for etcd persistence. If empty, will be used the default storage class. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecetcdresources","title":"K0smotronControlPlaneTemplate.spec.template.spec.etcd.resources","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Resources defines the compute resource requirements for the etcd container.</p> Name Type Description Required claims []object            Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container.   This is an alpha field and requires enabling the DynamicResourceAllocation feature gate.   This field is immutable. It can only be set for containers. false limits map[string]int or string            Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/ false requests map[string]int or string            Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/ false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecetcdresourcesclaimsindex","title":"K0smotronControlPlaneTemplate.spec.template.spec.etcd.resources.claims[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>ResourceClaim references one entry in PodSpec.ResourceClaims.</p> Name Type Description Required name string            Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container. true"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmanifestsindex","title":"K0smotronControlPlaneTemplate.spec.template.spec.manifests[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Volume represents a named volume in a pod that may be accessed by any container in the pod.</p> Name Type Description Required name string            name of the volume. Must be a DNS_LABEL and unique within the pod. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names true awsElasticBlockStore object            awsElasticBlockStore represents an AWS Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore false azureDisk object            azureDisk represents an Azure Data Disk mount on the host and bind mount to the pod. false azureFile object            azureFile represents an Azure File Service mount on the host and bind mount to the pod. false cephfs object            cephFS represents a Ceph FS mount on the host that shares a pod's lifetime false cinder object            cinder represents a cinder volume attached and mounted on kubelets host machine. More info: https://examples.k8s.io/mysql-cinder-pd/README.md false configMap object            configMap represents a configMap that should populate this volume false csi object            csi (Container Storage Interface) represents ephemeral storage that is handled by certain external CSI drivers (Beta feature). false downwardAPI object            downwardAPI represents downward API about the pod that should populate this volume false emptyDir object            emptyDir represents a temporary directory that shares a pod's lifetime. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir false ephemeral object            ephemeral represents a volume that is handled by a cluster storage driver. The volume's lifecycle is tied to the pod that defines it - it will be created before the pod starts, and deleted when the pod is removed.   Use this if: a) the volume is only needed while the pod runs, b) features of normal volumes like restoring from snapshot or capacity    tracking are needed, c) the storage driver is specified through a storage class, and d) the storage driver supports dynamic volume provisioning through    a PersistentVolumeClaim (see EphemeralVolumeSource for more    information on the connection between this volume type    and PersistentVolumeClaim).   Use PersistentVolumeClaim or one of the vendor-specific APIs for volumes that persist for longer than the lifecycle of an individual pod.   Use CSI for light-weight local ephemeral volumes if the CSI driver is meant to be used that way - see the documentation of the driver for more information.   A pod can use both types of ephemeral volumes and persistent volumes at the same time. false fc object            fc represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod. false flexVolume object            flexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin. false flocker object            flocker represents a Flocker volume attached to a kubelet's host machine. This depends on the Flocker control service being running false gcePersistentDisk object            gcePersistentDisk represents a GCE Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk false gitRepo object            gitRepo represents a git repository at a particular revision. DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir into the Pod's container. false glusterfs object            glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime. More info: https://examples.k8s.io/volumes/glusterfs/README.md false hostPath object            hostPath represents a pre-existing file or directory on the host machine that is directly exposed to the container. This is generally used for system agents or other privileged things that are allowed to see the host machine. Most containers will NOT need this. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath --- TODO(jonesdl) We need to restrict who can use host directory mounts and who can/can not mount host directories as read/write. false iscsi object            iscsi represents an ISCSI Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://examples.k8s.io/volumes/iscsi/README.md false nfs object            nfs represents an NFS mount on the host that shares a pod's lifetime More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs false persistentVolumeClaim object            persistentVolumeClaimVolumeSource represents a reference to a PersistentVolumeClaim in the same namespace. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims false photonPersistentDisk object            photonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine false portworxVolume object            portworxVolume represents a portworx volume attached and mounted on kubelets host machine false projected object            projected items for all in one resources secrets, configmaps, and downward API false quobyte object            quobyte represents a Quobyte mount on the host that shares a pod's lifetime false rbd object            rbd represents a Rados Block Device mount on the host that shares a pod's lifetime. More info: https://examples.k8s.io/volumes/rbd/README.md false scaleIO object            scaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes. false secret object            secret represents a secret that should populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret false storageos object            storageOS represents a StorageOS volume attached and mounted on Kubernetes nodes. false vsphereVolume object            vsphereVolume represents a vSphere volume attached and mounted on kubelets host machine false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmanifestsindexawselasticblockstore","title":"K0smotronControlPlaneTemplate.spec.template.spec.manifests[index].awsElasticBlockStore","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>awsElasticBlockStore represents an AWS Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore</p> Name Type Description Required volumeID string            volumeID is unique ID of the persistent disk resource in AWS (Amazon EBS volume). More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore true fsType string            fsType is the filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore TODO: how do we prevent errors in the filesystem from compromising the machine false partition integer            partition is the partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as \"1\". Similarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty). Format: int32 false readOnly boolean            readOnly value true will force the readOnly setting in VolumeMounts. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmanifestsindexazuredisk","title":"K0smotronControlPlaneTemplate.spec.template.spec.manifests[index].azureDisk","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>azureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.</p> Name Type Description Required diskName string            diskName is the Name of the data disk in the blob storage true diskURI string            diskURI is the URI of data disk in the blob storage true cachingMode string            cachingMode is the Host Caching mode: None, Read Only, Read Write. false fsType string            fsType is Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. false kind string            kind expected values are Shared: multiple blob disks per storage account  Dedicated: single blob disk per storage account  Managed: azure managed data disk (only in managed availability set). defaults to shared false readOnly boolean            readOnly Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmanifestsindexazurefile","title":"K0smotronControlPlaneTemplate.spec.template.spec.manifests[index].azureFile","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>azureFile represents an Azure File Service mount on the host and bind mount to the pod.</p> Name Type Description Required secretName string            secretName is the  name of secret that contains Azure Storage Account Name and Key true shareName string            shareName is the azure share Name true readOnly boolean            readOnly defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmanifestsindexcephfs","title":"K0smotronControlPlaneTemplate.spec.template.spec.manifests[index].cephfs","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>cephFS represents a Ceph FS mount on the host that shares a pod's lifetime</p> Name Type Description Required monitors []string            monitors is Required: Monitors is a collection of Ceph monitors More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it true path string            path is Optional: Used as the mounted root, rather than the full Ceph tree, default is / false readOnly boolean            readOnly is Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it false secretFile string            secretFile is Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it false secretRef object            secretRef is Optional: SecretRef is reference to the authentication secret for User, default is empty. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it false user string            user is optional: User is the rados user name, default is admin More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmanifestsindexcephfssecretref","title":"K0smotronControlPlaneTemplate.spec.template.spec.manifests[index].cephfs.secretRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>secretRef is Optional: SecretRef is reference to the authentication secret for User, default is empty. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it</p> Name Type Description Required name string            Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. TODO: Add other useful fields. apiVersion, kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896. Default:  false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmanifestsindexcinder","title":"K0smotronControlPlaneTemplate.spec.template.spec.manifests[index].cinder","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>cinder represents a cinder volume attached and mounted on kubelets host machine. More info: https://examples.k8s.io/mysql-cinder-pd/README.md</p> Name Type Description Required volumeID string            volumeID used to identify the volume in cinder. More info: https://examples.k8s.io/mysql-cinder-pd/README.md true fsType string            fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://examples.k8s.io/mysql-cinder-pd/README.md false readOnly boolean            readOnly defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/mysql-cinder-pd/README.md false secretRef object            secretRef is optional: points to a secret object containing parameters used to connect to OpenStack. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmanifestsindexcindersecretref","title":"K0smotronControlPlaneTemplate.spec.template.spec.manifests[index].cinder.secretRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>secretRef is optional: points to a secret object containing parameters used to connect to OpenStack.</p> Name Type Description Required name string            Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. TODO: Add other useful fields. apiVersion, kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896. Default:  false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmanifestsindexconfigmap","title":"K0smotronControlPlaneTemplate.spec.template.spec.manifests[index].configMap","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>configMap represents a configMap that should populate this volume</p> Name Type Description Required defaultMode integer            defaultMode is optional: mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set. Format: int32 false items []object            items if unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'. false name string            Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. TODO: Add other useful fields. apiVersion, kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896. Default:  false optional boolean            optional specify whether the ConfigMap or its keys must be defined false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmanifestsindexconfigmapitemsindex","title":"K0smotronControlPlaneTemplate.spec.template.spec.manifests[index].configMap.items[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Maps a string key to a path within a volume.</p> Name Type Description Required key string            key is the key to project. true path string            path is the relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'. true mode integer            mode is Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set. Format: int32 false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmanifestsindexcsi","title":"K0smotronControlPlaneTemplate.spec.template.spec.manifests[index].csi","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>csi (Container Storage Interface) represents ephemeral storage that is handled by certain external CSI drivers (Beta feature).</p> Name Type Description Required driver string            driver is the name of the CSI driver that handles this volume. Consult with your admin for the correct name as registered in the cluster. true fsType string            fsType to mount. Ex. \"ext4\", \"xfs\", \"ntfs\". If not provided, the empty value is passed to the associated CSI driver which will determine the default filesystem to apply. false nodePublishSecretRef object            nodePublishSecretRef is a reference to the secret object containing sensitive information to pass to the CSI driver to complete the CSI NodePublishVolume and NodeUnpublishVolume calls. This field is optional, and  may be empty if no secret is required. If the secret object contains more than one secret, all secret references are passed. false readOnly boolean            readOnly specifies a read-only configuration for the volume. Defaults to false (read/write). false volumeAttributes map[string]string            volumeAttributes stores driver-specific properties that are passed to the CSI driver. Consult your driver's documentation for supported values. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmanifestsindexcsinodepublishsecretref","title":"K0smotronControlPlaneTemplate.spec.template.spec.manifests[index].csi.nodePublishSecretRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>nodePublishSecretRef is a reference to the secret object containing sensitive information to pass to the CSI driver to complete the CSI NodePublishVolume and NodeUnpublishVolume calls. This field is optional, and  may be empty if no secret is required. If the secret object contains more than one secret, all secret references are passed.</p> Name Type Description Required name string            Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. TODO: Add other useful fields. apiVersion, kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896. Default:  false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmanifestsindexdownwardapi","title":"K0smotronControlPlaneTemplate.spec.template.spec.manifests[index].downwardAPI","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>downwardAPI represents downward API about the pod that should populate this volume</p> Name Type Description Required defaultMode integer            Optional: mode bits to use on created files by default. Must be a Optional: mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set. Format: int32 false items []object            Items is a list of downward API volume file false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmanifestsindexdownwardapiitemsindex","title":"K0smotronControlPlaneTemplate.spec.template.spec.manifests[index].downwardAPI.items[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>DownwardAPIVolumeFile represents information to create the file containing the pod field</p> Name Type Description Required path string            Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..' true fieldRef object            Required: Selects a field of the pod: only annotations, labels, name, namespace and uid are supported. false mode integer            Optional: mode bits used to set permissions on this file, must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set. Format: int32 false resourceFieldRef object            Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmanifestsindexdownwardapiitemsindexfieldref","title":"K0smotronControlPlaneTemplate.spec.template.spec.manifests[index].downwardAPI.items[index].fieldRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Required: Selects a field of the pod: only annotations, labels, name, namespace and uid are supported.</p> Name Type Description Required fieldPath string            Path of the field to select in the specified API version. true apiVersion string            Version of the schema the FieldPath is written in terms of, defaults to \"v1\". false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmanifestsindexdownwardapiitemsindexresourcefieldref","title":"K0smotronControlPlaneTemplate.spec.template.spec.manifests[index].downwardAPI.items[index].resourceFieldRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.</p> Name Type Description Required resource string            Required: resource to select true containerName string            Container name: required for volumes, optional for env vars false divisor int or string            Specifies the output format of the exposed resources, defaults to \"1\" false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmanifestsindexemptydir","title":"K0smotronControlPlaneTemplate.spec.template.spec.manifests[index].emptyDir","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>emptyDir represents a temporary directory that shares a pod's lifetime. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir</p> Name Type Description Required medium string            medium represents what type of storage medium should back this directory. The default is \"\" which means to use the node's default medium. Must be an empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir false sizeLimit int or string            sizeLimit is the total amount of local storage required for this EmptyDir volume. The size limit is also applicable for memory medium. The maximum usage on memory medium EmptyDir would be the minimum value between the SizeLimit specified here and the sum of memory limits of all containers in a pod. The default is nil which means that the limit is undefined. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmanifestsindexephemeral","title":"K0smotronControlPlaneTemplate.spec.template.spec.manifests[index].ephemeral","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>ephemeral represents a volume that is handled by a cluster storage driver. The volume's lifecycle is tied to the pod that defines it - it will be created before the pod starts, and deleted when the pod is removed.</p> <p>Use this if: a) the volume is only needed while the pod runs, b) features of normal volumes like restoring from snapshot or capacity    tracking are needed, c) the storage driver is specified through a storage class, and d) the storage driver supports dynamic volume provisioning through    a PersistentVolumeClaim (see EphemeralVolumeSource for more    information on the connection between this volume type    and PersistentVolumeClaim).</p> <p>Use PersistentVolumeClaim or one of the vendor-specific APIs for volumes that persist for longer than the lifecycle of an individual pod.</p> <p>Use CSI for light-weight local ephemeral volumes if the CSI driver is meant to be used that way - see the documentation of the driver for more information.</p> <p>A pod can use both types of ephemeral volumes and persistent volumes at the same time.</p> Name Type Description Required volumeClaimTemplate object            Will be used to create a stand-alone PVC to provision the volume. The pod in which this EphemeralVolumeSource is embedded will be the owner of the PVC, i.e. the PVC will be deleted together with the pod.  The name of the PVC will be `-` where `` is the name from the `PodSpec.Volumes` array entry. Pod validation will reject the pod if the concatenated name is not valid for a PVC (for example, too long).   An existing PVC with that name that is not owned by the pod will *not* be used for the pod to avoid using an unrelated volume by mistake. Starting the pod is then blocked until the unrelated PVC is removed. If such a pre-created PVC is meant to be used by the pod, the PVC has to updated with an owner reference to the pod once the pod exists. Normally this should not be necessary, but it may be useful when manually reconstructing a broken cluster.   This field is read-only and no changes will be made by Kubernetes to the PVC after it has been created.   Required, must not be nil. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmanifestsindexephemeralvolumeclaimtemplate","title":"K0smotronControlPlaneTemplate.spec.template.spec.manifests[index].ephemeral.volumeClaimTemplate","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Will be used to create a stand-alone PVC to provision the volume. The pod in which this EphemeralVolumeSource is embedded will be the owner of the PVC, i.e. the PVC will be deleted together with the pod.  The name of the PVC will be <code>&lt;pod name&gt;-&lt;volume name&gt;</code> where <code>&lt;volume name&gt;</code> is the name from the <code>PodSpec.Volumes</code> array entry. Pod validation will reject the pod if the concatenated name is not valid for a PVC (for example, too long).</p> <p>An existing PVC with that name that is not owned by the pod will not be used for the pod to avoid using an unrelated volume by mistake. Starting the pod is then blocked until the unrelated PVC is removed. If such a pre-created PVC is meant to be used by the pod, the PVC has to updated with an owner reference to the pod once the pod exists. Normally this should not be necessary, but it may be useful when manually reconstructing a broken cluster.</p> <p>This field is read-only and no changes will be made by Kubernetes to the PVC after it has been created.</p> <p>Required, must not be nil.</p> Name Type Description Required spec object            The specification for the PersistentVolumeClaim. The entire content is copied unchanged into the PVC that gets created from this template. The same fields as in a PersistentVolumeClaim are also valid here. true metadata object            May contain labels and annotations that will be copied into the PVC when creating it. No other fields are allowed and will be rejected during validation. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmanifestsindexephemeralvolumeclaimtemplatespec","title":"K0smotronControlPlaneTemplate.spec.template.spec.manifests[index].ephemeral.volumeClaimTemplate.spec","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>The specification for the PersistentVolumeClaim. The entire content is copied unchanged into the PVC that gets created from this template. The same fields as in a PersistentVolumeClaim are also valid here.</p> Name Type Description Required accessModes []string            accessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1 false dataSource object            dataSource field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. When the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef, and dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified. If the namespace is specified, then dataSourceRef will not be copied to dataSource. false dataSourceRef object            dataSourceRef specifies the object from which to populate the volume with data, if a non-empty volume is desired. This may be any object from a non-empty API group (non core object) or a PersistentVolumeClaim object. When this field is specified, volume binding will only succeed if the type of the specified object matches some installed volume populator or dynamic provisioner. This field will replace the functionality of the dataSource field and as such if both fields are non-empty, they must have the same value. For backwards compatibility, when namespace isn't specified in dataSourceRef, both fields (dataSource and dataSourceRef) will be set to the same value automatically if one of them is empty and the other is non-empty. When namespace is specified in dataSourceRef, dataSource isn't set to the same value and must be empty. There are three important differences between dataSource and dataSourceRef: * While dataSource only allows two specific types of objects, dataSourceRef   allows any non-core object, as well as PersistentVolumeClaim objects. * While dataSource ignores disallowed values (dropping them), dataSourceRef   preserves all values, and generates an error if a disallowed value is   specified. * While dataSource only allows local objects, dataSourceRef allows objects   in any namespaces. (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled. (Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled. false resources object            resources represents the minimum resources the volume should have. If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements that are lower than previous value but must still be higher than capacity recorded in the status field of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources false selector object            selector is a label query over volumes to consider for binding. false storageClassName string            storageClassName is the name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1 false volumeAttributesClassName string            volumeAttributesClassName may be used to set the VolumeAttributesClass used by this claim. If specified, the CSI driver will create or update the volume with the attributes defined in the corresponding VolumeAttributesClass. This has a different purpose than storageClassName, it can be changed after the claim is created. An empty string value means that no VolumeAttributesClass will be applied to the claim but it's not allowed to reset this field to empty string once it is set. If unspecified and the PersistentVolumeClaim is unbound, the default VolumeAttributesClass will be set by the persistentvolume controller if it exists. If the resource referred to by volumeAttributesClass does not exist, this PersistentVolumeClaim will be set to a Pending state, as reflected by the modifyVolumeStatus field, until such as a resource exists. More info: https://kubernetes.io/docs/concepts/storage/volume-attributes-classes/ (Alpha) Using this field requires the VolumeAttributesClass feature gate to be enabled. false volumeMode string            volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec. false volumeName string            volumeName is the binding reference to the PersistentVolume backing this claim. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmanifestsindexephemeralvolumeclaimtemplatespecdatasource","title":"K0smotronControlPlaneTemplate.spec.template.spec.manifests[index].ephemeral.volumeClaimTemplate.spec.dataSource","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>dataSource field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. When the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef, and dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified. If the namespace is specified, then dataSourceRef will not be copied to dataSource.</p> Name Type Description Required kind string            Kind is the type of resource being referenced true name string            Name is the name of resource being referenced true apiGroup string            APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmanifestsindexephemeralvolumeclaimtemplatespecdatasourceref","title":"K0smotronControlPlaneTemplate.spec.template.spec.manifests[index].ephemeral.volumeClaimTemplate.spec.dataSourceRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>dataSourceRef specifies the object from which to populate the volume with data, if a non-empty volume is desired. This may be any object from a non-empty API group (non core object) or a PersistentVolumeClaim object. When this field is specified, volume binding will only succeed if the type of the specified object matches some installed volume populator or dynamic provisioner. This field will replace the functionality of the dataSource field and as such if both fields are non-empty, they must have the same value. For backwards compatibility, when namespace isn't specified in dataSourceRef, both fields (dataSource and dataSourceRef) will be set to the same value automatically if one of them is empty and the other is non-empty. When namespace is specified in dataSourceRef, dataSource isn't set to the same value and must be empty. There are three important differences between dataSource and dataSourceRef: * While dataSource only allows two specific types of objects, dataSourceRef   allows any non-core object, as well as PersistentVolumeClaim objects. * While dataSource ignores disallowed values (dropping them), dataSourceRef   preserves all values, and generates an error if a disallowed value is   specified. * While dataSource only allows local objects, dataSourceRef allows objects   in any namespaces. (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled. (Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled.</p> Name Type Description Required kind string            Kind is the type of resource being referenced true name string            Name is the name of resource being referenced true apiGroup string            APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required. false namespace string            Namespace is the namespace of resource being referenced Note that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details. (Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmanifestsindexephemeralvolumeclaimtemplatespecresources","title":"K0smotronControlPlaneTemplate.spec.template.spec.manifests[index].ephemeral.volumeClaimTemplate.spec.resources","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>resources represents the minimum resources the volume should have. If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements that are lower than previous value but must still be higher than capacity recorded in the status field of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources</p> Name Type Description Required limits map[string]int or string            Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/ false requests map[string]int or string            Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/ false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmanifestsindexephemeralvolumeclaimtemplatespecselector","title":"K0smotronControlPlaneTemplate.spec.template.spec.manifests[index].ephemeral.volumeClaimTemplate.spec.selector","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>selector is a label query over volumes to consider for binding.</p> Name Type Description Required matchExpressions []object            matchExpressions is a list of label selector requirements. The requirements are ANDed. false matchLabels map[string]string            matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmanifestsindexephemeralvolumeclaimtemplatespecselectormatchexpressionsindex","title":"K0smotronControlPlaneTemplate.spec.template.spec.manifests[index].ephemeral.volumeClaimTemplate.spec.selector.matchExpressions[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.</p> Name Type Description Required key string            key is the label key that the selector applies to. true operator string            operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist. true values []string            values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmanifestsindexephemeralvolumeclaimtemplatemetadata","title":"K0smotronControlPlaneTemplate.spec.template.spec.manifests[index].ephemeral.volumeClaimTemplate.metadata","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>May contain labels and annotations that will be copied into the PVC when creating it. No other fields are allowed and will be rejected during validation.</p> Name Type Description Required annotations map[string]string false finalizers []string false labels map[string]string false name string false namespace string false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmanifestsindexfc","title":"K0smotronControlPlaneTemplate.spec.template.spec.manifests[index].fc","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>fc represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.</p> Name Type Description Required fsType string            fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. TODO: how do we prevent errors in the filesystem from compromising the machine false lun integer            lun is Optional: FC target lun number Format: int32 false readOnly boolean            readOnly is Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. false targetWWNs []string            targetWWNs is Optional: FC target worldwide names (WWNs) false wwids []string            wwids Optional: FC volume world wide identifiers (wwids) Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmanifestsindexflexvolume","title":"K0smotronControlPlaneTemplate.spec.template.spec.manifests[index].flexVolume","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>flexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin.</p> Name Type Description Required driver string            driver is the name of the driver to use for this volume. true fsType string            fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". The default filesystem depends on FlexVolume script. false options map[string]string            options is Optional: this field holds extra command options if any. false readOnly boolean            readOnly is Optional: defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. false secretRef object            secretRef is Optional: secretRef is reference to the secret object containing sensitive information to pass to the plugin scripts. This may be empty if no secret object is specified. If the secret object contains more than one secret, all secrets are passed to the plugin scripts. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmanifestsindexflexvolumesecretref","title":"K0smotronControlPlaneTemplate.spec.template.spec.manifests[index].flexVolume.secretRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>secretRef is Optional: secretRef is reference to the secret object containing sensitive information to pass to the plugin scripts. This may be empty if no secret object is specified. If the secret object contains more than one secret, all secrets are passed to the plugin scripts.</p> Name Type Description Required name string            Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. TODO: Add other useful fields. apiVersion, kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896. Default:  false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmanifestsindexflocker","title":"K0smotronControlPlaneTemplate.spec.template.spec.manifests[index].flocker","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>flocker represents a Flocker volume attached to a kubelet's host machine. This depends on the Flocker control service being running</p> Name Type Description Required datasetName string            datasetName is Name of the dataset stored as metadata -&gt; name on the dataset for Flocker should be considered as deprecated false datasetUUID string            datasetUUID is the UUID of the dataset. This is unique identifier of a Flocker dataset false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmanifestsindexgcepersistentdisk","title":"K0smotronControlPlaneTemplate.spec.template.spec.manifests[index].gcePersistentDisk","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>gcePersistentDisk represents a GCE Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk</p> Name Type Description Required pdName string            pdName is unique name of the PD resource in GCE. Used to identify the disk in GCE. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk true fsType string            fsType is filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk TODO: how do we prevent errors in the filesystem from compromising the machine false partition integer            partition is the partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as \"1\". Similarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty). More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk Format: int32 false readOnly boolean            readOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmanifestsindexgitrepo","title":"K0smotronControlPlaneTemplate.spec.template.spec.manifests[index].gitRepo","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>gitRepo represents a git repository at a particular revision. DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir into the Pod's container.</p> Name Type Description Required repository string            repository is the URL true directory string            directory is the target directory name. Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the git repository.  Otherwise, if specified, the volume will contain the git repository in the subdirectory with the given name. false revision string            revision is the commit hash for the specified revision. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmanifestsindexglusterfs","title":"K0smotronControlPlaneTemplate.spec.template.spec.manifests[index].glusterfs","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime. More info: https://examples.k8s.io/volumes/glusterfs/README.md</p> Name Type Description Required endpoints string            endpoints is the endpoint name that details Glusterfs topology. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod true path string            path is the Glusterfs volume path. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod true readOnly boolean            readOnly here will force the Glusterfs volume to be mounted with read-only permissions. Defaults to false. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmanifestsindexhostpath","title":"K0smotronControlPlaneTemplate.spec.template.spec.manifests[index].hostPath","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>hostPath represents a pre-existing file or directory on the host machine that is directly exposed to the container. This is generally used for system agents or other privileged things that are allowed to see the host machine. Most containers will NOT need this. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath</p> <p>TODO(jonesdl) We need to restrict who can use host directory mounts and who can/can not mount host directories as read/write.</p> Name Type Description Required path string            path of the directory on the host. If the path is a symlink, it will follow the link to the real path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath true type string            type for HostPath Volume Defaults to \"\" More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmanifestsindexiscsi","title":"K0smotronControlPlaneTemplate.spec.template.spec.manifests[index].iscsi","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>iscsi represents an ISCSI Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://examples.k8s.io/volumes/iscsi/README.md</p> Name Type Description Required iqn string            iqn is the target iSCSI Qualified Name. true lun integer            lun represents iSCSI Target Lun number. Format: int32 true targetPortal string            targetPortal is iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260). true chapAuthDiscovery boolean            chapAuthDiscovery defines whether support iSCSI Discovery CHAP authentication false chapAuthSession boolean            chapAuthSession defines whether support iSCSI Session CHAP authentication false fsType string            fsType is the filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi TODO: how do we prevent errors in the filesystem from compromising the machine false initiatorName string            initiatorName is the custom iSCSI Initiator Name. If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface : will be created for the connection. false iscsiInterface string            iscsiInterface is the interface Name that uses an iSCSI transport. Defaults to 'default' (tcp). false portals []string            portals is the iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260). false readOnly boolean            readOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. false secretRef object            secretRef is the CHAP Secret for iSCSI target and initiator authentication false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmanifestsindexiscsisecretref","title":"K0smotronControlPlaneTemplate.spec.template.spec.manifests[index].iscsi.secretRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>secretRef is the CHAP Secret for iSCSI target and initiator authentication</p> Name Type Description Required name string            Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. TODO: Add other useful fields. apiVersion, kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896. Default:  false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmanifestsindexnfs","title":"K0smotronControlPlaneTemplate.spec.template.spec.manifests[index].nfs","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>nfs represents an NFS mount on the host that shares a pod's lifetime More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs</p> Name Type Description Required path string            path that is exported by the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs true server string            server is the hostname or IP address of the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs true readOnly boolean            readOnly here will force the NFS export to be mounted with read-only permissions. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmanifestsindexpersistentvolumeclaim","title":"K0smotronControlPlaneTemplate.spec.template.spec.manifests[index].persistentVolumeClaim","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>persistentVolumeClaimVolumeSource represents a reference to a PersistentVolumeClaim in the same namespace. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims</p> Name Type Description Required claimName string            claimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims true readOnly boolean            readOnly Will force the ReadOnly setting in VolumeMounts. Default false. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmanifestsindexphotonpersistentdisk","title":"K0smotronControlPlaneTemplate.spec.template.spec.manifests[index].photonPersistentDisk","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>photonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine</p> Name Type Description Required pdID string            pdID is the ID that identifies Photon Controller persistent disk true fsType string            fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmanifestsindexportworxvolume","title":"K0smotronControlPlaneTemplate.spec.template.spec.manifests[index].portworxVolume","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>portworxVolume represents a portworx volume attached and mounted on kubelets host machine</p> Name Type Description Required volumeID string            volumeID uniquely identifies a Portworx volume true fsType string            fSType represents the filesystem type to mount Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\". Implicitly inferred to be \"ext4\" if unspecified. false readOnly boolean            readOnly defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmanifestsindexprojected","title":"K0smotronControlPlaneTemplate.spec.template.spec.manifests[index].projected","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>projected items for all in one resources secrets, configmaps, and downward API</p> Name Type Description Required defaultMode integer            defaultMode are the mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set. Format: int32 false sources []object            sources is the list of volume projections false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmanifestsindexprojectedsourcesindex","title":"K0smotronControlPlaneTemplate.spec.template.spec.manifests[index].projected.sources[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Projection that may be projected along with other supported volume types</p> Name Type Description Required clusterTrustBundle object            ClusterTrustBundle allows a pod to access the `.spec.trustBundle` field of ClusterTrustBundle objects in an auto-updating file.   Alpha, gated by the ClusterTrustBundleProjection feature gate.   ClusterTrustBundle objects can either be selected by name, or by the combination of signer name and a label selector.   Kubelet performs aggressive normalization of the PEM contents written into the pod filesystem.  Esoteric PEM features such as inter-block comments and block headers are stripped.  Certificates are deduplicated. The ordering of certificates within the file is arbitrary, and Kubelet may change the order over time. false configMap object            configMap information about the configMap data to project false downwardAPI object            downwardAPI information about the downwardAPI data to project false secret object            secret information about the secret data to project false serviceAccountToken object            serviceAccountToken is information about the serviceAccountToken data to project false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmanifestsindexprojectedsourcesindexclustertrustbundle","title":"K0smotronControlPlaneTemplate.spec.template.spec.manifests[index].projected.sources[index].clusterTrustBundle","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>ClusterTrustBundle allows a pod to access the <code>.spec.trustBundle</code> field of ClusterTrustBundle objects in an auto-updating file.</p> <p>Alpha, gated by the ClusterTrustBundleProjection feature gate.</p> <p>ClusterTrustBundle objects can either be selected by name, or by the combination of signer name and a label selector.</p> <p>Kubelet performs aggressive normalization of the PEM contents written into the pod filesystem.  Esoteric PEM features such as inter-block comments and block headers are stripped.  Certificates are deduplicated. The ordering of certificates within the file is arbitrary, and Kubelet may change the order over time.</p> Name Type Description Required path string            Relative path from the volume root to write the bundle. true labelSelector object            Select all ClusterTrustBundles that match this label selector.  Only has effect if signerName is set.  Mutually-exclusive with name.  If unset, interpreted as \"match nothing\".  If set but empty, interpreted as \"match everything\". false name string            Select a single ClusterTrustBundle by object name.  Mutually-exclusive with signerName and labelSelector. false optional boolean            If true, don't block pod startup if the referenced ClusterTrustBundle(s) aren't available.  If using name, then the named ClusterTrustBundle is allowed not to exist.  If using signerName, then the combination of signerName and labelSelector is allowed to match zero ClusterTrustBundles. false signerName string            Select all ClusterTrustBundles that match this signer name. Mutually-exclusive with name.  The contents of all selected ClusterTrustBundles will be unified and deduplicated. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmanifestsindexprojectedsourcesindexclustertrustbundlelabelselector","title":"K0smotronControlPlaneTemplate.spec.template.spec.manifests[index].projected.sources[index].clusterTrustBundle.labelSelector","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Select all ClusterTrustBundles that match this label selector.  Only has effect if signerName is set.  Mutually-exclusive with name.  If unset, interpreted as \"match nothing\".  If set but empty, interpreted as \"match everything\".</p> Name Type Description Required matchExpressions []object            matchExpressions is a list of label selector requirements. The requirements are ANDed. false matchLabels map[string]string            matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmanifestsindexprojectedsourcesindexclustertrustbundlelabelselectormatchexpressionsindex","title":"K0smotronControlPlaneTemplate.spec.template.spec.manifests[index].projected.sources[index].clusterTrustBundle.labelSelector.matchExpressions[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.</p> Name Type Description Required key string            key is the label key that the selector applies to. true operator string            operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist. true values []string            values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmanifestsindexprojectedsourcesindexconfigmap","title":"K0smotronControlPlaneTemplate.spec.template.spec.manifests[index].projected.sources[index].configMap","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>configMap information about the configMap data to project</p> Name Type Description Required items []object            items if unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'. false name string            Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. TODO: Add other useful fields. apiVersion, kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896. Default:  false optional boolean            optional specify whether the ConfigMap or its keys must be defined false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmanifestsindexprojectedsourcesindexconfigmapitemsindex","title":"K0smotronControlPlaneTemplate.spec.template.spec.manifests[index].projected.sources[index].configMap.items[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Maps a string key to a path within a volume.</p> Name Type Description Required key string            key is the key to project. true path string            path is the relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'. true mode integer            mode is Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set. Format: int32 false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmanifestsindexprojectedsourcesindexdownwardapi","title":"K0smotronControlPlaneTemplate.spec.template.spec.manifests[index].projected.sources[index].downwardAPI","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>downwardAPI information about the downwardAPI data to project</p> Name Type Description Required items []object            Items is a list of DownwardAPIVolume file false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmanifestsindexprojectedsourcesindexdownwardapiitemsindex","title":"K0smotronControlPlaneTemplate.spec.template.spec.manifests[index].projected.sources[index].downwardAPI.items[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>DownwardAPIVolumeFile represents information to create the file containing the pod field</p> Name Type Description Required path string            Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..' true fieldRef object            Required: Selects a field of the pod: only annotations, labels, name, namespace and uid are supported. false mode integer            Optional: mode bits used to set permissions on this file, must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set. Format: int32 false resourceFieldRef object            Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmanifestsindexprojectedsourcesindexdownwardapiitemsindexfieldref","title":"K0smotronControlPlaneTemplate.spec.template.spec.manifests[index].projected.sources[index].downwardAPI.items[index].fieldRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Required: Selects a field of the pod: only annotations, labels, name, namespace and uid are supported.</p> Name Type Description Required fieldPath string            Path of the field to select in the specified API version. true apiVersion string            Version of the schema the FieldPath is written in terms of, defaults to \"v1\". false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmanifestsindexprojectedsourcesindexdownwardapiitemsindexresourcefieldref","title":"K0smotronControlPlaneTemplate.spec.template.spec.manifests[index].projected.sources[index].downwardAPI.items[index].resourceFieldRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.</p> Name Type Description Required resource string            Required: resource to select true containerName string            Container name: required for volumes, optional for env vars false divisor int or string            Specifies the output format of the exposed resources, defaults to \"1\" false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmanifestsindexprojectedsourcesindexsecret","title":"K0smotronControlPlaneTemplate.spec.template.spec.manifests[index].projected.sources[index].secret","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>secret information about the secret data to project</p> Name Type Description Required items []object            items if unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'. false name string            Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. TODO: Add other useful fields. apiVersion, kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896. Default:  false optional boolean            optional field specify whether the Secret or its key must be defined false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmanifestsindexprojectedsourcesindexsecretitemsindex","title":"K0smotronControlPlaneTemplate.spec.template.spec.manifests[index].projected.sources[index].secret.items[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Maps a string key to a path within a volume.</p> Name Type Description Required key string            key is the key to project. true path string            path is the relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'. true mode integer            mode is Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set. Format: int32 false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmanifestsindexprojectedsourcesindexserviceaccounttoken","title":"K0smotronControlPlaneTemplate.spec.template.spec.manifests[index].projected.sources[index].serviceAccountToken","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>serviceAccountToken is information about the serviceAccountToken data to project</p> Name Type Description Required path string            path is the path relative to the mount point of the file to project the token into. true audience string            audience is the intended audience of the token. A recipient of a token must identify itself with an identifier specified in the audience of the token, and otherwise should reject the token. The audience defaults to the identifier of the apiserver. false expirationSeconds integer            expirationSeconds is the requested duration of validity of the service account token. As the token approaches expiration, the kubelet volume plugin will proactively rotate the service account token. The kubelet will start trying to rotate the token if the token is older than 80 percent of its time to live or if the token is older than 24 hours.Defaults to 1 hour and must be at least 10 minutes. Format: int64 false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmanifestsindexquobyte","title":"K0smotronControlPlaneTemplate.spec.template.spec.manifests[index].quobyte","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>quobyte represents a Quobyte mount on the host that shares a pod's lifetime</p> Name Type Description Required registry string            registry represents a single or multiple Quobyte Registry services specified as a string as host:port pair (multiple entries are separated with commas) which acts as the central registry for volumes true volume string            volume is a string that references an already created Quobyte volume by name. true group string            group to map volume access to Default is no group false readOnly boolean            readOnly here will force the Quobyte volume to be mounted with read-only permissions. Defaults to false. false tenant string            tenant owning the given Quobyte volume in the Backend Used with dynamically provisioned Quobyte volumes, value is set by the plugin false user string            user to map volume access to Defaults to serivceaccount user false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmanifestsindexrbd","title":"K0smotronControlPlaneTemplate.spec.template.spec.manifests[index].rbd","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>rbd represents a Rados Block Device mount on the host that shares a pod's lifetime. More info: https://examples.k8s.io/volumes/rbd/README.md</p> Name Type Description Required image string            image is the rados image name. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it true monitors []string            monitors is a collection of Ceph monitors. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it true fsType string            fsType is the filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd TODO: how do we prevent errors in the filesystem from compromising the machine false keyring string            keyring is the path to key ring for RBDUser. Default is /etc/ceph/keyring. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it false pool string            pool is the rados pool name. Default is rbd. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it false readOnly boolean            readOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it false secretRef object            secretRef is name of the authentication secret for RBDUser. If provided overrides keyring. Default is nil. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it false user string            user is the rados user name. Default is admin. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmanifestsindexrbdsecretref","title":"K0smotronControlPlaneTemplate.spec.template.spec.manifests[index].rbd.secretRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>secretRef is name of the authentication secret for RBDUser. If provided overrides keyring. Default is nil. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it</p> Name Type Description Required name string            Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. TODO: Add other useful fields. apiVersion, kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896. Default:  false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmanifestsindexscaleio","title":"K0smotronControlPlaneTemplate.spec.template.spec.manifests[index].scaleIO","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>scaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.</p> Name Type Description Required gateway string            gateway is the host address of the ScaleIO API Gateway. true secretRef object            secretRef references to the secret for ScaleIO user and other sensitive information. If this is not provided, Login operation will fail. true system string            system is the name of the storage system as configured in ScaleIO. true fsType string            fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Default is \"xfs\". false protectionDomain string            protectionDomain is the name of the ScaleIO Protection Domain for the configured storage. false readOnly boolean            readOnly Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. false sslEnabled boolean            sslEnabled Flag enable/disable SSL communication with Gateway, default false false storageMode string            storageMode indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned. Default is ThinProvisioned. false storagePool string            storagePool is the ScaleIO Storage Pool associated with the protection domain. false volumeName string            volumeName is the name of a volume already created in the ScaleIO system that is associated with this volume source. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmanifestsindexscaleiosecretref","title":"K0smotronControlPlaneTemplate.spec.template.spec.manifests[index].scaleIO.secretRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>secretRef references to the secret for ScaleIO user and other sensitive information. If this is not provided, Login operation will fail.</p> Name Type Description Required name string            Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. TODO: Add other useful fields. apiVersion, kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896. Default:  false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmanifestsindexsecret","title":"K0smotronControlPlaneTemplate.spec.template.spec.manifests[index].secret","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>secret represents a secret that should populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret</p> Name Type Description Required defaultMode integer            defaultMode is Optional: mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set. Format: int32 false items []object            items If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'. false optional boolean            optional field specify whether the Secret or its keys must be defined false secretName string            secretName is the name of the secret in the pod's namespace to use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmanifestsindexsecretitemsindex","title":"K0smotronControlPlaneTemplate.spec.template.spec.manifests[index].secret.items[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Maps a string key to a path within a volume.</p> Name Type Description Required key string            key is the key to project. true path string            path is the relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'. true mode integer            mode is Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set. Format: int32 false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmanifestsindexstorageos","title":"K0smotronControlPlaneTemplate.spec.template.spec.manifests[index].storageos","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>storageOS represents a StorageOS volume attached and mounted on Kubernetes nodes.</p> Name Type Description Required fsType string            fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. false readOnly boolean            readOnly defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. false secretRef object            secretRef specifies the secret to use for obtaining the StorageOS API credentials.  If not specified, default values will be attempted. false volumeName string            volumeName is the human-readable name of the StorageOS volume.  Volume names are only unique within a namespace. false volumeNamespace string            volumeNamespace specifies the scope of the volume within StorageOS.  If no namespace is specified then the Pod's namespace will be used.  This allows the Kubernetes name scoping to be mirrored within StorageOS for tighter integration. Set VolumeName to any name to override the default behaviour. Set to \"default\" if you are not using namespaces within StorageOS. Namespaces that do not pre-exist within StorageOS will be created. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmanifestsindexstorageossecretref","title":"K0smotronControlPlaneTemplate.spec.template.spec.manifests[index].storageos.secretRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>secretRef specifies the secret to use for obtaining the StorageOS API credentials.  If not specified, default values will be attempted.</p> Name Type Description Required name string            Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. TODO: Add other useful fields. apiVersion, kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896. Default:  false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmanifestsindexvspherevolume","title":"K0smotronControlPlaneTemplate.spec.template.spec.manifests[index].vsphereVolume","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>vsphereVolume represents a vSphere volume attached and mounted on kubelets host machine</p> Name Type Description Required volumePath string            volumePath is the path that identifies vSphere volume vmdk true fsType string            fsType is filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. false storagePolicyID string            storagePolicyID is the storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName. false storagePolicyName string            storagePolicyName is the storage Policy Based Management (SPBM) profile name. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmonitoring","title":"K0smotronControlPlaneTemplate.spec.template.spec.monitoring","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Monitoring defines the monitoring configuration.</p> Name Type Description Required enabled boolean            Enabled enables prometheus sidecar that scrapes metrics from the child cluster system components and expose them as usual kubernetes pod metrics. true prometheusImage string            PrometheusImage defines the image used for the prometheus sidecar. Default: quay.io/k0sproject/prometheus:v2.44.0 true proxyImage string            ProxyImage defines the image used for the nginx proxy sidecar. Default: nginx:1.19.10 true"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmountsindex","title":"K0smotronControlPlaneTemplate.spec.template.spec.mounts[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> Name Type Description Required path string true awsElasticBlockStore object            awsElasticBlockStore represents an AWS Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore false azureDisk object            azureDisk represents an Azure Data Disk mount on the host and bind mount to the pod. false azureFile object            azureFile represents an Azure File Service mount on the host and bind mount to the pod. false cephfs object            cephFS represents a Ceph FS mount on the host that shares a pod's lifetime false cinder object            cinder represents a cinder volume attached and mounted on kubelets host machine. More info: https://examples.k8s.io/mysql-cinder-pd/README.md false configMap object            configMap represents a configMap that should populate this volume false csi object            csi (Container Storage Interface) represents ephemeral storage that is handled by certain external CSI drivers (Beta feature). false downwardAPI object            downwardAPI represents downward API about the pod that should populate this volume false emptyDir object            emptyDir represents a temporary directory that shares a pod's lifetime. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir false ephemeral object            ephemeral represents a volume that is handled by a cluster storage driver. The volume's lifecycle is tied to the pod that defines it - it will be created before the pod starts, and deleted when the pod is removed.   Use this if: a) the volume is only needed while the pod runs, b) features of normal volumes like restoring from snapshot or capacity    tracking are needed, c) the storage driver is specified through a storage class, and d) the storage driver supports dynamic volume provisioning through    a PersistentVolumeClaim (see EphemeralVolumeSource for more    information on the connection between this volume type    and PersistentVolumeClaim).   Use PersistentVolumeClaim or one of the vendor-specific APIs for volumes that persist for longer than the lifecycle of an individual pod.   Use CSI for light-weight local ephemeral volumes if the CSI driver is meant to be used that way - see the documentation of the driver for more information.   A pod can use both types of ephemeral volumes and persistent volumes at the same time. false fc object            fc represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod. false flexVolume object            flexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin. false flocker object            flocker represents a Flocker volume attached to a kubelet's host machine. This depends on the Flocker control service being running false gcePersistentDisk object            gcePersistentDisk represents a GCE Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk false gitRepo object            gitRepo represents a git repository at a particular revision. DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir into the Pod's container. false glusterfs object            glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime. More info: https://examples.k8s.io/volumes/glusterfs/README.md false hostPath object            hostPath represents a pre-existing file or directory on the host machine that is directly exposed to the container. This is generally used for system agents or other privileged things that are allowed to see the host machine. Most containers will NOT need this. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath --- TODO(jonesdl) We need to restrict who can use host directory mounts and who can/can not mount host directories as read/write. false iscsi object            iscsi represents an ISCSI Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://examples.k8s.io/volumes/iscsi/README.md false nfs object            nfs represents an NFS mount on the host that shares a pod's lifetime More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs false persistentVolumeClaim object            persistentVolumeClaimVolumeSource represents a reference to a PersistentVolumeClaim in the same namespace. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims false photonPersistentDisk object            photonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine false portworxVolume object            portworxVolume represents a portworx volume attached and mounted on kubelets host machine false projected object            projected items for all in one resources secrets, configmaps, and downward API false quobyte object            quobyte represents a Quobyte mount on the host that shares a pod's lifetime false rbd object            rbd represents a Rados Block Device mount on the host that shares a pod's lifetime. More info: https://examples.k8s.io/volumes/rbd/README.md false readOnly boolean            ReadOnly specifies whether the volume should be mounted as read-only. (default: false, except for ConfigMaps and Secrets) false scaleIO object            scaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes. false secret object            secret represents a secret that should populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret false storageos object            storageOS represents a StorageOS volume attached and mounted on Kubernetes nodes. false vsphereVolume object            vsphereVolume represents a vSphere volume attached and mounted on kubelets host machine false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmountsindexawselasticblockstore","title":"K0smotronControlPlaneTemplate.spec.template.spec.mounts[index].awsElasticBlockStore","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>awsElasticBlockStore represents an AWS Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore</p> Name Type Description Required volumeID string            volumeID is unique ID of the persistent disk resource in AWS (Amazon EBS volume). More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore true fsType string            fsType is the filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore TODO: how do we prevent errors in the filesystem from compromising the machine false partition integer            partition is the partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as \"1\". Similarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty). Format: int32 false readOnly boolean            readOnly value true will force the readOnly setting in VolumeMounts. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmountsindexazuredisk","title":"K0smotronControlPlaneTemplate.spec.template.spec.mounts[index].azureDisk","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>azureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.</p> Name Type Description Required diskName string            diskName is the Name of the data disk in the blob storage true diskURI string            diskURI is the URI of data disk in the blob storage true cachingMode string            cachingMode is the Host Caching mode: None, Read Only, Read Write. false fsType string            fsType is Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. false kind string            kind expected values are Shared: multiple blob disks per storage account  Dedicated: single blob disk per storage account  Managed: azure managed data disk (only in managed availability set). defaults to shared false readOnly boolean            readOnly Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmountsindexazurefile","title":"K0smotronControlPlaneTemplate.spec.template.spec.mounts[index].azureFile","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>azureFile represents an Azure File Service mount on the host and bind mount to the pod.</p> Name Type Description Required secretName string            secretName is the  name of secret that contains Azure Storage Account Name and Key true shareName string            shareName is the azure share Name true readOnly boolean            readOnly defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmountsindexcephfs","title":"K0smotronControlPlaneTemplate.spec.template.spec.mounts[index].cephfs","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>cephFS represents a Ceph FS mount on the host that shares a pod's lifetime</p> Name Type Description Required monitors []string            monitors is Required: Monitors is a collection of Ceph monitors More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it true path string            path is Optional: Used as the mounted root, rather than the full Ceph tree, default is / false readOnly boolean            readOnly is Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it false secretFile string            secretFile is Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it false secretRef object            secretRef is Optional: SecretRef is reference to the authentication secret for User, default is empty. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it false user string            user is optional: User is the rados user name, default is admin More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmountsindexcephfssecretref","title":"K0smotronControlPlaneTemplate.spec.template.spec.mounts[index].cephfs.secretRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>secretRef is Optional: SecretRef is reference to the authentication secret for User, default is empty. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it</p> Name Type Description Required name string            Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. TODO: Add other useful fields. apiVersion, kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896. Default:  false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmountsindexcinder","title":"K0smotronControlPlaneTemplate.spec.template.spec.mounts[index].cinder","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>cinder represents a cinder volume attached and mounted on kubelets host machine. More info: https://examples.k8s.io/mysql-cinder-pd/README.md</p> Name Type Description Required volumeID string            volumeID used to identify the volume in cinder. More info: https://examples.k8s.io/mysql-cinder-pd/README.md true fsType string            fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://examples.k8s.io/mysql-cinder-pd/README.md false readOnly boolean            readOnly defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/mysql-cinder-pd/README.md false secretRef object            secretRef is optional: points to a secret object containing parameters used to connect to OpenStack. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmountsindexcindersecretref","title":"K0smotronControlPlaneTemplate.spec.template.spec.mounts[index].cinder.secretRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>secretRef is optional: points to a secret object containing parameters used to connect to OpenStack.</p> Name Type Description Required name string            Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. TODO: Add other useful fields. apiVersion, kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896. Default:  false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmountsindexconfigmap","title":"K0smotronControlPlaneTemplate.spec.template.spec.mounts[index].configMap","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>configMap represents a configMap that should populate this volume</p> Name Type Description Required defaultMode integer            defaultMode is optional: mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set. Format: int32 false items []object            items if unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'. false name string            Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. TODO: Add other useful fields. apiVersion, kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896. Default:  false optional boolean            optional specify whether the ConfigMap or its keys must be defined false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmountsindexconfigmapitemsindex","title":"K0smotronControlPlaneTemplate.spec.template.spec.mounts[index].configMap.items[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Maps a string key to a path within a volume.</p> Name Type Description Required key string            key is the key to project. true path string            path is the relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'. true mode integer            mode is Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set. Format: int32 false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmountsindexcsi","title":"K0smotronControlPlaneTemplate.spec.template.spec.mounts[index].csi","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>csi (Container Storage Interface) represents ephemeral storage that is handled by certain external CSI drivers (Beta feature).</p> Name Type Description Required driver string            driver is the name of the CSI driver that handles this volume. Consult with your admin for the correct name as registered in the cluster. true fsType string            fsType to mount. Ex. \"ext4\", \"xfs\", \"ntfs\". If not provided, the empty value is passed to the associated CSI driver which will determine the default filesystem to apply. false nodePublishSecretRef object            nodePublishSecretRef is a reference to the secret object containing sensitive information to pass to the CSI driver to complete the CSI NodePublishVolume and NodeUnpublishVolume calls. This field is optional, and  may be empty if no secret is required. If the secret object contains more than one secret, all secret references are passed. false readOnly boolean            readOnly specifies a read-only configuration for the volume. Defaults to false (read/write). false volumeAttributes map[string]string            volumeAttributes stores driver-specific properties that are passed to the CSI driver. Consult your driver's documentation for supported values. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmountsindexcsinodepublishsecretref","title":"K0smotronControlPlaneTemplate.spec.template.spec.mounts[index].csi.nodePublishSecretRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>nodePublishSecretRef is a reference to the secret object containing sensitive information to pass to the CSI driver to complete the CSI NodePublishVolume and NodeUnpublishVolume calls. This field is optional, and  may be empty if no secret is required. If the secret object contains more than one secret, all secret references are passed.</p> Name Type Description Required name string            Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. TODO: Add other useful fields. apiVersion, kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896. Default:  false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmountsindexdownwardapi","title":"K0smotronControlPlaneTemplate.spec.template.spec.mounts[index].downwardAPI","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>downwardAPI represents downward API about the pod that should populate this volume</p> Name Type Description Required defaultMode integer            Optional: mode bits to use on created files by default. Must be a Optional: mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set. Format: int32 false items []object            Items is a list of downward API volume file false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmountsindexdownwardapiitemsindex","title":"K0smotronControlPlaneTemplate.spec.template.spec.mounts[index].downwardAPI.items[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>DownwardAPIVolumeFile represents information to create the file containing the pod field</p> Name Type Description Required path string            Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..' true fieldRef object            Required: Selects a field of the pod: only annotations, labels, name, namespace and uid are supported. false mode integer            Optional: mode bits used to set permissions on this file, must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set. Format: int32 false resourceFieldRef object            Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmountsindexdownwardapiitemsindexfieldref","title":"K0smotronControlPlaneTemplate.spec.template.spec.mounts[index].downwardAPI.items[index].fieldRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Required: Selects a field of the pod: only annotations, labels, name, namespace and uid are supported.</p> Name Type Description Required fieldPath string            Path of the field to select in the specified API version. true apiVersion string            Version of the schema the FieldPath is written in terms of, defaults to \"v1\". false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmountsindexdownwardapiitemsindexresourcefieldref","title":"K0smotronControlPlaneTemplate.spec.template.spec.mounts[index].downwardAPI.items[index].resourceFieldRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.</p> Name Type Description Required resource string            Required: resource to select true containerName string            Container name: required for volumes, optional for env vars false divisor int or string            Specifies the output format of the exposed resources, defaults to \"1\" false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmountsindexemptydir","title":"K0smotronControlPlaneTemplate.spec.template.spec.mounts[index].emptyDir","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>emptyDir represents a temporary directory that shares a pod's lifetime. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir</p> Name Type Description Required medium string            medium represents what type of storage medium should back this directory. The default is \"\" which means to use the node's default medium. Must be an empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir false sizeLimit int or string            sizeLimit is the total amount of local storage required for this EmptyDir volume. The size limit is also applicable for memory medium. The maximum usage on memory medium EmptyDir would be the minimum value between the SizeLimit specified here and the sum of memory limits of all containers in a pod. The default is nil which means that the limit is undefined. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmountsindexephemeral","title":"K0smotronControlPlaneTemplate.spec.template.spec.mounts[index].ephemeral","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>ephemeral represents a volume that is handled by a cluster storage driver. The volume's lifecycle is tied to the pod that defines it - it will be created before the pod starts, and deleted when the pod is removed.</p> <p>Use this if: a) the volume is only needed while the pod runs, b) features of normal volumes like restoring from snapshot or capacity    tracking are needed, c) the storage driver is specified through a storage class, and d) the storage driver supports dynamic volume provisioning through    a PersistentVolumeClaim (see EphemeralVolumeSource for more    information on the connection between this volume type    and PersistentVolumeClaim).</p> <p>Use PersistentVolumeClaim or one of the vendor-specific APIs for volumes that persist for longer than the lifecycle of an individual pod.</p> <p>Use CSI for light-weight local ephemeral volumes if the CSI driver is meant to be used that way - see the documentation of the driver for more information.</p> <p>A pod can use both types of ephemeral volumes and persistent volumes at the same time.</p> Name Type Description Required volumeClaimTemplate object            Will be used to create a stand-alone PVC to provision the volume. The pod in which this EphemeralVolumeSource is embedded will be the owner of the PVC, i.e. the PVC will be deleted together with the pod.  The name of the PVC will be `-` where `` is the name from the `PodSpec.Volumes` array entry. Pod validation will reject the pod if the concatenated name is not valid for a PVC (for example, too long).   An existing PVC with that name that is not owned by the pod will *not* be used for the pod to avoid using an unrelated volume by mistake. Starting the pod is then blocked until the unrelated PVC is removed. If such a pre-created PVC is meant to be used by the pod, the PVC has to updated with an owner reference to the pod once the pod exists. Normally this should not be necessary, but it may be useful when manually reconstructing a broken cluster.   This field is read-only and no changes will be made by Kubernetes to the PVC after it has been created.   Required, must not be nil. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmountsindexephemeralvolumeclaimtemplate","title":"K0smotronControlPlaneTemplate.spec.template.spec.mounts[index].ephemeral.volumeClaimTemplate","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Will be used to create a stand-alone PVC to provision the volume. The pod in which this EphemeralVolumeSource is embedded will be the owner of the PVC, i.e. the PVC will be deleted together with the pod.  The name of the PVC will be <code>&lt;pod name&gt;-&lt;volume name&gt;</code> where <code>&lt;volume name&gt;</code> is the name from the <code>PodSpec.Volumes</code> array entry. Pod validation will reject the pod if the concatenated name is not valid for a PVC (for example, too long).</p> <p>An existing PVC with that name that is not owned by the pod will not be used for the pod to avoid using an unrelated volume by mistake. Starting the pod is then blocked until the unrelated PVC is removed. If such a pre-created PVC is meant to be used by the pod, the PVC has to updated with an owner reference to the pod once the pod exists. Normally this should not be necessary, but it may be useful when manually reconstructing a broken cluster.</p> <p>This field is read-only and no changes will be made by Kubernetes to the PVC after it has been created.</p> <p>Required, must not be nil.</p> Name Type Description Required spec object            The specification for the PersistentVolumeClaim. The entire content is copied unchanged into the PVC that gets created from this template. The same fields as in a PersistentVolumeClaim are also valid here. true metadata object            May contain labels and annotations that will be copied into the PVC when creating it. No other fields are allowed and will be rejected during validation. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmountsindexephemeralvolumeclaimtemplatespec","title":"K0smotronControlPlaneTemplate.spec.template.spec.mounts[index].ephemeral.volumeClaimTemplate.spec","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>The specification for the PersistentVolumeClaim. The entire content is copied unchanged into the PVC that gets created from this template. The same fields as in a PersistentVolumeClaim are also valid here.</p> Name Type Description Required accessModes []string            accessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1 false dataSource object            dataSource field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. When the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef, and dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified. If the namespace is specified, then dataSourceRef will not be copied to dataSource. false dataSourceRef object            dataSourceRef specifies the object from which to populate the volume with data, if a non-empty volume is desired. This may be any object from a non-empty API group (non core object) or a PersistentVolumeClaim object. When this field is specified, volume binding will only succeed if the type of the specified object matches some installed volume populator or dynamic provisioner. This field will replace the functionality of the dataSource field and as such if both fields are non-empty, they must have the same value. For backwards compatibility, when namespace isn't specified in dataSourceRef, both fields (dataSource and dataSourceRef) will be set to the same value automatically if one of them is empty and the other is non-empty. When namespace is specified in dataSourceRef, dataSource isn't set to the same value and must be empty. There are three important differences between dataSource and dataSourceRef: * While dataSource only allows two specific types of objects, dataSourceRef   allows any non-core object, as well as PersistentVolumeClaim objects. * While dataSource ignores disallowed values (dropping them), dataSourceRef   preserves all values, and generates an error if a disallowed value is   specified. * While dataSource only allows local objects, dataSourceRef allows objects   in any namespaces. (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled. (Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled. false resources object            resources represents the minimum resources the volume should have. If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements that are lower than previous value but must still be higher than capacity recorded in the status field of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources false selector object            selector is a label query over volumes to consider for binding. false storageClassName string            storageClassName is the name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1 false volumeAttributesClassName string            volumeAttributesClassName may be used to set the VolumeAttributesClass used by this claim. If specified, the CSI driver will create or update the volume with the attributes defined in the corresponding VolumeAttributesClass. This has a different purpose than storageClassName, it can be changed after the claim is created. An empty string value means that no VolumeAttributesClass will be applied to the claim but it's not allowed to reset this field to empty string once it is set. If unspecified and the PersistentVolumeClaim is unbound, the default VolumeAttributesClass will be set by the persistentvolume controller if it exists. If the resource referred to by volumeAttributesClass does not exist, this PersistentVolumeClaim will be set to a Pending state, as reflected by the modifyVolumeStatus field, until such as a resource exists. More info: https://kubernetes.io/docs/concepts/storage/volume-attributes-classes/ (Alpha) Using this field requires the VolumeAttributesClass feature gate to be enabled. false volumeMode string            volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec. false volumeName string            volumeName is the binding reference to the PersistentVolume backing this claim. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmountsindexephemeralvolumeclaimtemplatespecdatasource","title":"K0smotronControlPlaneTemplate.spec.template.spec.mounts[index].ephemeral.volumeClaimTemplate.spec.dataSource","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>dataSource field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. When the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef, and dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified. If the namespace is specified, then dataSourceRef will not be copied to dataSource.</p> Name Type Description Required kind string            Kind is the type of resource being referenced true name string            Name is the name of resource being referenced true apiGroup string            APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmountsindexephemeralvolumeclaimtemplatespecdatasourceref","title":"K0smotronControlPlaneTemplate.spec.template.spec.mounts[index].ephemeral.volumeClaimTemplate.spec.dataSourceRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>dataSourceRef specifies the object from which to populate the volume with data, if a non-empty volume is desired. This may be any object from a non-empty API group (non core object) or a PersistentVolumeClaim object. When this field is specified, volume binding will only succeed if the type of the specified object matches some installed volume populator or dynamic provisioner. This field will replace the functionality of the dataSource field and as such if both fields are non-empty, they must have the same value. For backwards compatibility, when namespace isn't specified in dataSourceRef, both fields (dataSource and dataSourceRef) will be set to the same value automatically if one of them is empty and the other is non-empty. When namespace is specified in dataSourceRef, dataSource isn't set to the same value and must be empty. There are three important differences between dataSource and dataSourceRef: * While dataSource only allows two specific types of objects, dataSourceRef   allows any non-core object, as well as PersistentVolumeClaim objects. * While dataSource ignores disallowed values (dropping them), dataSourceRef   preserves all values, and generates an error if a disallowed value is   specified. * While dataSource only allows local objects, dataSourceRef allows objects   in any namespaces. (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled. (Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled.</p> Name Type Description Required kind string            Kind is the type of resource being referenced true name string            Name is the name of resource being referenced true apiGroup string            APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required. false namespace string            Namespace is the namespace of resource being referenced Note that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details. (Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmountsindexephemeralvolumeclaimtemplatespecresources","title":"K0smotronControlPlaneTemplate.spec.template.spec.mounts[index].ephemeral.volumeClaimTemplate.spec.resources","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>resources represents the minimum resources the volume should have. If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements that are lower than previous value but must still be higher than capacity recorded in the status field of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources</p> Name Type Description Required limits map[string]int or string            Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/ false requests map[string]int or string            Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/ false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmountsindexephemeralvolumeclaimtemplatespecselector","title":"K0smotronControlPlaneTemplate.spec.template.spec.mounts[index].ephemeral.volumeClaimTemplate.spec.selector","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>selector is a label query over volumes to consider for binding.</p> Name Type Description Required matchExpressions []object            matchExpressions is a list of label selector requirements. The requirements are ANDed. false matchLabels map[string]string            matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmountsindexephemeralvolumeclaimtemplatespecselectormatchexpressionsindex","title":"K0smotronControlPlaneTemplate.spec.template.spec.mounts[index].ephemeral.volumeClaimTemplate.spec.selector.matchExpressions[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.</p> Name Type Description Required key string            key is the label key that the selector applies to. true operator string            operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist. true values []string            values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmountsindexephemeralvolumeclaimtemplatemetadata","title":"K0smotronControlPlaneTemplate.spec.template.spec.mounts[index].ephemeral.volumeClaimTemplate.metadata","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>May contain labels and annotations that will be copied into the PVC when creating it. No other fields are allowed and will be rejected during validation.</p> Name Type Description Required annotations map[string]string false finalizers []string false labels map[string]string false name string false namespace string false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmountsindexfc","title":"K0smotronControlPlaneTemplate.spec.template.spec.mounts[index].fc","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>fc represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.</p> Name Type Description Required fsType string            fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. TODO: how do we prevent errors in the filesystem from compromising the machine false lun integer            lun is Optional: FC target lun number Format: int32 false readOnly boolean            readOnly is Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. false targetWWNs []string            targetWWNs is Optional: FC target worldwide names (WWNs) false wwids []string            wwids Optional: FC volume world wide identifiers (wwids) Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmountsindexflexvolume","title":"K0smotronControlPlaneTemplate.spec.template.spec.mounts[index].flexVolume","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>flexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin.</p> Name Type Description Required driver string            driver is the name of the driver to use for this volume. true fsType string            fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". The default filesystem depends on FlexVolume script. false options map[string]string            options is Optional: this field holds extra command options if any. false readOnly boolean            readOnly is Optional: defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. false secretRef object            secretRef is Optional: secretRef is reference to the secret object containing sensitive information to pass to the plugin scripts. This may be empty if no secret object is specified. If the secret object contains more than one secret, all secrets are passed to the plugin scripts. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmountsindexflexvolumesecretref","title":"K0smotronControlPlaneTemplate.spec.template.spec.mounts[index].flexVolume.secretRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>secretRef is Optional: secretRef is reference to the secret object containing sensitive information to pass to the plugin scripts. This may be empty if no secret object is specified. If the secret object contains more than one secret, all secrets are passed to the plugin scripts.</p> Name Type Description Required name string            Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. TODO: Add other useful fields. apiVersion, kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896. Default:  false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmountsindexflocker","title":"K0smotronControlPlaneTemplate.spec.template.spec.mounts[index].flocker","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>flocker represents a Flocker volume attached to a kubelet's host machine. This depends on the Flocker control service being running</p> Name Type Description Required datasetName string            datasetName is Name of the dataset stored as metadata -&gt; name on the dataset for Flocker should be considered as deprecated false datasetUUID string            datasetUUID is the UUID of the dataset. This is unique identifier of a Flocker dataset false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmountsindexgcepersistentdisk","title":"K0smotronControlPlaneTemplate.spec.template.spec.mounts[index].gcePersistentDisk","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>gcePersistentDisk represents a GCE Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk</p> Name Type Description Required pdName string            pdName is unique name of the PD resource in GCE. Used to identify the disk in GCE. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk true fsType string            fsType is filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk TODO: how do we prevent errors in the filesystem from compromising the machine false partition integer            partition is the partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as \"1\". Similarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty). More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk Format: int32 false readOnly boolean            readOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmountsindexgitrepo","title":"K0smotronControlPlaneTemplate.spec.template.spec.mounts[index].gitRepo","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>gitRepo represents a git repository at a particular revision. DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir into the Pod's container.</p> Name Type Description Required repository string            repository is the URL true directory string            directory is the target directory name. Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the git repository.  Otherwise, if specified, the volume will contain the git repository in the subdirectory with the given name. false revision string            revision is the commit hash for the specified revision. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmountsindexglusterfs","title":"K0smotronControlPlaneTemplate.spec.template.spec.mounts[index].glusterfs","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime. More info: https://examples.k8s.io/volumes/glusterfs/README.md</p> Name Type Description Required endpoints string            endpoints is the endpoint name that details Glusterfs topology. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod true path string            path is the Glusterfs volume path. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod true readOnly boolean            readOnly here will force the Glusterfs volume to be mounted with read-only permissions. Defaults to false. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmountsindexhostpath","title":"K0smotronControlPlaneTemplate.spec.template.spec.mounts[index].hostPath","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>hostPath represents a pre-existing file or directory on the host machine that is directly exposed to the container. This is generally used for system agents or other privileged things that are allowed to see the host machine. Most containers will NOT need this. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath</p> <p>TODO(jonesdl) We need to restrict who can use host directory mounts and who can/can not mount host directories as read/write.</p> Name Type Description Required path string            path of the directory on the host. If the path is a symlink, it will follow the link to the real path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath true type string            type for HostPath Volume Defaults to \"\" More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmountsindexiscsi","title":"K0smotronControlPlaneTemplate.spec.template.spec.mounts[index].iscsi","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>iscsi represents an ISCSI Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://examples.k8s.io/volumes/iscsi/README.md</p> Name Type Description Required iqn string            iqn is the target iSCSI Qualified Name. true lun integer            lun represents iSCSI Target Lun number. Format: int32 true targetPortal string            targetPortal is iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260). true chapAuthDiscovery boolean            chapAuthDiscovery defines whether support iSCSI Discovery CHAP authentication false chapAuthSession boolean            chapAuthSession defines whether support iSCSI Session CHAP authentication false fsType string            fsType is the filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi TODO: how do we prevent errors in the filesystem from compromising the machine false initiatorName string            initiatorName is the custom iSCSI Initiator Name. If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface : will be created for the connection. false iscsiInterface string            iscsiInterface is the interface Name that uses an iSCSI transport. Defaults to 'default' (tcp). false portals []string            portals is the iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260). false readOnly boolean            readOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. false secretRef object            secretRef is the CHAP Secret for iSCSI target and initiator authentication false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmountsindexiscsisecretref","title":"K0smotronControlPlaneTemplate.spec.template.spec.mounts[index].iscsi.secretRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>secretRef is the CHAP Secret for iSCSI target and initiator authentication</p> Name Type Description Required name string            Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. TODO: Add other useful fields. apiVersion, kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896. Default:  false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmountsindexnfs","title":"K0smotronControlPlaneTemplate.spec.template.spec.mounts[index].nfs","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>nfs represents an NFS mount on the host that shares a pod's lifetime More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs</p> Name Type Description Required path string            path that is exported by the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs true server string            server is the hostname or IP address of the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs true readOnly boolean            readOnly here will force the NFS export to be mounted with read-only permissions. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmountsindexpersistentvolumeclaim","title":"K0smotronControlPlaneTemplate.spec.template.spec.mounts[index].persistentVolumeClaim","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>persistentVolumeClaimVolumeSource represents a reference to a PersistentVolumeClaim in the same namespace. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims</p> Name Type Description Required claimName string            claimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims true readOnly boolean            readOnly Will force the ReadOnly setting in VolumeMounts. Default false. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmountsindexphotonpersistentdisk","title":"K0smotronControlPlaneTemplate.spec.template.spec.mounts[index].photonPersistentDisk","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>photonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine</p> Name Type Description Required pdID string            pdID is the ID that identifies Photon Controller persistent disk true fsType string            fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmountsindexportworxvolume","title":"K0smotronControlPlaneTemplate.spec.template.spec.mounts[index].portworxVolume","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>portworxVolume represents a portworx volume attached and mounted on kubelets host machine</p> Name Type Description Required volumeID string            volumeID uniquely identifies a Portworx volume true fsType string            fSType represents the filesystem type to mount Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\". Implicitly inferred to be \"ext4\" if unspecified. false readOnly boolean            readOnly defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmountsindexprojected","title":"K0smotronControlPlaneTemplate.spec.template.spec.mounts[index].projected","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>projected items for all in one resources secrets, configmaps, and downward API</p> Name Type Description Required defaultMode integer            defaultMode are the mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set. Format: int32 false sources []object            sources is the list of volume projections false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmountsindexprojectedsourcesindex","title":"K0smotronControlPlaneTemplate.spec.template.spec.mounts[index].projected.sources[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Projection that may be projected along with other supported volume types</p> Name Type Description Required clusterTrustBundle object            ClusterTrustBundle allows a pod to access the `.spec.trustBundle` field of ClusterTrustBundle objects in an auto-updating file.   Alpha, gated by the ClusterTrustBundleProjection feature gate.   ClusterTrustBundle objects can either be selected by name, or by the combination of signer name and a label selector.   Kubelet performs aggressive normalization of the PEM contents written into the pod filesystem.  Esoteric PEM features such as inter-block comments and block headers are stripped.  Certificates are deduplicated. The ordering of certificates within the file is arbitrary, and Kubelet may change the order over time. false configMap object            configMap information about the configMap data to project false downwardAPI object            downwardAPI information about the downwardAPI data to project false secret object            secret information about the secret data to project false serviceAccountToken object            serviceAccountToken is information about the serviceAccountToken data to project false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmountsindexprojectedsourcesindexclustertrustbundle","title":"K0smotronControlPlaneTemplate.spec.template.spec.mounts[index].projected.sources[index].clusterTrustBundle","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>ClusterTrustBundle allows a pod to access the <code>.spec.trustBundle</code> field of ClusterTrustBundle objects in an auto-updating file.</p> <p>Alpha, gated by the ClusterTrustBundleProjection feature gate.</p> <p>ClusterTrustBundle objects can either be selected by name, or by the combination of signer name and a label selector.</p> <p>Kubelet performs aggressive normalization of the PEM contents written into the pod filesystem.  Esoteric PEM features such as inter-block comments and block headers are stripped.  Certificates are deduplicated. The ordering of certificates within the file is arbitrary, and Kubelet may change the order over time.</p> Name Type Description Required path string            Relative path from the volume root to write the bundle. true labelSelector object            Select all ClusterTrustBundles that match this label selector.  Only has effect if signerName is set.  Mutually-exclusive with name.  If unset, interpreted as \"match nothing\".  If set but empty, interpreted as \"match everything\". false name string            Select a single ClusterTrustBundle by object name.  Mutually-exclusive with signerName and labelSelector. false optional boolean            If true, don't block pod startup if the referenced ClusterTrustBundle(s) aren't available.  If using name, then the named ClusterTrustBundle is allowed not to exist.  If using signerName, then the combination of signerName and labelSelector is allowed to match zero ClusterTrustBundles. false signerName string            Select all ClusterTrustBundles that match this signer name. Mutually-exclusive with name.  The contents of all selected ClusterTrustBundles will be unified and deduplicated. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmountsindexprojectedsourcesindexclustertrustbundlelabelselector","title":"K0smotronControlPlaneTemplate.spec.template.spec.mounts[index].projected.sources[index].clusterTrustBundle.labelSelector","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Select all ClusterTrustBundles that match this label selector.  Only has effect if signerName is set.  Mutually-exclusive with name.  If unset, interpreted as \"match nothing\".  If set but empty, interpreted as \"match everything\".</p> Name Type Description Required matchExpressions []object            matchExpressions is a list of label selector requirements. The requirements are ANDed. false matchLabels map[string]string            matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmountsindexprojectedsourcesindexclustertrustbundlelabelselectormatchexpressionsindex","title":"K0smotronControlPlaneTemplate.spec.template.spec.mounts[index].projected.sources[index].clusterTrustBundle.labelSelector.matchExpressions[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.</p> Name Type Description Required key string            key is the label key that the selector applies to. true operator string            operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist. true values []string            values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmountsindexprojectedsourcesindexconfigmap","title":"K0smotronControlPlaneTemplate.spec.template.spec.mounts[index].projected.sources[index].configMap","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>configMap information about the configMap data to project</p> Name Type Description Required items []object            items if unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'. false name string            Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. TODO: Add other useful fields. apiVersion, kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896. Default:  false optional boolean            optional specify whether the ConfigMap or its keys must be defined false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmountsindexprojectedsourcesindexconfigmapitemsindex","title":"K0smotronControlPlaneTemplate.spec.template.spec.mounts[index].projected.sources[index].configMap.items[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Maps a string key to a path within a volume.</p> Name Type Description Required key string            key is the key to project. true path string            path is the relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'. true mode integer            mode is Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set. Format: int32 false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmountsindexprojectedsourcesindexdownwardapi","title":"K0smotronControlPlaneTemplate.spec.template.spec.mounts[index].projected.sources[index].downwardAPI","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>downwardAPI information about the downwardAPI data to project</p> Name Type Description Required items []object            Items is a list of DownwardAPIVolume file false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmountsindexprojectedsourcesindexdownwardapiitemsindex","title":"K0smotronControlPlaneTemplate.spec.template.spec.mounts[index].projected.sources[index].downwardAPI.items[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>DownwardAPIVolumeFile represents information to create the file containing the pod field</p> Name Type Description Required path string            Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..' true fieldRef object            Required: Selects a field of the pod: only annotations, labels, name, namespace and uid are supported. false mode integer            Optional: mode bits used to set permissions on this file, must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set. Format: int32 false resourceFieldRef object            Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmountsindexprojectedsourcesindexdownwardapiitemsindexfieldref","title":"K0smotronControlPlaneTemplate.spec.template.spec.mounts[index].projected.sources[index].downwardAPI.items[index].fieldRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Required: Selects a field of the pod: only annotations, labels, name, namespace and uid are supported.</p> Name Type Description Required fieldPath string            Path of the field to select in the specified API version. true apiVersion string            Version of the schema the FieldPath is written in terms of, defaults to \"v1\". false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmountsindexprojectedsourcesindexdownwardapiitemsindexresourcefieldref","title":"K0smotronControlPlaneTemplate.spec.template.spec.mounts[index].projected.sources[index].downwardAPI.items[index].resourceFieldRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.</p> Name Type Description Required resource string            Required: resource to select true containerName string            Container name: required for volumes, optional for env vars false divisor int or string            Specifies the output format of the exposed resources, defaults to \"1\" false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmountsindexprojectedsourcesindexsecret","title":"K0smotronControlPlaneTemplate.spec.template.spec.mounts[index].projected.sources[index].secret","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>secret information about the secret data to project</p> Name Type Description Required items []object            items if unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'. false name string            Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. TODO: Add other useful fields. apiVersion, kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896. Default:  false optional boolean            optional field specify whether the Secret or its key must be defined false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmountsindexprojectedsourcesindexsecretitemsindex","title":"K0smotronControlPlaneTemplate.spec.template.spec.mounts[index].projected.sources[index].secret.items[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Maps a string key to a path within a volume.</p> Name Type Description Required key string            key is the key to project. true path string            path is the relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'. true mode integer            mode is Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set. Format: int32 false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmountsindexprojectedsourcesindexserviceaccounttoken","title":"K0smotronControlPlaneTemplate.spec.template.spec.mounts[index].projected.sources[index].serviceAccountToken","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>serviceAccountToken is information about the serviceAccountToken data to project</p> Name Type Description Required path string            path is the path relative to the mount point of the file to project the token into. true audience string            audience is the intended audience of the token. A recipient of a token must identify itself with an identifier specified in the audience of the token, and otherwise should reject the token. The audience defaults to the identifier of the apiserver. false expirationSeconds integer            expirationSeconds is the requested duration of validity of the service account token. As the token approaches expiration, the kubelet volume plugin will proactively rotate the service account token. The kubelet will start trying to rotate the token if the token is older than 80 percent of its time to live or if the token is older than 24 hours.Defaults to 1 hour and must be at least 10 minutes. Format: int64 false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmountsindexquobyte","title":"K0smotronControlPlaneTemplate.spec.template.spec.mounts[index].quobyte","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>quobyte represents a Quobyte mount on the host that shares a pod's lifetime</p> Name Type Description Required registry string            registry represents a single or multiple Quobyte Registry services specified as a string as host:port pair (multiple entries are separated with commas) which acts as the central registry for volumes true volume string            volume is a string that references an already created Quobyte volume by name. true group string            group to map volume access to Default is no group false readOnly boolean            readOnly here will force the Quobyte volume to be mounted with read-only permissions. Defaults to false. false tenant string            tenant owning the given Quobyte volume in the Backend Used with dynamically provisioned Quobyte volumes, value is set by the plugin false user string            user to map volume access to Defaults to serivceaccount user false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmountsindexrbd","title":"K0smotronControlPlaneTemplate.spec.template.spec.mounts[index].rbd","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>rbd represents a Rados Block Device mount on the host that shares a pod's lifetime. More info: https://examples.k8s.io/volumes/rbd/README.md</p> Name Type Description Required image string            image is the rados image name. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it true monitors []string            monitors is a collection of Ceph monitors. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it true fsType string            fsType is the filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd TODO: how do we prevent errors in the filesystem from compromising the machine false keyring string            keyring is the path to key ring for RBDUser. Default is /etc/ceph/keyring. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it false pool string            pool is the rados pool name. Default is rbd. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it false readOnly boolean            readOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it false secretRef object            secretRef is name of the authentication secret for RBDUser. If provided overrides keyring. Default is nil. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it false user string            user is the rados user name. Default is admin. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmountsindexrbdsecretref","title":"K0smotronControlPlaneTemplate.spec.template.spec.mounts[index].rbd.secretRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>secretRef is name of the authentication secret for RBDUser. If provided overrides keyring. Default is nil. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it</p> Name Type Description Required name string            Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. TODO: Add other useful fields. apiVersion, kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896. Default:  false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmountsindexscaleio","title":"K0smotronControlPlaneTemplate.spec.template.spec.mounts[index].scaleIO","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>scaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.</p> Name Type Description Required gateway string            gateway is the host address of the ScaleIO API Gateway. true secretRef object            secretRef references to the secret for ScaleIO user and other sensitive information. If this is not provided, Login operation will fail. true system string            system is the name of the storage system as configured in ScaleIO. true fsType string            fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Default is \"xfs\". false protectionDomain string            protectionDomain is the name of the ScaleIO Protection Domain for the configured storage. false readOnly boolean            readOnly Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. false sslEnabled boolean            sslEnabled Flag enable/disable SSL communication with Gateway, default false false storageMode string            storageMode indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned. Default is ThinProvisioned. false storagePool string            storagePool is the ScaleIO Storage Pool associated with the protection domain. false volumeName string            volumeName is the name of a volume already created in the ScaleIO system that is associated with this volume source. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmountsindexscaleiosecretref","title":"K0smotronControlPlaneTemplate.spec.template.spec.mounts[index].scaleIO.secretRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>secretRef references to the secret for ScaleIO user and other sensitive information. If this is not provided, Login operation will fail.</p> Name Type Description Required name string            Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. TODO: Add other useful fields. apiVersion, kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896. Default:  false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmountsindexsecret","title":"K0smotronControlPlaneTemplate.spec.template.spec.mounts[index].secret","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>secret represents a secret that should populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret</p> Name Type Description Required defaultMode integer            defaultMode is Optional: mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set. Format: int32 false items []object            items If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'. false optional boolean            optional field specify whether the Secret or its keys must be defined false secretName string            secretName is the name of the secret in the pod's namespace to use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmountsindexsecretitemsindex","title":"K0smotronControlPlaneTemplate.spec.template.spec.mounts[index].secret.items[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Maps a string key to a path within a volume.</p> Name Type Description Required key string            key is the key to project. true path string            path is the relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'. true mode integer            mode is Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set. Format: int32 false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmountsindexstorageos","title":"K0smotronControlPlaneTemplate.spec.template.spec.mounts[index].storageos","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>storageOS represents a StorageOS volume attached and mounted on Kubernetes nodes.</p> Name Type Description Required fsType string            fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. false readOnly boolean            readOnly defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. false secretRef object            secretRef specifies the secret to use for obtaining the StorageOS API credentials.  If not specified, default values will be attempted. false volumeName string            volumeName is the human-readable name of the StorageOS volume.  Volume names are only unique within a namespace. false volumeNamespace string            volumeNamespace specifies the scope of the volume within StorageOS.  If no namespace is specified then the Pod's namespace will be used.  This allows the Kubernetes name scoping to be mirrored within StorageOS for tighter integration. Set VolumeName to any name to override the default behaviour. Set to \"default\" if you are not using namespaces within StorageOS. Namespaces that do not pre-exist within StorageOS will be created. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmountsindexstorageossecretref","title":"K0smotronControlPlaneTemplate.spec.template.spec.mounts[index].storageos.secretRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>secretRef specifies the secret to use for obtaining the StorageOS API credentials.  If not specified, default values will be attempted.</p> Name Type Description Required name string            Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. TODO: Add other useful fields. apiVersion, kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896. Default:  false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecmountsindexvspherevolume","title":"K0smotronControlPlaneTemplate.spec.template.spec.mounts[index].vsphereVolume","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>vsphereVolume represents a vSphere volume attached and mounted on kubelets host machine</p> Name Type Description Required volumePath string            volumePath is the path that identifies vSphere volume vmdk true fsType string            fsType is filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. false storagePolicyID string            storagePolicyID is the storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName. false storagePolicyName string            storagePolicyName is the storage Policy Based Management (SPBM) profile name. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecpersistence","title":"K0smotronControlPlaneTemplate.spec.template.spec.persistence","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Persistence defines the persistence configuration. If empty k0smotron will use emptyDir as a volume. See https://docs.k0smotron.io/stable/configuration/#persistence</p> Name Type Description Required type string Default: emptyDir true autoDeletePVCs boolean            AutoDeletePVCs defines whether the PVC should be deleted when the cluster is deleted. Default: false false hostPath string            HostPath defines the host path configuration. Will be used as is in case of .spec.persistence.type is hostPath. false persistentVolumeClaim object            PersistentVolumeClaim defines the PVC configuration. Will be used as is in case of .spec.persistence.type is pvc. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecpersistencepersistentvolumeclaim","title":"K0smotronControlPlaneTemplate.spec.template.spec.persistence.persistentVolumeClaim","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>PersistentVolumeClaim defines the PVC configuration. Will be used as is in case of .spec.persistence.type is pvc.</p> Name Type Description Required apiVersion string            APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources false kind string            Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds false metadata object            Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata false spec object            spec defines the desired characteristics of a volume requested by a pod author. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims false status object            status represents the current information/status of a persistent volume claim. Read-only. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecpersistencepersistentvolumeclaimmetadata","title":"K0smotronControlPlaneTemplate.spec.template.spec.persistence.persistentVolumeClaim.metadata","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata</p> Name Type Description Required annotations map[string]string false finalizers []string false labels map[string]string false name string false namespace string false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecpersistencepersistentvolumeclaimspec","title":"K0smotronControlPlaneTemplate.spec.template.spec.persistence.persistentVolumeClaim.spec","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>spec defines the desired characteristics of a volume requested by a pod author. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims</p> Name Type Description Required accessModes []string            accessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1 false dataSource object            dataSource field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. When the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef, and dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified. If the namespace is specified, then dataSourceRef will not be copied to dataSource. false dataSourceRef object            dataSourceRef specifies the object from which to populate the volume with data, if a non-empty volume is desired. This may be any object from a non-empty API group (non core object) or a PersistentVolumeClaim object. When this field is specified, volume binding will only succeed if the type of the specified object matches some installed volume populator or dynamic provisioner. This field will replace the functionality of the dataSource field and as such if both fields are non-empty, they must have the same value. For backwards compatibility, when namespace isn't specified in dataSourceRef, both fields (dataSource and dataSourceRef) will be set to the same value automatically if one of them is empty and the other is non-empty. When namespace is specified in dataSourceRef, dataSource isn't set to the same value and must be empty. There are three important differences between dataSource and dataSourceRef: * While dataSource only allows two specific types of objects, dataSourceRef   allows any non-core object, as well as PersistentVolumeClaim objects. * While dataSource ignores disallowed values (dropping them), dataSourceRef   preserves all values, and generates an error if a disallowed value is   specified. * While dataSource only allows local objects, dataSourceRef allows objects   in any namespaces. (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled. (Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled. false resources object            resources represents the minimum resources the volume should have. If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements that are lower than previous value but must still be higher than capacity recorded in the status field of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources false selector object            selector is a label query over volumes to consider for binding. false storageClassName string            storageClassName is the name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1 false volumeAttributesClassName string            volumeAttributesClassName may be used to set the VolumeAttributesClass used by this claim. If specified, the CSI driver will create or update the volume with the attributes defined in the corresponding VolumeAttributesClass. This has a different purpose than storageClassName, it can be changed after the claim is created. An empty string value means that no VolumeAttributesClass will be applied to the claim but it's not allowed to reset this field to empty string once it is set. If unspecified and the PersistentVolumeClaim is unbound, the default VolumeAttributesClass will be set by the persistentvolume controller if it exists. If the resource referred to by volumeAttributesClass does not exist, this PersistentVolumeClaim will be set to a Pending state, as reflected by the modifyVolumeStatus field, until such as a resource exists. More info: https://kubernetes.io/docs/concepts/storage/volume-attributes-classes/ (Alpha) Using this field requires the VolumeAttributesClass feature gate to be enabled. false volumeMode string            volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec. false volumeName string            volumeName is the binding reference to the PersistentVolume backing this claim. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecpersistencepersistentvolumeclaimspecdatasource","title":"K0smotronControlPlaneTemplate.spec.template.spec.persistence.persistentVolumeClaim.spec.dataSource","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>dataSource field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. When the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef, and dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified. If the namespace is specified, then dataSourceRef will not be copied to dataSource.</p> Name Type Description Required kind string            Kind is the type of resource being referenced true name string            Name is the name of resource being referenced true apiGroup string            APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecpersistencepersistentvolumeclaimspecdatasourceref","title":"K0smotronControlPlaneTemplate.spec.template.spec.persistence.persistentVolumeClaim.spec.dataSourceRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>dataSourceRef specifies the object from which to populate the volume with data, if a non-empty volume is desired. This may be any object from a non-empty API group (non core object) or a PersistentVolumeClaim object. When this field is specified, volume binding will only succeed if the type of the specified object matches some installed volume populator or dynamic provisioner. This field will replace the functionality of the dataSource field and as such if both fields are non-empty, they must have the same value. For backwards compatibility, when namespace isn't specified in dataSourceRef, both fields (dataSource and dataSourceRef) will be set to the same value automatically if one of them is empty and the other is non-empty. When namespace is specified in dataSourceRef, dataSource isn't set to the same value and must be empty. There are three important differences between dataSource and dataSourceRef: * While dataSource only allows two specific types of objects, dataSourceRef   allows any non-core object, as well as PersistentVolumeClaim objects. * While dataSource ignores disallowed values (dropping them), dataSourceRef   preserves all values, and generates an error if a disallowed value is   specified. * While dataSource only allows local objects, dataSourceRef allows objects   in any namespaces. (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled. (Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled.</p> Name Type Description Required kind string            Kind is the type of resource being referenced true name string            Name is the name of resource being referenced true apiGroup string            APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required. false namespace string            Namespace is the namespace of resource being referenced Note that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details. (Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecpersistencepersistentvolumeclaimspecresources","title":"K0smotronControlPlaneTemplate.spec.template.spec.persistence.persistentVolumeClaim.spec.resources","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>resources represents the minimum resources the volume should have. If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements that are lower than previous value but must still be higher than capacity recorded in the status field of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources</p> Name Type Description Required limits map[string]int or string            Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/ false requests map[string]int or string            Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/ false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecpersistencepersistentvolumeclaimspecselector","title":"K0smotronControlPlaneTemplate.spec.template.spec.persistence.persistentVolumeClaim.spec.selector","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>selector is a label query over volumes to consider for binding.</p> Name Type Description Required matchExpressions []object            matchExpressions is a list of label selector requirements. The requirements are ANDed. false matchLabels map[string]string            matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecpersistencepersistentvolumeclaimspecselectormatchexpressionsindex","title":"K0smotronControlPlaneTemplate.spec.template.spec.persistence.persistentVolumeClaim.spec.selector.matchExpressions[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.</p> Name Type Description Required key string            key is the label key that the selector applies to. true operator string            operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist. true values []string            values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecpersistencepersistentvolumeclaimstatus","title":"K0smotronControlPlaneTemplate.spec.template.spec.persistence.persistentVolumeClaim.status","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>status represents the current information/status of a persistent volume claim. Read-only. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims</p> Name Type Description Required accessModes []string            accessModes contains the actual access modes the volume backing the PVC has. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1 false allocatedResourceStatuses map[string]string            allocatedResourceStatuses stores status of resource being resized for the given PVC. Key names follow standard Kubernetes label syntax. Valid values are either:     * Un-prefixed keys:         - storage - the capacity of the volume.     * Custom resources must use implementation-defined prefixed names such as \"example.com/my-custom-resource\" Apart from above values - keys that are unprefixed or have kubernetes.io prefix are considered reserved and hence may not be used.   ClaimResourceStatus can be in any of following states:     - ControllerResizeInProgress:         State set when resize controller starts resizing the volume in control-plane.     - ControllerResizeFailed:         State set when resize has failed in resize controller with a terminal error.     - NodeResizePending:         State set when resize controller has finished resizing the volume but further resizing of         volume is needed on the node.     - NodeResizeInProgress:         State set when kubelet starts resizing the volume.     - NodeResizeFailed:         State set when resizing has failed in kubelet with a terminal error. Transient errors don't set         NodeResizeFailed. For example: if expanding a PVC for more capacity - this field can be one of the following states:     - pvc.status.allocatedResourceStatus['storage'] = \"ControllerResizeInProgress\"      - pvc.status.allocatedResourceStatus['storage'] = \"ControllerResizeFailed\"      - pvc.status.allocatedResourceStatus['storage'] = \"NodeResizePending\"      - pvc.status.allocatedResourceStatus['storage'] = \"NodeResizeInProgress\"      - pvc.status.allocatedResourceStatus['storage'] = \"NodeResizeFailed\" When this field is not set, it means that no resize operation is in progress for the given PVC.   A controller that receives PVC update with previously unknown resourceName or ClaimResourceStatus should ignore the update for the purpose it was designed. For example - a controller that only is responsible for resizing capacity of the volume, should ignore PVC updates that change other valid resources associated with PVC.   This is an alpha field and requires enabling RecoverVolumeExpansionFailure feature. false allocatedResources map[string]int or string            allocatedResources tracks the resources allocated to a PVC including its capacity. Key names follow standard Kubernetes label syntax. Valid values are either:     * Un-prefixed keys:         - storage - the capacity of the volume.     * Custom resources must use implementation-defined prefixed names such as \"example.com/my-custom-resource\" Apart from above values - keys that are unprefixed or have kubernetes.io prefix are considered reserved and hence may not be used.   Capacity reported here may be larger than the actual capacity when a volume expansion operation is requested. For storage quota, the larger value from allocatedResources and PVC.spec.resources is used. If allocatedResources is not set, PVC.spec.resources alone is used for quota calculation. If a volume expansion capacity request is lowered, allocatedResources is only lowered if there are no expansion operations in progress and if the actual volume capacity is equal or lower than the requested capacity.   A controller that receives PVC update with previously unknown resourceName should ignore the update for the purpose it was designed. For example - a controller that only is responsible for resizing capacity of the volume, should ignore PVC updates that change other valid resources associated with PVC.   This is an alpha field and requires enabling RecoverVolumeExpansionFailure feature. false capacity map[string]int or string            capacity represents the actual resources of the underlying volume. false conditions []object            conditions is the current Condition of persistent volume claim. If underlying persistent volume is being resized then the Condition will be set to 'Resizing'. false currentVolumeAttributesClassName string            currentVolumeAttributesClassName is the current name of the VolumeAttributesClass the PVC is using. When unset, there is no VolumeAttributeClass applied to this PersistentVolumeClaim This is an alpha field and requires enabling VolumeAttributesClass feature. false modifyVolumeStatus object            ModifyVolumeStatus represents the status object of ControllerModifyVolume operation. When this is unset, there is no ModifyVolume operation being attempted. This is an alpha field and requires enabling VolumeAttributesClass feature. false phase string            phase represents the current phase of PersistentVolumeClaim. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecpersistencepersistentvolumeclaimstatusconditionsindex","title":"K0smotronControlPlaneTemplate.spec.template.spec.persistence.persistentVolumeClaim.status.conditions[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>PersistentVolumeClaimCondition contains details about state of pvc</p> Name Type Description Required status string true type string            PersistentVolumeClaimConditionType is a valid value of PersistentVolumeClaimCondition.Type true lastProbeTime string            lastProbeTime is the time we probed the condition. Format: date-time false lastTransitionTime string            lastTransitionTime is the time the condition transitioned from one status to another. Format: date-time false message string            message is the human-readable message indicating details about last transition. false reason string            reason is a unique, this should be a short, machine understandable string that gives the reason for condition's last transition. If it reports \"Resizing\" that means the underlying persistent volume is being resized. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecpersistencepersistentvolumeclaimstatusmodifyvolumestatus","title":"K0smotronControlPlaneTemplate.spec.template.spec.persistence.persistentVolumeClaim.status.modifyVolumeStatus","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>ModifyVolumeStatus represents the status object of ControllerModifyVolume operation. When this is unset, there is no ModifyVolume operation being attempted. This is an alpha field and requires enabling VolumeAttributesClass feature.</p> Name Type Description Required status string            status is the status of the ControllerModifyVolume operation. It can be in any of following states:  - Pending    Pending indicates that the PersistentVolumeClaim cannot be modified due to unmet requirements, such as    the specified VolumeAttributesClass not existing.  - InProgress    InProgress indicates that the volume is being modified.  - Infeasible   Infeasible indicates that the request has been rejected as invalid by the CSI driver. To       resolve the error, a valid VolumeAttributesClass needs to be specified. Note: New statuses can be added in the future. Consumers should check for unknown statuses and fail appropriately. true targetVolumeAttributesClassName string            targetVolumeAttributesClassName is the name of the VolumeAttributesClass the PVC currently being reconciled false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecresources","title":"K0smotronControlPlaneTemplate.spec.template.spec.resources","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Resources describes the compute resource requirements for the control plane pods.</p> Name Type Description Required claims []object            Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container.   This is an alpha field and requires enabling the DynamicResourceAllocation feature gate.   This field is immutable. It can only be set for containers. false limits map[string]int or string            Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/ false requests map[string]int or string            Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/ false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecresourcesclaimsindex","title":"K0smotronControlPlaneTemplate.spec.template.spec.resources.claims[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>ResourceClaim references one entry in PodSpec.ResourceClaims.</p> Name Type Description Required name string            Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container. true"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespecservice","title":"K0smotronControlPlaneTemplate.spec.template.spec.service","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Service defines the service configuration.</p> Name Type Description Required type enum            Service Type string describes ingress methods for a service Enum: ClusterIP, NodePort, LoadBalancer Default: ClusterIP true annotations map[string]string            Annotations defines extra annotations to be added to the service. false apiPort integer            APIPort defines the kubernetes API port. If empty k0smotron will pick it automatically. Default: 30443 false konnectivityPort integer            KonnectivityPort defines the konnectivity port. If empty k0smotron will pick it automatically. Default: 30132 false labels map[string]string            Labels defines extra labels to be added to the service. false loadBalancerClass string            LoadBalancerClass defines the load balancer class to be used for the service. Used only when service type is LoadBalancer. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespectopologyspreadconstraintsindex","title":"K0smotronControlPlaneTemplate.spec.template.spec.topologySpreadConstraints[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>TopologySpreadConstraint specifies how to spread matching pods among the given topology.</p> Name Type Description Required maxSkew integer            MaxSkew describes the degree to which pods may be unevenly distributed. When `whenUnsatisfiable=DoNotSchedule`, it is the maximum permitted difference between the number of matching pods in the target topology and the global minimum. The global minimum is the minimum number of matching pods in an eligible domain or zero if the number of eligible domains is less than MinDomains. For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same labelSelector spread as 2/2/1: In this case, the global minimum is 1. | zone1 | zone2 | zone3 | |  P P  |  P P  |   P   | - if MaxSkew is 1, incoming pod can only be scheduled to zone3 to become 2/2/2; scheduling it onto zone1(zone2) would make the ActualSkew(3-1) on zone1(zone2) violate MaxSkew(1). - if MaxSkew is 2, incoming pod can be scheduled onto any zone. When `whenUnsatisfiable=ScheduleAnyway`, it is used to give higher precedence to topologies that satisfy it. It's a required field. Default value is 1 and 0 is not allowed. Format: int32 true topologyKey string            TopologyKey is the key of node labels. Nodes that have a label with this key and identical values are considered to be in the same topology. We consider each  as a \"bucket\", and try to put balanced number of pods into each bucket. We define a domain as a particular instance of a topology. Also, we define an eligible domain as a domain whose nodes meet the requirements of nodeAffinityPolicy and nodeTaintsPolicy. e.g. If TopologyKey is \"kubernetes.io/hostname\", each Node is a domain of that topology. And, if TopologyKey is \"topology.kubernetes.io/zone\", each zone is a domain of that topology. It's a required field. true whenUnsatisfiable string            WhenUnsatisfiable indicates how to deal with a pod if it doesn't satisfy the spread constraint. - DoNotSchedule (default) tells the scheduler not to schedule it. - ScheduleAnyway tells the scheduler to schedule the pod in any location,   but giving higher precedence to topologies that would help reduce the   skew. A constraint is considered \"Unsatisfiable\" for an incoming pod if and only if every possible node assignment for that pod would violate \"MaxSkew\" on some topology. For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same labelSelector spread as 3/1/1: | zone1 | zone2 | zone3 | | P P P |   P   |   P   | If WhenUnsatisfiable is set to DoNotSchedule, incoming pod can only be scheduled to zone2(zone3) to become 3/2/1(3/1/2) as ActualSkew(2-1) on zone2(zone3) satisfies MaxSkew(1). In other words, the cluster can still be imbalanced, but scheduler won't make it *more* imbalanced. It's a required field. true labelSelector object            LabelSelector is used to find matching pods. Pods that match this label selector are counted to determine the number of pods in their corresponding topology domain. false matchLabelKeys []string            MatchLabelKeys is a set of pod label keys to select the pods over which spreading will be calculated. The keys are used to lookup values from the incoming pod labels, those key-value labels are ANDed with labelSelector to select the group of existing pods over which spreading will be calculated for the incoming pod. The same key is forbidden to exist in both MatchLabelKeys and LabelSelector. MatchLabelKeys cannot be set when LabelSelector isn't set. Keys that don't exist in the incoming pod labels will be ignored. A null or empty list means only match against labelSelector.   This is a beta field and requires the MatchLabelKeysInPodTopologySpread feature gate to be enabled (enabled by default). false minDomains integer            MinDomains indicates a minimum number of eligible domains. When the number of eligible domains with matching topology keys is less than minDomains, Pod Topology Spread treats \"global minimum\" as 0, and then the calculation of Skew is performed. And when the number of eligible domains with matching topology keys equals or greater than minDomains, this value has no effect on scheduling. As a result, when the number of eligible domains is less than minDomains, scheduler won't schedule more than maxSkew Pods to those domains. If value is nil, the constraint behaves as if MinDomains is equal to 1. Valid values are integers greater than 0. When value is not nil, WhenUnsatisfiable must be DoNotSchedule.   For example, in a 3-zone cluster, MaxSkew is set to 2, MinDomains is set to 5 and pods with the same labelSelector spread as 2/2/2: | zone1 | zone2 | zone3 | |  P P  |  P P  |  P P  | The number of domains is less than 5(MinDomains), so \"global minimum\" is treated as 0. In this situation, new pod with the same labelSelector cannot be scheduled, because computed skew will be 3(3 - 0) if new Pod is scheduled to any of the three zones, it will violate MaxSkew. Format: int32 false nodeAffinityPolicy string            NodeAffinityPolicy indicates how we will treat Pod's nodeAffinity/nodeSelector when calculating pod topology spread skew. Options are: - Honor: only nodes matching nodeAffinity/nodeSelector are included in the calculations. - Ignore: nodeAffinity/nodeSelector are ignored. All nodes are included in the calculations.   If this value is nil, the behavior is equivalent to the Honor policy. This is a beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread feature flag. false nodeTaintsPolicy string            NodeTaintsPolicy indicates how we will treat node taints when calculating pod topology spread skew. Options are: - Honor: nodes without taints, along with tainted nodes for which the incoming pod has a toleration, are included. - Ignore: node taints are ignored. All nodes are included.   If this value is nil, the behavior is equivalent to the Ignore policy. This is a beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread feature flag. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespectopologyspreadconstraintsindexlabelselector","title":"K0smotronControlPlaneTemplate.spec.template.spec.topologySpreadConstraints[index].labelSelector","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>LabelSelector is used to find matching pods. Pods that match this label selector are counted to determine the number of pods in their corresponding topology domain.</p> Name Type Description Required matchExpressions []object            matchExpressions is a list of label selector requirements. The requirements are ANDed. false matchLabels map[string]string            matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed. false"},{"location":"resource-reference/controlplane.cluster.x-k8s.io-v1beta1/#k0smotroncontrolplanetemplatespectemplatespectopologyspreadconstraintsindexlabelselectormatchexpressionsindex","title":"K0smotronControlPlaneTemplate.spec.template.spec.topologySpreadConstraints[index].labelSelector.matchExpressions[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.</p> Name Type Description Required key string            key is the label key that the selector applies to. true operator string            operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist. true values []string            values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/","title":"API Reference","text":"<p>Packages:</p> <ul> <li>infrastructure.cluster.x-k8s.io/v1beta1</li> </ul>"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#infrastructureclusterx-k8siov1beta1","title":"infrastructure.cluster.x-k8s.io/v1beta1","text":"<p>Resource Types:</p> <ul> <li>PooledRemoteMachine</li> </ul> <ul> <li>RemoteCluster</li> </ul> <ul> <li>RemoteMachine</li> </ul> <ul> <li>RemoteMachineTemplate</li> </ul>"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#pooledremotemachine","title":"PooledRemoteMachine","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> Name Type Description Required apiVersion string infrastructure.cluster.x-k8s.io/v1beta1 true kind string PooledRemoteMachine true metadata object Refer to the Kubernetes API documentation for the fields of the `metadata` field. true spec object false status object false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#pooledremotemachinespec","title":"PooledRemoteMachine.spec","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> Name Type Description Required machine object true pool string true"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#pooledremotemachinespecmachine","title":"PooledRemoteMachine.spec.machine","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> Name Type Description Required address string            Address is the IP address or DNS name of the remote machine. true sshKeyRef object            SSHKeyRef is a reference to a secret that contains the SSH private key. The key must be placed on the secret using the key \"value\". true port integer            Port is the SSH port of the remote machine. Default: 22 false user string            User is the user to use when connecting to the remote machine. Default: root false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#pooledremotemachinespecmachinesshkeyref","title":"PooledRemoteMachine.spec.machine.sshKeyRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>SSHKeyRef is a reference to a secret that contains the SSH private key. The key must be placed on the secret using the key \"value\".</p> Name Type Description Required name string            Name is the name of the secret. true"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#pooledremotemachinestatus","title":"PooledRemoteMachine.status","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> Name Type Description Required machineRef object true reserved boolean true"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#pooledremotemachinestatusmachineref","title":"PooledRemoteMachine.status.machineRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> Name Type Description Required name string true namespace string true"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotecluster","title":"RemoteCluster","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> Name Type Description Required apiVersion string infrastructure.cluster.x-k8s.io/v1beta1 true kind string RemoteCluster true metadata object Refer to the Kubernetes API documentation for the fields of the `metadata` field. true spec object            RemoteClusterSpec defines the desired state of RemoteCluster false status object            RemoteClusterStatus defines the observed state of RemoteCluster false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remoteclusterspec","title":"RemoteCluster.spec","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>RemoteClusterSpec defines the desired state of RemoteCluster</p> Name Type Description Required controlPlaneEndpoint object            APIEndpoint represents a reachable Kubernetes API endpoint. true"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remoteclusterspeccontrolplaneendpoint","title":"RemoteCluster.spec.controlPlaneEndpoint","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>APIEndpoint represents a reachable Kubernetes API endpoint.</p> Name Type Description Required host string            The hostname on which the API server is serving. true port integer            The port on which the API server is serving. Format: int32 true"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remoteclusterstatus","title":"RemoteCluster.status","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>RemoteClusterStatus defines the observed state of RemoteCluster</p> Name Type Description Required ready boolean            Ready denotes that the remote cluster is ready to be used. Default: false true"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachine","title":"RemoteMachine","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> Name Type Description Required apiVersion string infrastructure.cluster.x-k8s.io/v1beta1 true kind string RemoteMachine true metadata object Refer to the Kubernetes API documentation for the fields of the `metadata` field. true spec object            RemoteMachineSpec defines the desired state of RemoteMachine false status object            RemoteMachineStatus defines the observed state of RemoteMachine false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespec","title":"RemoteMachine.spec","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>RemoteMachineSpec defines the desired state of RemoteMachine</p> Name Type Description Required address string            Address is the IP address or DNS name of the remote machine. false pool string            Pool is the name of the pool where the machine belongs to. false port integer            Port is the SSH port of the remote machine. Default: 22 false providerID string            ProviderID is the ID of the machine in the provider. false provisionJob object            ProvisionJob describes the kubernetes Job to use to provision the machine. false sshKeyRef object            SSHKeyRef is a reference to a secret that contains the SSH private key. The key must be placed on the secret using the key \"value\". false useSudo boolean false user string            User is the user to use when connecting to the remote machine. Default: root false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjob","title":"RemoteMachine.spec.provisionJob","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>ProvisionJob describes the kubernetes Job to use to provision the machine.</p> Name Type Description Required jobSpecTemplate object            JobTemplate is the job template to use to provision the machine. false scpCommand string Default: scp false sshCommand string Default: ssh false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplate","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>JobTemplate is the job template to use to provision the machine.</p> Name Type Description Required metadata object            Standard object's metadata of the jobs created from this template. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata false spec object            Specification of the desired behavior of the job. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatemetadata","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.metadata","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Standard object's metadata of the jobs created from this template. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata</p> Name Type Description Required annotations map[string]string false finalizers []string false labels map[string]string false name string false namespace string false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespec","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Specification of the desired behavior of the job. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status</p> Name Type Description Required template object            Describes the pod that will be created when executing a job. The only allowed template.spec.restartPolicy values are \"Never\" or \"OnFailure\". More info: https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/ true activeDeadlineSeconds integer            Specifies the duration in seconds relative to the startTime that the job may be continuously active before the system tries to terminate it; value must be positive integer. If a Job is suspended (at creation or through an update), this timer will effectively be stopped and reset when the Job is resumed again. Format: int64 false backoffLimit integer            Specifies the number of retries before marking this job failed. Defaults to 6 Format: int32 false backoffLimitPerIndex integer            Specifies the limit for the number of retries within an index before marking this index as failed. When enabled the number of failures per index is kept in the pod's batch.kubernetes.io/job-index-failure-count annotation. It can only be set when Job's completionMode=Indexed, and the Pod's restart policy is Never. The field is immutable. This field is beta-level. It can be used when the `JobBackoffLimitPerIndex` feature gate is enabled (enabled by default). Format: int32 false completionMode string            completionMode specifies how Pod completions are tracked. It can be `NonIndexed` (default) or `Indexed`.   `NonIndexed` means that the Job is considered complete when there have been .spec.completions successfully completed Pods. Each Pod completion is homologous to each other.   `Indexed` means that the Pods of a Job get an associated completion index from 0 to (.spec.completions - 1), available in the annotation batch.kubernetes.io/job-completion-index. The Job is considered complete when there is one successfully completed Pod for each index. When value is `Indexed`, .spec.completions must be specified and `.spec.parallelism` must be less than or equal to 10^5. In addition, The Pod name takes the form `$(job-name)-$(index)-$(random-string)`, the Pod hostname takes the form `$(job-name)-$(index)`.   More completion modes can be added in the future. If the Job controller observes a mode that it doesn't recognize, which is possible during upgrades due to version skew, the controller skips updates for the Job. false completions integer            Specifies the desired number of successfully finished pods the job should be run with.  Setting to null means that the success of any pod signals the success of all pods, and allows parallelism to have any positive value.  Setting to 1 means that parallelism is limited to 1 and the success of that pod signals the success of the job. More info: https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/ Format: int32 false managedBy string            ManagedBy field indicates the controller that manages a Job. The k8s Job controller reconciles jobs which don't have this field at all or the field value is the reserved string `kubernetes.io/job-controller`, but skips reconciling Jobs with a custom value for this field. The value must be a valid domain-prefixed path (e.g. acme.io/foo) - all characters before the first \"/\" must be a valid subdomain as defined by RFC 1123. All characters trailing the first \"/\" must be valid HTTP Path characters as defined by RFC 3986. The value cannot exceed 64 characters.   This field is alpha-level. The job controller accepts setting the field when the feature gate JobManagedBy is enabled (disabled by default). false manualSelector boolean            manualSelector controls generation of pod labels and pod selectors. Leave `manualSelector` unset unless you are certain what you are doing. When false or unset, the system pick labels unique to this job and appends those labels to the pod template.  When true, the user is responsible for picking unique labels and specifying the selector.  Failure to pick a unique label may cause this and other jobs to not function correctly.  However, You may see `manualSelector=true` in jobs that were created with the old `extensions/v1beta1` API. More info: https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/#specifying-your-own-pod-selector false maxFailedIndexes integer            Specifies the maximal number of failed indexes before marking the Job as failed, when backoffLimitPerIndex is set. Once the number of failed indexes exceeds this number the entire Job is marked as Failed and its execution is terminated. When left as null the job continues execution of all of its indexes and is marked with the `Complete` Job condition. It can only be specified when backoffLimitPerIndex is set. It can be null or up to completions. It is required and must be less than or equal to 10^4 when is completions greater than 10^5. This field is beta-level. It can be used when the `JobBackoffLimitPerIndex` feature gate is enabled (enabled by default). Format: int32 false parallelism integer            Specifies the maximum desired number of pods the job should run at any given time. The actual number of pods running in steady state will be less than this number when ((.spec.completions - .status.successful) &lt; .spec.parallelism), i.e. when the work left to do is less than max parallelism. More info: https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/ Format: int32 false podFailurePolicy object            Specifies the policy of handling failed pods. In particular, it allows to specify the set of actions and conditions which need to be satisfied to take the associated action. If empty, the default behaviour applies - the counter of failed pods, represented by the jobs's .status.failed field, is incremented and it is checked against the backoffLimit. This field cannot be used in combination with restartPolicy=OnFailure.   This field is beta-level. It can be used when the `JobPodFailurePolicy` feature gate is enabled (enabled by default). false podReplacementPolicy string            podReplacementPolicy specifies when to create replacement Pods. Possible values are: - TerminatingOrFailed means that we recreate pods   when they are terminating (has a metadata.deletionTimestamp) or failed. - Failed means to wait until a previously created Pod is fully terminated (has phase   Failed or Succeeded) before creating a replacement Pod.   When using podFailurePolicy, Failed is the the only allowed value. TerminatingOrFailed and Failed are allowed values when podFailurePolicy is not in use. This is an beta field. To use this, enable the JobPodReplacementPolicy feature toggle. This is on by default. false selector object            A label query over pods that should match the pod count. Normally, the system sets this field for you. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors false successPolicy object            successPolicy specifies the policy when the Job can be declared as succeeded. If empty, the default behavior applies - the Job is declared as succeeded only when the number of succeeded pods equals to the completions. When the field is specified, it must be immutable and works only for the Indexed Jobs. Once the Job meets the SuccessPolicy, the lingering pods are terminated.   This field  is alpha-level. To use this field, you must enable the `JobSuccessPolicy` feature gate (disabled by default). false suspend boolean            suspend specifies whether the Job controller should create Pods or not. If a Job is created with suspend set to true, no Pods are created by the Job controller. If a Job is suspended after creation (i.e. the flag goes from false to true), the Job controller will delete all active Pods associated with this Job. Users must design their workload to gracefully handle this. Suspending a Job will reset the StartTime field of the Job, effectively resetting the ActiveDeadlineSeconds timer too. Defaults to false. false ttlSecondsAfterFinished integer            ttlSecondsAfterFinished limits the lifetime of a Job that has finished execution (either Complete or Failed). If this field is set, ttlSecondsAfterFinished after the Job finishes, it is eligible to be automatically deleted. When the Job is being deleted, its lifecycle guarantees (e.g. finalizers) will be honored. If this field is unset, the Job won't be automatically deleted. If this field is set to zero, the Job becomes eligible to be deleted immediately after it finishes. Format: int32 false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplate","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Describes the pod that will be created when executing a job. The only allowed template.spec.restartPolicy values are \"Never\" or \"OnFailure\". More info: https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/</p> Name Type Description Required metadata object            Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata false spec object            Specification of the desired behavior of the pod. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatemetadata","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.metadata","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata</p> Name Type Description Required annotations map[string]string false finalizers []string false labels map[string]string false name string false namespace string false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespec","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Specification of the desired behavior of the pod. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status</p> Name Type Description Required containers []object            List of containers belonging to the pod. Containers cannot currently be added or removed. There must be at least one container in a Pod. Cannot be updated. true activeDeadlineSeconds integer            Optional duration in seconds the pod may be active on the node relative to StartTime before the system will actively try to mark it failed and kill associated containers. Value must be a positive integer. Format: int64 false affinity object            If specified, the pod's scheduling constraints false automountServiceAccountToken boolean            AutomountServiceAccountToken indicates whether a service account token should be automatically mounted. false dnsConfig object            Specifies the DNS parameters of a pod. Parameters specified here will be merged to the generated DNS configuration based on DNSPolicy. false dnsPolicy string            Set DNS policy for the pod. Defaults to \"ClusterFirst\". Valid values are 'ClusterFirstWithHostNet', 'ClusterFirst', 'Default' or 'None'. DNS parameters given in DNSConfig will be merged with the policy selected with DNSPolicy. To have DNS options set along with hostNetwork, you have to specify DNS policy explicitly to 'ClusterFirstWithHostNet'. false enableServiceLinks boolean            EnableServiceLinks indicates whether information about services should be injected into pod's environment variables, matching the syntax of Docker links. Optional: Defaults to true. false ephemeralContainers []object            List of ephemeral containers run in this pod. Ephemeral containers may be run in an existing pod to perform user-initiated actions such as debugging. This list cannot be specified when creating a pod, and it cannot be modified by updating the pod spec. In order to add an ephemeral container to an existing pod, use the pod's ephemeralcontainers subresource. false hostAliases []object            HostAliases is an optional list of hosts and IPs that will be injected into the pod's hosts file if specified. false hostIPC boolean            Use the host's ipc namespace. Optional: Default to false. false hostNetwork boolean            Host networking requested for this pod. Use the host's network namespace. If this option is set, the ports that will be used must be specified. Default to false. false hostPID boolean            Use the host's pid namespace. Optional: Default to false. false hostUsers boolean            Use the host's user namespace. Optional: Default to true. If set to true or not present, the pod will be run in the host user namespace, useful for when the pod needs a feature only available to the host user namespace, such as loading a kernel module with CAP_SYS_MODULE. When set to false, a new userns is created for the pod. Setting false is useful for mitigating container breakout vulnerabilities even allowing users to run their containers as root without actually having root privileges on the host. This field is alpha-level and is only honored by servers that enable the UserNamespacesSupport feature. false hostname string            Specifies the hostname of the Pod If not specified, the pod's hostname will be set to a system-defined value. false imagePullSecrets []object            ImagePullSecrets is an optional list of references to secrets in the same namespace to use for pulling any of the images used by this PodSpec. If specified, these secrets will be passed to individual puller implementations for them to use. More info: https://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod false initContainers []object            List of initialization containers belonging to the pod. Init containers are executed in order prior to containers being started. If any init container fails, the pod is considered to have failed and is handled according to its restartPolicy. The name for an init container or normal container must be unique among all containers. Init containers may not have Lifecycle actions, Readiness probes, Liveness probes, or Startup probes. The resourceRequirements of an init container are taken into account during scheduling by finding the highest request/limit for each resource type, and then using the max of of that value or the sum of the normal containers. Limits are applied to init containers in a similar fashion. Init containers cannot currently be added or removed. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/ false nodeName string            NodeName is a request to schedule this pod onto a specific node. If it is non-empty, the scheduler simply schedules this pod onto that node, assuming that it fits resource requirements. false nodeSelector map[string]string            NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/ false os object            Specifies the OS of the containers in the pod. Some pod and container fields are restricted if this is set.   If the OS field is set to linux, the following fields must be unset: -securityContext.windowsOptions   If the OS field is set to windows, following fields must be unset: - spec.hostPID - spec.hostIPC - spec.hostUsers - spec.securityContext.appArmorProfile - spec.securityContext.seLinuxOptions - spec.securityContext.seccompProfile - spec.securityContext.fsGroup - spec.securityContext.fsGroupChangePolicy - spec.securityContext.sysctls - spec.shareProcessNamespace - spec.securityContext.runAsUser - spec.securityContext.runAsGroup - spec.securityContext.supplementalGroups - spec.containers[*].securityContext.appArmorProfile - spec.containers[*].securityContext.seLinuxOptions - spec.containers[*].securityContext.seccompProfile - spec.containers[*].securityContext.capabilities - spec.containers[*].securityContext.readOnlyRootFilesystem - spec.containers[*].securityContext.privileged - spec.containers[*].securityContext.allowPrivilegeEscalation - spec.containers[*].securityContext.procMount - spec.containers[*].securityContext.runAsUser - spec.containers[*].securityContext.runAsGroup false overhead map[string]int or string            Overhead represents the resource overhead associated with running a pod for a given RuntimeClass. This field will be autopopulated at admission time by the RuntimeClass admission controller. If the RuntimeClass admission controller is enabled, overhead must not be set in Pod create requests. The RuntimeClass admission controller will reject Pod create requests which have the overhead already set. If RuntimeClass is configured and selected in the PodSpec, Overhead will be set to the value defined in the corresponding RuntimeClass, otherwise it will remain unset and treated as zero. More info: https://git.k8s.io/enhancements/keps/sig-node/688-pod-overhead/README.md false preemptionPolicy string            PreemptionPolicy is the Policy for preempting pods with lower priority. One of Never, PreemptLowerPriority. Defaults to PreemptLowerPriority if unset. false priority integer            The priority value. Various system components use this field to find the priority of the pod. When Priority Admission Controller is enabled, it prevents users from setting this field. The admission controller populates this field from PriorityClassName. The higher the value, the higher the priority. Format: int32 false priorityClassName string            If specified, indicates the pod's priority. \"system-node-critical\" and \"system-cluster-critical\" are two special keywords which indicate the highest priorities with the former being the highest priority. Any other name must be defined by creating a PriorityClass object with that name. If not specified, the pod priority will be default or zero if there is no default. false readinessGates []object            If specified, all readiness gates will be evaluated for pod readiness. A pod is ready when all its containers are ready AND all conditions specified in the readiness gates have status equal to \"True\" More info: https://git.k8s.io/enhancements/keps/sig-network/580-pod-readiness-gates false resourceClaims []object            ResourceClaims defines which ResourceClaims must be allocated and reserved before the Pod is allowed to start. The resources will be made available to those containers which consume them by name.   This is an alpha field and requires enabling the DynamicResourceAllocation feature gate.   This field is immutable. false restartPolicy string            Restart policy for all containers within the pod. One of Always, OnFailure, Never. In some contexts, only a subset of those values may be permitted. Default to Always. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#restart-policy false runtimeClassName string            RuntimeClassName refers to a RuntimeClass object in the node.k8s.io group, which should be used to run this pod.  If no RuntimeClass resource matches the named class, the pod will not be run. If unset or empty, the \"legacy\" RuntimeClass will be used, which is an implicit class with an empty definition that uses the default runtime handler. More info: https://git.k8s.io/enhancements/keps/sig-node/585-runtime-class false schedulerName string            If specified, the pod will be dispatched by specified scheduler. If not specified, the pod will be dispatched by default scheduler. false schedulingGates []object            SchedulingGates is an opaque list of values that if specified will block scheduling the pod. If schedulingGates is not empty, the pod will stay in the SchedulingGated state and the scheduler will not attempt to schedule the pod.   SchedulingGates can only be set at pod creation time, and be removed only afterwards. false securityContext object            SecurityContext holds pod-level security attributes and common container settings. Optional: Defaults to empty.  See type description for default values of each field. false serviceAccount string            DeprecatedServiceAccount is a deprecated alias for ServiceAccountName. Deprecated: Use serviceAccountName instead. false serviceAccountName string            ServiceAccountName is the name of the ServiceAccount to use to run this pod. More info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/ false setHostnameAsFQDN boolean            If true the pod's hostname will be configured as the pod's FQDN, rather than the leaf name (the default). In Linux containers, this means setting the FQDN in the hostname field of the kernel (the nodename field of struct utsname). In Windows containers, this means setting the registry value of hostname for the registry key HKEY_LOCAL_MACHINE\\\\SYSTEM\\\\CurrentControlSet\\\\Services\\\\Tcpip\\\\Parameters to FQDN. If a pod does not have FQDN, this has no effect. Default to false. false shareProcessNamespace boolean            Share a single process namespace between all of the containers in a pod. When this is set containers will be able to view and signal processes from other containers in the same pod, and the first process in each container will not be assigned PID 1. HostPID and ShareProcessNamespace cannot both be set. Optional: Default to false. false subdomain string            If specified, the fully qualified Pod hostname will be \"...svc.\". If not specified, the pod will not have a domainname at all. false terminationGracePeriodSeconds integer            Optional duration in seconds the pod needs to terminate gracefully. May be decreased in delete request. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). If this value is nil, the default grace period will be used instead. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. Defaults to 30 seconds. Format: int64 false tolerations []object            If specified, the pod's tolerations. false topologySpreadConstraints []object            TopologySpreadConstraints describes how a group of pods ought to spread across topology domains. Scheduler will schedule pods in a way which abides by the constraints. All topologySpreadConstraints are ANDed. false volumes []object            List of volumes that can be mounted by containers belonging to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespeccontainersindex","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.containers[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>A single application container that you want to run within a pod.</p> Name Type Description Required name string            Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated. true args []string            Arguments to the entrypoint. The container image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell false command []string            Entrypoint array. Not executed within a shell. The container image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell false env []object            List of environment variables to set in the container. Cannot be updated. false envFrom []object            List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated. false image string            Container image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets. false imagePullPolicy string            Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images false lifecycle object            Actions that the management system should take in response to container lifecycle events. Cannot be updated. false livenessProbe object            Periodic probe of container liveness. Container will be restarted if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes false ports []object            List of ports to expose from the container. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default \"0.0.0.0\" address inside a container will be accessible from the network. Modifying this array with strategic merge patch may corrupt the data. For more information See https://github.com/kubernetes/kubernetes/issues/108255. Cannot be updated. false readinessProbe object            Periodic probe of container service readiness. Container will be removed from service endpoints if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes false resizePolicy []object            Resources resize policy for the container. false resources object            Compute Resources required by this container. Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/ false restartPolicy string            RestartPolicy defines the restart behavior of individual containers in a pod. This field may only be set for init containers, and the only allowed value is \"Always\". For non-init containers or when this field is not specified, the restart behavior is defined by the Pod's restart policy and the container type. Setting the RestartPolicy as \"Always\" for the init container will have the following effect: this init container will be continually restarted on exit until all regular containers have terminated. Once all regular containers have completed, all init containers with restartPolicy \"Always\" will be shut down. This lifecycle differs from normal init containers and is often referred to as a \"sidecar\" container. Although this init container still starts in the init container sequence, it does not wait for the container to complete before proceeding to the next init container. Instead, the next init container starts immediately after this init container is started, or after any startupProbe has successfully completed. false securityContext object            SecurityContext defines the security options the container should be run with. If set, the fields of SecurityContext override the equivalent fields of PodSecurityContext. More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ false startupProbe object            StartupProbe indicates that the Pod has successfully initialized. If specified, no other probes are executed until this completes successfully. If this probe fails, the Pod will be restarted, just as if the livenessProbe failed. This can be used to provide different probe parameters at the beginning of a Pod's lifecycle, when it might take a long time to load data or warm a cache, than during steady-state operation. This cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes false stdin boolean            Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. Default is false. false stdinOnce boolean            Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false false terminationMessagePath string            Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated. false terminationMessagePolicy string            Indicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated. false tty boolean            Whether this container should allocate a TTY for itself, also requires 'stdin' to be true. Default is false. false volumeDevices []object            volumeDevices is the list of block devices to be used by the container. false volumeMounts []object            Pod volumes to mount into the container's filesystem. Cannot be updated. false workingDir string            Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespeccontainersindexenvindex","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.containers[index].env[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>EnvVar represents an environment variable present in a Container.</p> Name Type Description Required name string            Name of the environment variable. Must be a C_IDENTIFIER. true value string            Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to \"\". false valueFrom object            Source for the environment variable's value. Cannot be used if value is not empty. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespeccontainersindexenvindexvaluefrom","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.containers[index].env[index].valueFrom","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Source for the environment variable's value. Cannot be used if value is not empty.</p> Name Type Description Required configMapKeyRef object            Selects a key of a ConfigMap. false fieldRef object            Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['']`, `metadata.annotations['']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs. false resourceFieldRef object            Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported. false secretKeyRef object            Selects a key of a secret in the pod's namespace false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespeccontainersindexenvindexvaluefromconfigmapkeyref","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.containers[index].env[index].valueFrom.configMapKeyRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Selects a key of a ConfigMap.</p> Name Type Description Required key string            The key to select. true name string            Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. TODO: Add other useful fields. apiVersion, kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896. Default:  false optional boolean            Specify whether the ConfigMap or its key must be defined false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespeccontainersindexenvindexvaluefromfieldref","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.containers[index].env[index].valueFrom.fieldRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Selects a field of the pod: supports metadata.name, metadata.namespace, <code>metadata.labels['&lt;KEY&gt;']</code>, <code>metadata.annotations['&lt;KEY&gt;']</code>, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.</p> Name Type Description Required fieldPath string            Path of the field to select in the specified API version. true apiVersion string            Version of the schema the FieldPath is written in terms of, defaults to \"v1\". false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespeccontainersindexenvindexvaluefromresourcefieldref","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.containers[index].env[index].valueFrom.resourceFieldRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.</p> Name Type Description Required resource string            Required: resource to select true containerName string            Container name: required for volumes, optional for env vars false divisor int or string            Specifies the output format of the exposed resources, defaults to \"1\" false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespeccontainersindexenvindexvaluefromsecretkeyref","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.containers[index].env[index].valueFrom.secretKeyRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Selects a key of a secret in the pod's namespace</p> Name Type Description Required key string            The key of the secret to select from.  Must be a valid secret key. true name string            Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. TODO: Add other useful fields. apiVersion, kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896. Default:  false optional boolean            Specify whether the Secret or its key must be defined false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespeccontainersindexenvfromindex","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.containers[index].envFrom[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>EnvFromSource represents the source of a set of ConfigMaps</p> Name Type Description Required configMapRef object            The ConfigMap to select from false prefix string            An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER. false secretRef object            The Secret to select from false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespeccontainersindexenvfromindexconfigmapref","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.containers[index].envFrom[index].configMapRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>The ConfigMap to select from</p> Name Type Description Required name string            Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. TODO: Add other useful fields. apiVersion, kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896. Default:  false optional boolean            Specify whether the ConfigMap must be defined false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespeccontainersindexenvfromindexsecretref","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.containers[index].envFrom[index].secretRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>The Secret to select from</p> Name Type Description Required name string            Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. TODO: Add other useful fields. apiVersion, kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896. Default:  false optional boolean            Specify whether the Secret must be defined false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespeccontainersindexlifecycle","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.containers[index].lifecycle","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Actions that the management system should take in response to container lifecycle events. Cannot be updated.</p> Name Type Description Required postStart object            PostStart is called immediately after a container is created. If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks false preStop object            PreStop is called immediately before a container is terminated due to an API request or management event such as liveness/startup probe failure, preemption, resource contention, etc. The handler is not called if the container crashes or exits. The Pod's termination grace period countdown begins before the PreStop hook is executed. Regardless of the outcome of the handler, the container will eventually terminate within the Pod's termination grace period (unless delayed by finalizers). Other management of the container blocks until the hook completes or until the termination grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespeccontainersindexlifecyclepoststart","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.containers[index].lifecycle.postStart","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>PostStart is called immediately after a container is created. If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks</p> Name Type Description Required exec object            Exec specifies the action to take. false httpGet object            HTTPGet specifies the http request to perform. false sleep object            Sleep represents the duration that the container should sleep before being terminated. false tcpSocket object            Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept for the backward compatibility. There are no validation of this field and lifecycle hooks will fail in runtime when tcp handler is specified. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespeccontainersindexlifecyclepoststartexec","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.containers[index].lifecycle.postStart.exec","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Exec specifies the action to take.</p> Name Type Description Required command []string            Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespeccontainersindexlifecyclepoststarthttpget","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.containers[index].lifecycle.postStart.httpGet","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>HTTPGet specifies the http request to perform.</p> Name Type Description Required port int or string            Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME. true host string            Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead. false httpHeaders []object            Custom headers to set in the request. HTTP allows repeated headers. false path string            Path to access on the HTTP server. false scheme string            Scheme to use for connecting to the host. Defaults to HTTP. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespeccontainersindexlifecyclepoststarthttpgethttpheadersindex","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.containers[index].lifecycle.postStart.httpGet.httpHeaders[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>HTTPHeader describes a custom header to be used in HTTP probes</p> Name Type Description Required name string            The header field name. This will be canonicalized upon output, so case-variant names will be understood as the same header. true value string            The header field value true"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespeccontainersindexlifecyclepoststartsleep","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.containers[index].lifecycle.postStart.sleep","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Sleep represents the duration that the container should sleep before being terminated.</p> Name Type Description Required seconds integer            Seconds is the number of seconds to sleep. Format: int64 true"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespeccontainersindexlifecyclepoststarttcpsocket","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.containers[index].lifecycle.postStart.tcpSocket","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept for the backward compatibility. There are no validation of this field and lifecycle hooks will fail in runtime when tcp handler is specified.</p> Name Type Description Required port int or string            Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME. true host string            Optional: Host name to connect to, defaults to the pod IP. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespeccontainersindexlifecycleprestop","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.containers[index].lifecycle.preStop","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>PreStop is called immediately before a container is terminated due to an API request or management event such as liveness/startup probe failure, preemption, resource contention, etc. The handler is not called if the container crashes or exits. The Pod's termination grace period countdown begins before the PreStop hook is executed. Regardless of the outcome of the handler, the container will eventually terminate within the Pod's termination grace period (unless delayed by finalizers). Other management of the container blocks until the hook completes or until the termination grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks</p> Name Type Description Required exec object            Exec specifies the action to take. false httpGet object            HTTPGet specifies the http request to perform. false sleep object            Sleep represents the duration that the container should sleep before being terminated. false tcpSocket object            Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept for the backward compatibility. There are no validation of this field and lifecycle hooks will fail in runtime when tcp handler is specified. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespeccontainersindexlifecycleprestopexec","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.containers[index].lifecycle.preStop.exec","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Exec specifies the action to take.</p> Name Type Description Required command []string            Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespeccontainersindexlifecycleprestophttpget","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.containers[index].lifecycle.preStop.httpGet","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>HTTPGet specifies the http request to perform.</p> Name Type Description Required port int or string            Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME. true host string            Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead. false httpHeaders []object            Custom headers to set in the request. HTTP allows repeated headers. false path string            Path to access on the HTTP server. false scheme string            Scheme to use for connecting to the host. Defaults to HTTP. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespeccontainersindexlifecycleprestophttpgethttpheadersindex","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.containers[index].lifecycle.preStop.httpGet.httpHeaders[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>HTTPHeader describes a custom header to be used in HTTP probes</p> Name Type Description Required name string            The header field name. This will be canonicalized upon output, so case-variant names will be understood as the same header. true value string            The header field value true"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespeccontainersindexlifecycleprestopsleep","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.containers[index].lifecycle.preStop.sleep","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Sleep represents the duration that the container should sleep before being terminated.</p> Name Type Description Required seconds integer            Seconds is the number of seconds to sleep. Format: int64 true"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespeccontainersindexlifecycleprestoptcpsocket","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.containers[index].lifecycle.preStop.tcpSocket","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept for the backward compatibility. There are no validation of this field and lifecycle hooks will fail in runtime when tcp handler is specified.</p> Name Type Description Required port int or string            Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME. true host string            Optional: Host name to connect to, defaults to the pod IP. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespeccontainersindexlivenessprobe","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.containers[index].livenessProbe","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Periodic probe of container liveness. Container will be restarted if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes</p> Name Type Description Required exec object            Exec specifies the action to take. false failureThreshold integer            Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1. Format: int32 false grpc object            GRPC specifies an action involving a GRPC port. false httpGet object            HTTPGet specifies the http request to perform. false initialDelaySeconds integer            Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes Format: int32 false periodSeconds integer            How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1. Format: int32 false successThreshold integer            Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1. Format: int32 false tcpSocket object            TCPSocket specifies an action involving a TCP port. false terminationGracePeriodSeconds integer            Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset. Format: int64 false timeoutSeconds integer            Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes Format: int32 false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespeccontainersindexlivenessprobeexec","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.containers[index].livenessProbe.exec","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Exec specifies the action to take.</p> Name Type Description Required command []string            Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespeccontainersindexlivenessprobegrpc","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.containers[index].livenessProbe.grpc","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>GRPC specifies an action involving a GRPC port.</p> Name Type Description Required port integer            Port number of the gRPC service. Number must be in the range 1 to 65535. Format: int32 true service string            Service is the name of the service to place in the gRPC HealthCheckRequest (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).   If this is not specified, the default behavior is defined by gRPC. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespeccontainersindexlivenessprobehttpget","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.containers[index].livenessProbe.httpGet","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>HTTPGet specifies the http request to perform.</p> Name Type Description Required port int or string            Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME. true host string            Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead. false httpHeaders []object            Custom headers to set in the request. HTTP allows repeated headers. false path string            Path to access on the HTTP server. false scheme string            Scheme to use for connecting to the host. Defaults to HTTP. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespeccontainersindexlivenessprobehttpgethttpheadersindex","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.containers[index].livenessProbe.httpGet.httpHeaders[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>HTTPHeader describes a custom header to be used in HTTP probes</p> Name Type Description Required name string            The header field name. This will be canonicalized upon output, so case-variant names will be understood as the same header. true value string            The header field value true"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespeccontainersindexlivenessprobetcpsocket","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.containers[index].livenessProbe.tcpSocket","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>TCPSocket specifies an action involving a TCP port.</p> Name Type Description Required port int or string            Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME. true host string            Optional: Host name to connect to, defaults to the pod IP. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespeccontainersindexportsindex","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.containers[index].ports[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>ContainerPort represents a network port in a single container.</p> Name Type Description Required containerPort integer            Number of port to expose on the pod's IP address. This must be a valid port number, 0 &lt; x &lt; 65536. Format: int32 true hostIP string            What host IP to bind the external port to. false hostPort integer            Number of port to expose on the host. If specified, this must be a valid port number, 0 &lt; x &lt; 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this. Format: int32 false name string            If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services. false protocol string            Protocol for port. Must be UDP, TCP, or SCTP. Defaults to \"TCP\". Default: TCP false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespeccontainersindexreadinessprobe","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.containers[index].readinessProbe","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Periodic probe of container service readiness. Container will be removed from service endpoints if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes</p> Name Type Description Required exec object            Exec specifies the action to take. false failureThreshold integer            Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1. Format: int32 false grpc object            GRPC specifies an action involving a GRPC port. false httpGet object            HTTPGet specifies the http request to perform. false initialDelaySeconds integer            Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes Format: int32 false periodSeconds integer            How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1. Format: int32 false successThreshold integer            Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1. Format: int32 false tcpSocket object            TCPSocket specifies an action involving a TCP port. false terminationGracePeriodSeconds integer            Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset. Format: int64 false timeoutSeconds integer            Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes Format: int32 false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespeccontainersindexreadinessprobeexec","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.containers[index].readinessProbe.exec","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Exec specifies the action to take.</p> Name Type Description Required command []string            Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespeccontainersindexreadinessprobegrpc","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.containers[index].readinessProbe.grpc","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>GRPC specifies an action involving a GRPC port.</p> Name Type Description Required port integer            Port number of the gRPC service. Number must be in the range 1 to 65535. Format: int32 true service string            Service is the name of the service to place in the gRPC HealthCheckRequest (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).   If this is not specified, the default behavior is defined by gRPC. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespeccontainersindexreadinessprobehttpget","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.containers[index].readinessProbe.httpGet","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>HTTPGet specifies the http request to perform.</p> Name Type Description Required port int or string            Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME. true host string            Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead. false httpHeaders []object            Custom headers to set in the request. HTTP allows repeated headers. false path string            Path to access on the HTTP server. false scheme string            Scheme to use for connecting to the host. Defaults to HTTP. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespeccontainersindexreadinessprobehttpgethttpheadersindex","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.containers[index].readinessProbe.httpGet.httpHeaders[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>HTTPHeader describes a custom header to be used in HTTP probes</p> Name Type Description Required name string            The header field name. This will be canonicalized upon output, so case-variant names will be understood as the same header. true value string            The header field value true"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespeccontainersindexreadinessprobetcpsocket","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.containers[index].readinessProbe.tcpSocket","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>TCPSocket specifies an action involving a TCP port.</p> Name Type Description Required port int or string            Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME. true host string            Optional: Host name to connect to, defaults to the pod IP. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespeccontainersindexresizepolicyindex","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.containers[index].resizePolicy[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>ContainerResizePolicy represents resource resize policy for the container.</p> Name Type Description Required resourceName string            Name of the resource to which this resource resize policy applies. Supported values: cpu, memory. true restartPolicy string            Restart policy to apply when specified resource is resized. If not specified, it defaults to NotRequired. true"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespeccontainersindexresources","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.containers[index].resources","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Compute Resources required by this container. Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/</p> Name Type Description Required claims []object            Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container.   This is an alpha field and requires enabling the DynamicResourceAllocation feature gate.   This field is immutable. It can only be set for containers. false limits map[string]int or string            Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/ false requests map[string]int or string            Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/ false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespeccontainersindexresourcesclaimsindex","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.containers[index].resources.claims[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>ResourceClaim references one entry in PodSpec.ResourceClaims.</p> Name Type Description Required name string            Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container. true"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespeccontainersindexsecuritycontext","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.containers[index].securityContext","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>SecurityContext defines the security options the container should be run with. If set, the fields of SecurityContext override the equivalent fields of PodSecurityContext. More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/</p> Name Type Description Required allowPrivilegeEscalation boolean            AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN Note that this field cannot be set when spec.os.name is windows. false appArmorProfile object            appArmorProfile is the AppArmor options to use by this container. If set, this profile overrides the pod's appArmorProfile. Note that this field cannot be set when spec.os.name is windows. false capabilities object            The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime. Note that this field cannot be set when spec.os.name is windows. false privileged boolean            Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false. Note that this field cannot be set when spec.os.name is windows. false procMount string            procMount denotes the type of proc mount to use for the containers. The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled. Note that this field cannot be set when spec.os.name is windows. false readOnlyRootFilesystem boolean            Whether this container has a read-only root filesystem. Default is false. Note that this field cannot be set when spec.os.name is windows. false runAsGroup integer            The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is windows. Format: int64 false runAsNonRoot boolean            Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. false runAsUser integer            The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is windows. Format: int64 false seLinuxOptions object            The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is windows. false seccompProfile object            The seccomp options to use by this container. If seccomp options are provided at both the pod &amp; container level, the container options override the pod options. Note that this field cannot be set when spec.os.name is windows. false windowsOptions object            The Windows specific settings applied to all containers. If unspecified, the options from the PodSecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is linux. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespeccontainersindexsecuritycontextapparmorprofile","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.containers[index].securityContext.appArmorProfile","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>appArmorProfile is the AppArmor options to use by this container. If set, this profile overrides the pod's appArmorProfile. Note that this field cannot be set when spec.os.name is windows.</p> Name Type Description Required type string            type indicates which kind of AppArmor profile will be applied. Valid options are:   Localhost - a profile pre-loaded on the node.   RuntimeDefault - the container runtime's default profile.   Unconfined - no AppArmor enforcement. true localhostProfile string            localhostProfile indicates a profile loaded on the node that should be used. The profile must be preconfigured on the node to work. Must match the loaded name of the profile. Must be set if and only if type is \"Localhost\". false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespeccontainersindexsecuritycontextcapabilities","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.containers[index].securityContext.capabilities","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime. Note that this field cannot be set when spec.os.name is windows.</p> Name Type Description Required add []string            Added capabilities false drop []string            Removed capabilities false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespeccontainersindexsecuritycontextselinuxoptions","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.containers[index].securityContext.seLinuxOptions","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is windows.</p> Name Type Description Required level string            Level is SELinux level label that applies to the container. false role string            Role is a SELinux role label that applies to the container. false type string            Type is a SELinux type label that applies to the container. false user string            User is a SELinux user label that applies to the container. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespeccontainersindexsecuritycontextseccompprofile","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.containers[index].securityContext.seccompProfile","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>The seccomp options to use by this container. If seccomp options are provided at both the pod &amp; container level, the container options override the pod options. Note that this field cannot be set when spec.os.name is windows.</p> Name Type Description Required type string            type indicates which kind of seccomp profile will be applied. Valid options are:   Localhost - a profile defined in a file on the node should be used. RuntimeDefault - the container runtime default profile should be used. Unconfined - no profile should be applied. true localhostProfile string            localhostProfile indicates a profile defined in a file on the node should be used. The profile must be preconfigured on the node to work. Must be a descending path, relative to the kubelet's configured seccomp profile location. Must be set if type is \"Localhost\". Must NOT be set for any other type. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespeccontainersindexsecuritycontextwindowsoptions","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.containers[index].securityContext.windowsOptions","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>The Windows specific settings applied to all containers. If unspecified, the options from the PodSecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is linux.</p> Name Type Description Required gmsaCredentialSpec string            GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field. false gmsaCredentialSpecName string            GMSACredentialSpecName is the name of the GMSA credential spec to use. false hostProcess boolean            HostProcess determines if a container should be run as a 'Host Process' container. All of a Pod's containers must have the same effective HostProcess value (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers). In addition, if HostProcess is true then HostNetwork must also be set to true. false runAsUserName string            The UserName in Windows to run the entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespeccontainersindexstartupprobe","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.containers[index].startupProbe","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>StartupProbe indicates that the Pod has successfully initialized. If specified, no other probes are executed until this completes successfully. If this probe fails, the Pod will be restarted, just as if the livenessProbe failed. This can be used to provide different probe parameters at the beginning of a Pod's lifecycle, when it might take a long time to load data or warm a cache, than during steady-state operation. This cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes</p> Name Type Description Required exec object            Exec specifies the action to take. false failureThreshold integer            Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1. Format: int32 false grpc object            GRPC specifies an action involving a GRPC port. false httpGet object            HTTPGet specifies the http request to perform. false initialDelaySeconds integer            Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes Format: int32 false periodSeconds integer            How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1. Format: int32 false successThreshold integer            Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1. Format: int32 false tcpSocket object            TCPSocket specifies an action involving a TCP port. false terminationGracePeriodSeconds integer            Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset. Format: int64 false timeoutSeconds integer            Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes Format: int32 false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespeccontainersindexstartupprobeexec","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.containers[index].startupProbe.exec","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Exec specifies the action to take.</p> Name Type Description Required command []string            Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespeccontainersindexstartupprobegrpc","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.containers[index].startupProbe.grpc","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>GRPC specifies an action involving a GRPC port.</p> Name Type Description Required port integer            Port number of the gRPC service. Number must be in the range 1 to 65535. Format: int32 true service string            Service is the name of the service to place in the gRPC HealthCheckRequest (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).   If this is not specified, the default behavior is defined by gRPC. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespeccontainersindexstartupprobehttpget","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.containers[index].startupProbe.httpGet","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>HTTPGet specifies the http request to perform.</p> Name Type Description Required port int or string            Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME. true host string            Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead. false httpHeaders []object            Custom headers to set in the request. HTTP allows repeated headers. false path string            Path to access on the HTTP server. false scheme string            Scheme to use for connecting to the host. Defaults to HTTP. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespeccontainersindexstartupprobehttpgethttpheadersindex","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.containers[index].startupProbe.httpGet.httpHeaders[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>HTTPHeader describes a custom header to be used in HTTP probes</p> Name Type Description Required name string            The header field name. This will be canonicalized upon output, so case-variant names will be understood as the same header. true value string            The header field value true"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespeccontainersindexstartupprobetcpsocket","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.containers[index].startupProbe.tcpSocket","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>TCPSocket specifies an action involving a TCP port.</p> Name Type Description Required port int or string            Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME. true host string            Optional: Host name to connect to, defaults to the pod IP. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespeccontainersindexvolumedevicesindex","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.containers[index].volumeDevices[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>volumeDevice describes a mapping of a raw block device within a container.</p> Name Type Description Required devicePath string            devicePath is the path inside of the container that the device will be mapped to. true name string            name must match the name of a persistentVolumeClaim in the pod true"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespeccontainersindexvolumemountsindex","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.containers[index].volumeMounts[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>VolumeMount describes a mounting of a Volume within a container.</p> Name Type Description Required mountPath string            Path within the container at which the volume should be mounted.  Must not contain ':'. true name string            This must match the Name of a Volume. true mountPropagation string            mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10. When RecursiveReadOnly is set to IfPossible or to Enabled, MountPropagation must be None or unspecified (which defaults to None). false readOnly boolean            Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false. false recursiveReadOnly string            RecursiveReadOnly specifies whether read-only mounts should be handled recursively.   If ReadOnly is false, this field has no meaning and must be unspecified.   If ReadOnly is true, and this field is set to Disabled, the mount is not made recursively read-only.  If this field is set to IfPossible, the mount is made recursively read-only, if it is supported by the container runtime.  If this field is set to Enabled, the mount is made recursively read-only if it is supported by the container runtime, otherwise the pod will not be started and an error will be generated to indicate the reason.   If this field is set to IfPossible or Enabled, MountPropagation must be set to None (or be unspecified, which defaults to None).   If this field is not specified, it is treated as an equivalent of Disabled. false subPath string            Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root). false subPathExpr string            Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to \"\" (volume's root). SubPathExpr and SubPath are mutually exclusive. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecaffinity","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.affinity","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>If specified, the pod's scheduling constraints</p> Name Type Description Required nodeAffinity object            Describes node affinity scheduling rules for the pod. false podAffinity object            Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)). false podAntiAffinity object            Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)). false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecaffinitynodeaffinity","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.affinity.nodeAffinity","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Describes node affinity scheduling rules for the pod.</p> Name Type Description Required preferredDuringSchedulingIgnoredDuringExecution []object            The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred. false requiredDuringSchedulingIgnoredDuringExecution object            If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecaffinitynodeaffinitypreferredduringschedulingignoredduringexecutionindex","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).</p> Name Type Description Required preference object            A node selector term, associated with the corresponding weight. true weight integer            Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100. Format: int32 true"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecaffinitynodeaffinitypreferredduringschedulingignoredduringexecutionindexpreference","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[index].preference","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>A node selector term, associated with the corresponding weight.</p> Name Type Description Required matchExpressions []object            A list of node selector requirements by node's labels. false matchFields []object            A list of node selector requirements by node's fields. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecaffinitynodeaffinitypreferredduringschedulingignoredduringexecutionindexpreferencematchexpressionsindex","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[index].preference.matchExpressions[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.</p> Name Type Description Required key string            The label key that the selector applies to. true operator string            Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt. true values []string            An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecaffinitynodeaffinitypreferredduringschedulingignoredduringexecutionindexpreferencematchfieldsindex","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[index].preference.matchFields[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.</p> Name Type Description Required key string            The label key that the selector applies to. true operator string            Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt. true values []string            An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecaffinitynodeaffinityrequiredduringschedulingignoredduringexecution","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.</p> Name Type Description Required nodeSelectorTerms []object            Required. A list of node selector terms. The terms are ORed. true"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecaffinitynodeaffinityrequiredduringschedulingignoredduringexecutionnodeselectortermsindex","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.</p> Name Type Description Required matchExpressions []object            A list of node selector requirements by node's labels. false matchFields []object            A list of node selector requirements by node's fields. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecaffinitynodeaffinityrequiredduringschedulingignoredduringexecutionnodeselectortermsindexmatchexpressionsindex","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[index].matchExpressions[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.</p> Name Type Description Required key string            The label key that the selector applies to. true operator string            Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt. true values []string            An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecaffinitynodeaffinityrequiredduringschedulingignoredduringexecutionnodeselectortermsindexmatchfieldsindex","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[index].matchFields[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.</p> Name Type Description Required key string            The label key that the selector applies to. true operator string            Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt. true values []string            An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecaffinitypodaffinity","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.affinity.podAffinity","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).</p> Name Type Description Required preferredDuringSchedulingIgnoredDuringExecution []object            The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred. false requiredDuringSchedulingIgnoredDuringExecution []object            If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecaffinitypodaffinitypreferredduringschedulingignoredduringexecutionindex","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)</p> Name Type Description Required podAffinityTerm object            Required. A pod affinity term, associated with the corresponding weight. true weight integer            weight associated with matching the corresponding podAffinityTerm, in the range 1-100. Format: int32 true"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecaffinitypodaffinitypreferredduringschedulingignoredduringexecutionindexpodaffinityterm","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[index].podAffinityTerm","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Required. A pod affinity term, associated with the corresponding weight.</p> Name Type Description Required topologyKey string            This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed. true labelSelector object            A label query over a set of resources, in this case pods. If it's null, this PodAffinityTerm matches with no Pods. false matchLabelKeys []string            MatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)` to select the group of existing pods which pods will be taken into consideration for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both matchLabelKeys and labelSelector. Also, matchLabelKeys cannot be set when labelSelector isn't set. This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate. false mismatchLabelKeys []string            MismatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)` to select the group of existing pods which pods will be taken into consideration for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both mismatchLabelKeys and labelSelector. Also, mismatchLabelKeys cannot be set when labelSelector isn't set. This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate. false namespaceSelector object            A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means \"this pod's namespace\". An empty selector ({}) matches all namespaces. false namespaces []string            namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means \"this pod's namespace\". false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecaffinitypodaffinitypreferredduringschedulingignoredduringexecutionindexpodaffinitytermlabelselector","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[index].podAffinityTerm.labelSelector","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>A label query over a set of resources, in this case pods. If it's null, this PodAffinityTerm matches with no Pods.</p> Name Type Description Required matchExpressions []object            matchExpressions is a list of label selector requirements. The requirements are ANDed. false matchLabels map[string]string            matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecaffinitypodaffinitypreferredduringschedulingignoredduringexecutionindexpodaffinitytermlabelselectormatchexpressionsindex","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[index].podAffinityTerm.labelSelector.matchExpressions[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.</p> Name Type Description Required key string            key is the label key that the selector applies to. true operator string            operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist. true values []string            values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecaffinitypodaffinitypreferredduringschedulingignoredduringexecutionindexpodaffinitytermnamespaceselector","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[index].podAffinityTerm.namespaceSelector","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means \"this pod's namespace\". An empty selector ({}) matches all namespaces.</p> Name Type Description Required matchExpressions []object            matchExpressions is a list of label selector requirements. The requirements are ANDed. false matchLabels map[string]string            matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecaffinitypodaffinitypreferredduringschedulingignoredduringexecutionindexpodaffinitytermnamespaceselectormatchexpressionsindex","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[index].podAffinityTerm.namespaceSelector.matchExpressions[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.</p> Name Type Description Required key string            key is the label key that the selector applies to. true operator string            operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist. true values []string            values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecaffinitypodaffinityrequiredduringschedulingignoredduringexecutionindex","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key  matches that of any node on which a pod of the set of pods is running Name Type Description Required topologyKey string            This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed. true labelSelector object            A label query over a set of resources, in this case pods. If it's null, this PodAffinityTerm matches with no Pods. false matchLabelKeys []string            MatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)` to select the group of existing pods which pods will be taken into consideration for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both matchLabelKeys and labelSelector. Also, matchLabelKeys cannot be set when labelSelector isn't set. This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate. false mismatchLabelKeys []string            MismatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)` to select the group of existing pods which pods will be taken into consideration for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both mismatchLabelKeys and labelSelector. Also, mismatchLabelKeys cannot be set when labelSelector isn't set. This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate. false namespaceSelector object            A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means \"this pod's namespace\". An empty selector ({}) matches all namespaces. false namespaces []string            namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means \"this pod's namespace\". false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecaffinitypodaffinityrequiredduringschedulingignoredduringexecutionindexlabelselector","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[index].labelSelector","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>A label query over a set of resources, in this case pods. If it's null, this PodAffinityTerm matches with no Pods.</p> Name Type Description Required matchExpressions []object            matchExpressions is a list of label selector requirements. The requirements are ANDed. false matchLabels map[string]string            matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecaffinitypodaffinityrequiredduringschedulingignoredduringexecutionindexlabelselectormatchexpressionsindex","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[index].labelSelector.matchExpressions[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.</p> Name Type Description Required key string            key is the label key that the selector applies to. true operator string            operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist. true values []string            values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecaffinitypodaffinityrequiredduringschedulingignoredduringexecutionindexnamespaceselector","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[index].namespaceSelector","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means \"this pod's namespace\". An empty selector ({}) matches all namespaces.</p> Name Type Description Required matchExpressions []object            matchExpressions is a list of label selector requirements. The requirements are ANDed. false matchLabels map[string]string            matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecaffinitypodaffinityrequiredduringschedulingignoredduringexecutionindexnamespaceselectormatchexpressionsindex","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[index].namespaceSelector.matchExpressions[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.</p> Name Type Description Required key string            key is the label key that the selector applies to. true operator string            operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist. true values []string            values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecaffinitypodantiaffinity","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.affinity.podAntiAffinity","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).</p> Name Type Description Required preferredDuringSchedulingIgnoredDuringExecution []object            The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred. false requiredDuringSchedulingIgnoredDuringExecution []object            If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionindex","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)</p> Name Type Description Required podAffinityTerm object            Required. A pod affinity term, associated with the corresponding weight. true weight integer            weight associated with matching the corresponding podAffinityTerm, in the range 1-100. Format: int32 true"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionindexpodaffinityterm","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[index].podAffinityTerm","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Required. A pod affinity term, associated with the corresponding weight.</p> Name Type Description Required topologyKey string            This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed. true labelSelector object            A label query over a set of resources, in this case pods. If it's null, this PodAffinityTerm matches with no Pods. false matchLabelKeys []string            MatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)` to select the group of existing pods which pods will be taken into consideration for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both matchLabelKeys and labelSelector. Also, matchLabelKeys cannot be set when labelSelector isn't set. This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate. false mismatchLabelKeys []string            MismatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)` to select the group of existing pods which pods will be taken into consideration for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both mismatchLabelKeys and labelSelector. Also, mismatchLabelKeys cannot be set when labelSelector isn't set. This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate. false namespaceSelector object            A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means \"this pod's namespace\". An empty selector ({}) matches all namespaces. false namespaces []string            namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means \"this pod's namespace\". false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionindexpodaffinitytermlabelselector","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[index].podAffinityTerm.labelSelector","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>A label query over a set of resources, in this case pods. If it's null, this PodAffinityTerm matches with no Pods.</p> Name Type Description Required matchExpressions []object            matchExpressions is a list of label selector requirements. The requirements are ANDed. false matchLabels map[string]string            matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionindexpodaffinitytermlabelselectormatchexpressionsindex","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[index].podAffinityTerm.labelSelector.matchExpressions[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.</p> Name Type Description Required key string            key is the label key that the selector applies to. true operator string            operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist. true values []string            values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionindexpodaffinitytermnamespaceselector","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[index].podAffinityTerm.namespaceSelector","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means \"this pod's namespace\". An empty selector ({}) matches all namespaces.</p> Name Type Description Required matchExpressions []object            matchExpressions is a list of label selector requirements. The requirements are ANDed. false matchLabels map[string]string            matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecaffinitypodantiaffinitypreferredduringschedulingignoredduringexecutionindexpodaffinitytermnamespaceselectormatchexpressionsindex","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[index].podAffinityTerm.namespaceSelector.matchExpressions[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.</p> Name Type Description Required key string            key is the label key that the selector applies to. true operator string            operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist. true values []string            values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecaffinitypodantiaffinityrequiredduringschedulingignoredduringexecutionindex","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key  matches that of any node on which a pod of the set of pods is running Name Type Description Required topologyKey string            This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed. true labelSelector object            A label query over a set of resources, in this case pods. If it's null, this PodAffinityTerm matches with no Pods. false matchLabelKeys []string            MatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)` to select the group of existing pods which pods will be taken into consideration for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both matchLabelKeys and labelSelector. Also, matchLabelKeys cannot be set when labelSelector isn't set. This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate. false mismatchLabelKeys []string            MismatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)` to select the group of existing pods which pods will be taken into consideration for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both mismatchLabelKeys and labelSelector. Also, mismatchLabelKeys cannot be set when labelSelector isn't set. This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate. false namespaceSelector object            A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means \"this pod's namespace\". An empty selector ({}) matches all namespaces. false namespaces []string            namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means \"this pod's namespace\". false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecaffinitypodantiaffinityrequiredduringschedulingignoredduringexecutionindexlabelselector","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[index].labelSelector","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>A label query over a set of resources, in this case pods. If it's null, this PodAffinityTerm matches with no Pods.</p> Name Type Description Required matchExpressions []object            matchExpressions is a list of label selector requirements. The requirements are ANDed. false matchLabels map[string]string            matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecaffinitypodantiaffinityrequiredduringschedulingignoredduringexecutionindexlabelselectormatchexpressionsindex","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[index].labelSelector.matchExpressions[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.</p> Name Type Description Required key string            key is the label key that the selector applies to. true operator string            operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist. true values []string            values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecaffinitypodantiaffinityrequiredduringschedulingignoredduringexecutionindexnamespaceselector","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[index].namespaceSelector","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means \"this pod's namespace\". An empty selector ({}) matches all namespaces.</p> Name Type Description Required matchExpressions []object            matchExpressions is a list of label selector requirements. The requirements are ANDed. false matchLabels map[string]string            matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecaffinitypodantiaffinityrequiredduringschedulingignoredduringexecutionindexnamespaceselectormatchexpressionsindex","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[index].namespaceSelector.matchExpressions[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.</p> Name Type Description Required key string            key is the label key that the selector applies to. true operator string            operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist. true values []string            values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecdnsconfig","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.dnsConfig","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Specifies the DNS parameters of a pod. Parameters specified here will be merged to the generated DNS configuration based on DNSPolicy.</p> Name Type Description Required nameservers []string            A list of DNS name server IP addresses. This will be appended to the base nameservers generated from DNSPolicy. Duplicated nameservers will be removed. false options []object            A list of DNS resolver options. This will be merged with the base options generated from DNSPolicy. Duplicated entries will be removed. Resolution options given in Options will override those that appear in the base DNSPolicy. false searches []string            A list of DNS search domains for host-name lookup. This will be appended to the base search paths generated from DNSPolicy. Duplicated search paths will be removed. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecdnsconfigoptionsindex","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.dnsConfig.options[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>PodDNSConfigOption defines DNS resolver options of a pod.</p> Name Type Description Required name string            Required. false value string false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecephemeralcontainersindex","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.ephemeralContainers[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>An EphemeralContainer is a temporary container that you may add to an existing Pod for user-initiated activities such as debugging. Ephemeral containers have no resource or scheduling guarantees, and they will not be restarted when they exit or when a Pod is removed or restarted. The kubelet may evict a Pod if an ephemeral container causes the Pod to exceed its resource allocation.</p> <p>To add an ephemeral container, use the ephemeralcontainers subresource of an existing Pod. Ephemeral containers may not be removed or restarted.</p> Name Type Description Required name string            Name of the ephemeral container specified as a DNS_LABEL. This name must be unique among all containers, init containers and ephemeral containers. true args []string            Arguments to the entrypoint. The image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell false command []string            Entrypoint array. Not executed within a shell. The image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell false env []object            List of environment variables to set in the container. Cannot be updated. false envFrom []object            List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated. false image string            Container image name. More info: https://kubernetes.io/docs/concepts/containers/images false imagePullPolicy string            Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images false lifecycle object            Lifecycle is not allowed for ephemeral containers. false livenessProbe object            Probes are not allowed for ephemeral containers. false ports []object            Ports are not allowed for ephemeral containers. false readinessProbe object            Probes are not allowed for ephemeral containers. false resizePolicy []object            Resources resize policy for the container. false resources object            Resources are not allowed for ephemeral containers. Ephemeral containers use spare resources already allocated to the pod. false restartPolicy string            Restart policy for the container to manage the restart behavior of each container within a pod. This may only be set for init containers. You cannot set this field on ephemeral containers. false securityContext object            Optional: SecurityContext defines the security options the ephemeral container should be run with. If set, the fields of SecurityContext override the equivalent fields of PodSecurityContext. false startupProbe object            Probes are not allowed for ephemeral containers. false stdin boolean            Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. Default is false. false stdinOnce boolean            Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false false targetContainerName string            If set, the name of the container from PodSpec that this ephemeral container targets. The ephemeral container will be run in the namespaces (IPC, PID, etc) of this container. If not set then the ephemeral container uses the namespaces configured in the Pod spec.   The container runtime must implement support for this feature. If the runtime does not support namespace targeting then the result of setting this field is undefined. false terminationMessagePath string            Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated. false terminationMessagePolicy string            Indicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated. false tty boolean            Whether this container should allocate a TTY for itself, also requires 'stdin' to be true. Default is false. false volumeDevices []object            volumeDevices is the list of block devices to be used by the container. false volumeMounts []object            Pod volumes to mount into the container's filesystem. Subpath mounts are not allowed for ephemeral containers. Cannot be updated. false workingDir string            Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecephemeralcontainersindexenvindex","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.ephemeralContainers[index].env[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>EnvVar represents an environment variable present in a Container.</p> Name Type Description Required name string            Name of the environment variable. Must be a C_IDENTIFIER. true value string            Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to \"\". false valueFrom object            Source for the environment variable's value. Cannot be used if value is not empty. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecephemeralcontainersindexenvindexvaluefrom","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.ephemeralContainers[index].env[index].valueFrom","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Source for the environment variable's value. Cannot be used if value is not empty.</p> Name Type Description Required configMapKeyRef object            Selects a key of a ConfigMap. false fieldRef object            Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['']`, `metadata.annotations['']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs. false resourceFieldRef object            Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported. false secretKeyRef object            Selects a key of a secret in the pod's namespace false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecephemeralcontainersindexenvindexvaluefromconfigmapkeyref","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.ephemeralContainers[index].env[index].valueFrom.configMapKeyRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Selects a key of a ConfigMap.</p> Name Type Description Required key string            The key to select. true name string            Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. TODO: Add other useful fields. apiVersion, kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896. Default:  false optional boolean            Specify whether the ConfigMap or its key must be defined false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecephemeralcontainersindexenvindexvaluefromfieldref","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.ephemeralContainers[index].env[index].valueFrom.fieldRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Selects a field of the pod: supports metadata.name, metadata.namespace, <code>metadata.labels['&lt;KEY&gt;']</code>, <code>metadata.annotations['&lt;KEY&gt;']</code>, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.</p> Name Type Description Required fieldPath string            Path of the field to select in the specified API version. true apiVersion string            Version of the schema the FieldPath is written in terms of, defaults to \"v1\". false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecephemeralcontainersindexenvindexvaluefromresourcefieldref","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.ephemeralContainers[index].env[index].valueFrom.resourceFieldRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.</p> Name Type Description Required resource string            Required: resource to select true containerName string            Container name: required for volumes, optional for env vars false divisor int or string            Specifies the output format of the exposed resources, defaults to \"1\" false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecephemeralcontainersindexenvindexvaluefromsecretkeyref","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.ephemeralContainers[index].env[index].valueFrom.secretKeyRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Selects a key of a secret in the pod's namespace</p> Name Type Description Required key string            The key of the secret to select from.  Must be a valid secret key. true name string            Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. TODO: Add other useful fields. apiVersion, kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896. Default:  false optional boolean            Specify whether the Secret or its key must be defined false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecephemeralcontainersindexenvfromindex","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.ephemeralContainers[index].envFrom[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>EnvFromSource represents the source of a set of ConfigMaps</p> Name Type Description Required configMapRef object            The ConfigMap to select from false prefix string            An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER. false secretRef object            The Secret to select from false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecephemeralcontainersindexenvfromindexconfigmapref","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.ephemeralContainers[index].envFrom[index].configMapRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>The ConfigMap to select from</p> Name Type Description Required name string            Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. TODO: Add other useful fields. apiVersion, kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896. Default:  false optional boolean            Specify whether the ConfigMap must be defined false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecephemeralcontainersindexenvfromindexsecretref","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.ephemeralContainers[index].envFrom[index].secretRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>The Secret to select from</p> Name Type Description Required name string            Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. TODO: Add other useful fields. apiVersion, kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896. Default:  false optional boolean            Specify whether the Secret must be defined false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecephemeralcontainersindexlifecycle","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.ephemeralContainers[index].lifecycle","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Lifecycle is not allowed for ephemeral containers.</p> Name Type Description Required postStart object            PostStart is called immediately after a container is created. If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks false preStop object            PreStop is called immediately before a container is terminated due to an API request or management event such as liveness/startup probe failure, preemption, resource contention, etc. The handler is not called if the container crashes or exits. The Pod's termination grace period countdown begins before the PreStop hook is executed. Regardless of the outcome of the handler, the container will eventually terminate within the Pod's termination grace period (unless delayed by finalizers). Other management of the container blocks until the hook completes or until the termination grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecephemeralcontainersindexlifecyclepoststart","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.ephemeralContainers[index].lifecycle.postStart","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>PostStart is called immediately after a container is created. If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks</p> Name Type Description Required exec object            Exec specifies the action to take. false httpGet object            HTTPGet specifies the http request to perform. false sleep object            Sleep represents the duration that the container should sleep before being terminated. false tcpSocket object            Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept for the backward compatibility. There are no validation of this field and lifecycle hooks will fail in runtime when tcp handler is specified. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecephemeralcontainersindexlifecyclepoststartexec","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.ephemeralContainers[index].lifecycle.postStart.exec","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Exec specifies the action to take.</p> Name Type Description Required command []string            Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecephemeralcontainersindexlifecyclepoststarthttpget","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.ephemeralContainers[index].lifecycle.postStart.httpGet","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>HTTPGet specifies the http request to perform.</p> Name Type Description Required port int or string            Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME. true host string            Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead. false httpHeaders []object            Custom headers to set in the request. HTTP allows repeated headers. false path string            Path to access on the HTTP server. false scheme string            Scheme to use for connecting to the host. Defaults to HTTP. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecephemeralcontainersindexlifecyclepoststarthttpgethttpheadersindex","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.ephemeralContainers[index].lifecycle.postStart.httpGet.httpHeaders[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>HTTPHeader describes a custom header to be used in HTTP probes</p> Name Type Description Required name string            The header field name. This will be canonicalized upon output, so case-variant names will be understood as the same header. true value string            The header field value true"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecephemeralcontainersindexlifecyclepoststartsleep","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.ephemeralContainers[index].lifecycle.postStart.sleep","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Sleep represents the duration that the container should sleep before being terminated.</p> Name Type Description Required seconds integer            Seconds is the number of seconds to sleep. Format: int64 true"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecephemeralcontainersindexlifecyclepoststarttcpsocket","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.ephemeralContainers[index].lifecycle.postStart.tcpSocket","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept for the backward compatibility. There are no validation of this field and lifecycle hooks will fail in runtime when tcp handler is specified.</p> Name Type Description Required port int or string            Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME. true host string            Optional: Host name to connect to, defaults to the pod IP. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecephemeralcontainersindexlifecycleprestop","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.ephemeralContainers[index].lifecycle.preStop","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>PreStop is called immediately before a container is terminated due to an API request or management event such as liveness/startup probe failure, preemption, resource contention, etc. The handler is not called if the container crashes or exits. The Pod's termination grace period countdown begins before the PreStop hook is executed. Regardless of the outcome of the handler, the container will eventually terminate within the Pod's termination grace period (unless delayed by finalizers). Other management of the container blocks until the hook completes or until the termination grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks</p> Name Type Description Required exec object            Exec specifies the action to take. false httpGet object            HTTPGet specifies the http request to perform. false sleep object            Sleep represents the duration that the container should sleep before being terminated. false tcpSocket object            Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept for the backward compatibility. There are no validation of this field and lifecycle hooks will fail in runtime when tcp handler is specified. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecephemeralcontainersindexlifecycleprestopexec","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.ephemeralContainers[index].lifecycle.preStop.exec","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Exec specifies the action to take.</p> Name Type Description Required command []string            Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecephemeralcontainersindexlifecycleprestophttpget","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.ephemeralContainers[index].lifecycle.preStop.httpGet","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>HTTPGet specifies the http request to perform.</p> Name Type Description Required port int or string            Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME. true host string            Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead. false httpHeaders []object            Custom headers to set in the request. HTTP allows repeated headers. false path string            Path to access on the HTTP server. false scheme string            Scheme to use for connecting to the host. Defaults to HTTP. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecephemeralcontainersindexlifecycleprestophttpgethttpheadersindex","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.ephemeralContainers[index].lifecycle.preStop.httpGet.httpHeaders[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>HTTPHeader describes a custom header to be used in HTTP probes</p> Name Type Description Required name string            The header field name. This will be canonicalized upon output, so case-variant names will be understood as the same header. true value string            The header field value true"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecephemeralcontainersindexlifecycleprestopsleep","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.ephemeralContainers[index].lifecycle.preStop.sleep","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Sleep represents the duration that the container should sleep before being terminated.</p> Name Type Description Required seconds integer            Seconds is the number of seconds to sleep. Format: int64 true"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecephemeralcontainersindexlifecycleprestoptcpsocket","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.ephemeralContainers[index].lifecycle.preStop.tcpSocket","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept for the backward compatibility. There are no validation of this field and lifecycle hooks will fail in runtime when tcp handler is specified.</p> Name Type Description Required port int or string            Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME. true host string            Optional: Host name to connect to, defaults to the pod IP. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecephemeralcontainersindexlivenessprobe","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.ephemeralContainers[index].livenessProbe","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Probes are not allowed for ephemeral containers.</p> Name Type Description Required exec object            Exec specifies the action to take. false failureThreshold integer            Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1. Format: int32 false grpc object            GRPC specifies an action involving a GRPC port. false httpGet object            HTTPGet specifies the http request to perform. false initialDelaySeconds integer            Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes Format: int32 false periodSeconds integer            How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1. Format: int32 false successThreshold integer            Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1. Format: int32 false tcpSocket object            TCPSocket specifies an action involving a TCP port. false terminationGracePeriodSeconds integer            Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset. Format: int64 false timeoutSeconds integer            Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes Format: int32 false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecephemeralcontainersindexlivenessprobeexec","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.ephemeralContainers[index].livenessProbe.exec","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Exec specifies the action to take.</p> Name Type Description Required command []string            Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecephemeralcontainersindexlivenessprobegrpc","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.ephemeralContainers[index].livenessProbe.grpc","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>GRPC specifies an action involving a GRPC port.</p> Name Type Description Required port integer            Port number of the gRPC service. Number must be in the range 1 to 65535. Format: int32 true service string            Service is the name of the service to place in the gRPC HealthCheckRequest (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).   If this is not specified, the default behavior is defined by gRPC. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecephemeralcontainersindexlivenessprobehttpget","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.ephemeralContainers[index].livenessProbe.httpGet","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>HTTPGet specifies the http request to perform.</p> Name Type Description Required port int or string            Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME. true host string            Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead. false httpHeaders []object            Custom headers to set in the request. HTTP allows repeated headers. false path string            Path to access on the HTTP server. false scheme string            Scheme to use for connecting to the host. Defaults to HTTP. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecephemeralcontainersindexlivenessprobehttpgethttpheadersindex","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.ephemeralContainers[index].livenessProbe.httpGet.httpHeaders[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>HTTPHeader describes a custom header to be used in HTTP probes</p> Name Type Description Required name string            The header field name. This will be canonicalized upon output, so case-variant names will be understood as the same header. true value string            The header field value true"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecephemeralcontainersindexlivenessprobetcpsocket","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.ephemeralContainers[index].livenessProbe.tcpSocket","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>TCPSocket specifies an action involving a TCP port.</p> Name Type Description Required port int or string            Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME. true host string            Optional: Host name to connect to, defaults to the pod IP. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecephemeralcontainersindexportsindex","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.ephemeralContainers[index].ports[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>ContainerPort represents a network port in a single container.</p> Name Type Description Required containerPort integer            Number of port to expose on the pod's IP address. This must be a valid port number, 0 &lt; x &lt; 65536. Format: int32 true hostIP string            What host IP to bind the external port to. false hostPort integer            Number of port to expose on the host. If specified, this must be a valid port number, 0 &lt; x &lt; 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this. Format: int32 false name string            If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services. false protocol string            Protocol for port. Must be UDP, TCP, or SCTP. Defaults to \"TCP\". Default: TCP false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecephemeralcontainersindexreadinessprobe","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.ephemeralContainers[index].readinessProbe","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Probes are not allowed for ephemeral containers.</p> Name Type Description Required exec object            Exec specifies the action to take. false failureThreshold integer            Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1. Format: int32 false grpc object            GRPC specifies an action involving a GRPC port. false httpGet object            HTTPGet specifies the http request to perform. false initialDelaySeconds integer            Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes Format: int32 false periodSeconds integer            How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1. Format: int32 false successThreshold integer            Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1. Format: int32 false tcpSocket object            TCPSocket specifies an action involving a TCP port. false terminationGracePeriodSeconds integer            Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset. Format: int64 false timeoutSeconds integer            Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes Format: int32 false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecephemeralcontainersindexreadinessprobeexec","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.ephemeralContainers[index].readinessProbe.exec","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Exec specifies the action to take.</p> Name Type Description Required command []string            Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecephemeralcontainersindexreadinessprobegrpc","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.ephemeralContainers[index].readinessProbe.grpc","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>GRPC specifies an action involving a GRPC port.</p> Name Type Description Required port integer            Port number of the gRPC service. Number must be in the range 1 to 65535. Format: int32 true service string            Service is the name of the service to place in the gRPC HealthCheckRequest (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).   If this is not specified, the default behavior is defined by gRPC. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecephemeralcontainersindexreadinessprobehttpget","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.ephemeralContainers[index].readinessProbe.httpGet","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>HTTPGet specifies the http request to perform.</p> Name Type Description Required port int or string            Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME. true host string            Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead. false httpHeaders []object            Custom headers to set in the request. HTTP allows repeated headers. false path string            Path to access on the HTTP server. false scheme string            Scheme to use for connecting to the host. Defaults to HTTP. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecephemeralcontainersindexreadinessprobehttpgethttpheadersindex","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.ephemeralContainers[index].readinessProbe.httpGet.httpHeaders[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>HTTPHeader describes a custom header to be used in HTTP probes</p> Name Type Description Required name string            The header field name. This will be canonicalized upon output, so case-variant names will be understood as the same header. true value string            The header field value true"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecephemeralcontainersindexreadinessprobetcpsocket","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.ephemeralContainers[index].readinessProbe.tcpSocket","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>TCPSocket specifies an action involving a TCP port.</p> Name Type Description Required port int or string            Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME. true host string            Optional: Host name to connect to, defaults to the pod IP. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecephemeralcontainersindexresizepolicyindex","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.ephemeralContainers[index].resizePolicy[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>ContainerResizePolicy represents resource resize policy for the container.</p> Name Type Description Required resourceName string            Name of the resource to which this resource resize policy applies. Supported values: cpu, memory. true restartPolicy string            Restart policy to apply when specified resource is resized. If not specified, it defaults to NotRequired. true"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecephemeralcontainersindexresources","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.ephemeralContainers[index].resources","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Resources are not allowed for ephemeral containers. Ephemeral containers use spare resources already allocated to the pod.</p> Name Type Description Required claims []object            Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container.   This is an alpha field and requires enabling the DynamicResourceAllocation feature gate.   This field is immutable. It can only be set for containers. false limits map[string]int or string            Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/ false requests map[string]int or string            Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/ false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecephemeralcontainersindexresourcesclaimsindex","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.ephemeralContainers[index].resources.claims[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>ResourceClaim references one entry in PodSpec.ResourceClaims.</p> Name Type Description Required name string            Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container. true"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecephemeralcontainersindexsecuritycontext","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.ephemeralContainers[index].securityContext","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Optional: SecurityContext defines the security options the ephemeral container should be run with. If set, the fields of SecurityContext override the equivalent fields of PodSecurityContext.</p> Name Type Description Required allowPrivilegeEscalation boolean            AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN Note that this field cannot be set when spec.os.name is windows. false appArmorProfile object            appArmorProfile is the AppArmor options to use by this container. If set, this profile overrides the pod's appArmorProfile. Note that this field cannot be set when spec.os.name is windows. false capabilities object            The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime. Note that this field cannot be set when spec.os.name is windows. false privileged boolean            Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false. Note that this field cannot be set when spec.os.name is windows. false procMount string            procMount denotes the type of proc mount to use for the containers. The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled. Note that this field cannot be set when spec.os.name is windows. false readOnlyRootFilesystem boolean            Whether this container has a read-only root filesystem. Default is false. Note that this field cannot be set when spec.os.name is windows. false runAsGroup integer            The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is windows. Format: int64 false runAsNonRoot boolean            Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. false runAsUser integer            The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is windows. Format: int64 false seLinuxOptions object            The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is windows. false seccompProfile object            The seccomp options to use by this container. If seccomp options are provided at both the pod &amp; container level, the container options override the pod options. Note that this field cannot be set when spec.os.name is windows. false windowsOptions object            The Windows specific settings applied to all containers. If unspecified, the options from the PodSecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is linux. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecephemeralcontainersindexsecuritycontextapparmorprofile","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.ephemeralContainers[index].securityContext.appArmorProfile","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>appArmorProfile is the AppArmor options to use by this container. If set, this profile overrides the pod's appArmorProfile. Note that this field cannot be set when spec.os.name is windows.</p> Name Type Description Required type string            type indicates which kind of AppArmor profile will be applied. Valid options are:   Localhost - a profile pre-loaded on the node.   RuntimeDefault - the container runtime's default profile.   Unconfined - no AppArmor enforcement. true localhostProfile string            localhostProfile indicates a profile loaded on the node that should be used. The profile must be preconfigured on the node to work. Must match the loaded name of the profile. Must be set if and only if type is \"Localhost\". false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecephemeralcontainersindexsecuritycontextcapabilities","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.ephemeralContainers[index].securityContext.capabilities","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime. Note that this field cannot be set when spec.os.name is windows.</p> Name Type Description Required add []string            Added capabilities false drop []string            Removed capabilities false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecephemeralcontainersindexsecuritycontextselinuxoptions","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.ephemeralContainers[index].securityContext.seLinuxOptions","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is windows.</p> Name Type Description Required level string            Level is SELinux level label that applies to the container. false role string            Role is a SELinux role label that applies to the container. false type string            Type is a SELinux type label that applies to the container. false user string            User is a SELinux user label that applies to the container. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecephemeralcontainersindexsecuritycontextseccompprofile","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.ephemeralContainers[index].securityContext.seccompProfile","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>The seccomp options to use by this container. If seccomp options are provided at both the pod &amp; container level, the container options override the pod options. Note that this field cannot be set when spec.os.name is windows.</p> Name Type Description Required type string            type indicates which kind of seccomp profile will be applied. Valid options are:   Localhost - a profile defined in a file on the node should be used. RuntimeDefault - the container runtime default profile should be used. Unconfined - no profile should be applied. true localhostProfile string            localhostProfile indicates a profile defined in a file on the node should be used. The profile must be preconfigured on the node to work. Must be a descending path, relative to the kubelet's configured seccomp profile location. Must be set if type is \"Localhost\". Must NOT be set for any other type. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecephemeralcontainersindexsecuritycontextwindowsoptions","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.ephemeralContainers[index].securityContext.windowsOptions","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>The Windows specific settings applied to all containers. If unspecified, the options from the PodSecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is linux.</p> Name Type Description Required gmsaCredentialSpec string            GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field. false gmsaCredentialSpecName string            GMSACredentialSpecName is the name of the GMSA credential spec to use. false hostProcess boolean            HostProcess determines if a container should be run as a 'Host Process' container. All of a Pod's containers must have the same effective HostProcess value (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers). In addition, if HostProcess is true then HostNetwork must also be set to true. false runAsUserName string            The UserName in Windows to run the entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecephemeralcontainersindexstartupprobe","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.ephemeralContainers[index].startupProbe","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Probes are not allowed for ephemeral containers.</p> Name Type Description Required exec object            Exec specifies the action to take. false failureThreshold integer            Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1. Format: int32 false grpc object            GRPC specifies an action involving a GRPC port. false httpGet object            HTTPGet specifies the http request to perform. false initialDelaySeconds integer            Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes Format: int32 false periodSeconds integer            How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1. Format: int32 false successThreshold integer            Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1. Format: int32 false tcpSocket object            TCPSocket specifies an action involving a TCP port. false terminationGracePeriodSeconds integer            Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset. Format: int64 false timeoutSeconds integer            Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes Format: int32 false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecephemeralcontainersindexstartupprobeexec","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.ephemeralContainers[index].startupProbe.exec","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Exec specifies the action to take.</p> Name Type Description Required command []string            Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecephemeralcontainersindexstartupprobegrpc","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.ephemeralContainers[index].startupProbe.grpc","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>GRPC specifies an action involving a GRPC port.</p> Name Type Description Required port integer            Port number of the gRPC service. Number must be in the range 1 to 65535. Format: int32 true service string            Service is the name of the service to place in the gRPC HealthCheckRequest (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).   If this is not specified, the default behavior is defined by gRPC. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecephemeralcontainersindexstartupprobehttpget","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.ephemeralContainers[index].startupProbe.httpGet","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>HTTPGet specifies the http request to perform.</p> Name Type Description Required port int or string            Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME. true host string            Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead. false httpHeaders []object            Custom headers to set in the request. HTTP allows repeated headers. false path string            Path to access on the HTTP server. false scheme string            Scheme to use for connecting to the host. Defaults to HTTP. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecephemeralcontainersindexstartupprobehttpgethttpheadersindex","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.ephemeralContainers[index].startupProbe.httpGet.httpHeaders[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>HTTPHeader describes a custom header to be used in HTTP probes</p> Name Type Description Required name string            The header field name. This will be canonicalized upon output, so case-variant names will be understood as the same header. true value string            The header field value true"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecephemeralcontainersindexstartupprobetcpsocket","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.ephemeralContainers[index].startupProbe.tcpSocket","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>TCPSocket specifies an action involving a TCP port.</p> Name Type Description Required port int or string            Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME. true host string            Optional: Host name to connect to, defaults to the pod IP. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecephemeralcontainersindexvolumedevicesindex","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.ephemeralContainers[index].volumeDevices[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>volumeDevice describes a mapping of a raw block device within a container.</p> Name Type Description Required devicePath string            devicePath is the path inside of the container that the device will be mapped to. true name string            name must match the name of a persistentVolumeClaim in the pod true"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecephemeralcontainersindexvolumemountsindex","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.ephemeralContainers[index].volumeMounts[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>VolumeMount describes a mounting of a Volume within a container.</p> Name Type Description Required mountPath string            Path within the container at which the volume should be mounted.  Must not contain ':'. true name string            This must match the Name of a Volume. true mountPropagation string            mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10. When RecursiveReadOnly is set to IfPossible or to Enabled, MountPropagation must be None or unspecified (which defaults to None). false readOnly boolean            Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false. false recursiveReadOnly string            RecursiveReadOnly specifies whether read-only mounts should be handled recursively.   If ReadOnly is false, this field has no meaning and must be unspecified.   If ReadOnly is true, and this field is set to Disabled, the mount is not made recursively read-only.  If this field is set to IfPossible, the mount is made recursively read-only, if it is supported by the container runtime.  If this field is set to Enabled, the mount is made recursively read-only if it is supported by the container runtime, otherwise the pod will not be started and an error will be generated to indicate the reason.   If this field is set to IfPossible or Enabled, MountPropagation must be set to None (or be unspecified, which defaults to None).   If this field is not specified, it is treated as an equivalent of Disabled. false subPath string            Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root). false subPathExpr string            Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to \"\" (volume's root). SubPathExpr and SubPath are mutually exclusive. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespechostaliasesindex","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.hostAliases[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>HostAlias holds the mapping between IP and hostnames that will be injected as an entry in the pod's hosts file.</p> Name Type Description Required ip string            IP address of the host file entry. true hostnames []string            Hostnames for the above IP address. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecimagepullsecretsindex","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.imagePullSecrets[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.</p> Name Type Description Required name string            Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. TODO: Add other useful fields. apiVersion, kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896. Default:  false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecinitcontainersindex","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.initContainers[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>A single application container that you want to run within a pod.</p> Name Type Description Required name string            Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated. true args []string            Arguments to the entrypoint. The container image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell false command []string            Entrypoint array. Not executed within a shell. The container image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell false env []object            List of environment variables to set in the container. Cannot be updated. false envFrom []object            List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated. false image string            Container image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets. false imagePullPolicy string            Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images false lifecycle object            Actions that the management system should take in response to container lifecycle events. Cannot be updated. false livenessProbe object            Periodic probe of container liveness. Container will be restarted if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes false ports []object            List of ports to expose from the container. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default \"0.0.0.0\" address inside a container will be accessible from the network. Modifying this array with strategic merge patch may corrupt the data. For more information See https://github.com/kubernetes/kubernetes/issues/108255. Cannot be updated. false readinessProbe object            Periodic probe of container service readiness. Container will be removed from service endpoints if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes false resizePolicy []object            Resources resize policy for the container. false resources object            Compute Resources required by this container. Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/ false restartPolicy string            RestartPolicy defines the restart behavior of individual containers in a pod. This field may only be set for init containers, and the only allowed value is \"Always\". For non-init containers or when this field is not specified, the restart behavior is defined by the Pod's restart policy and the container type. Setting the RestartPolicy as \"Always\" for the init container will have the following effect: this init container will be continually restarted on exit until all regular containers have terminated. Once all regular containers have completed, all init containers with restartPolicy \"Always\" will be shut down. This lifecycle differs from normal init containers and is often referred to as a \"sidecar\" container. Although this init container still starts in the init container sequence, it does not wait for the container to complete before proceeding to the next init container. Instead, the next init container starts immediately after this init container is started, or after any startupProbe has successfully completed. false securityContext object            SecurityContext defines the security options the container should be run with. If set, the fields of SecurityContext override the equivalent fields of PodSecurityContext. More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ false startupProbe object            StartupProbe indicates that the Pod has successfully initialized. If specified, no other probes are executed until this completes successfully. If this probe fails, the Pod will be restarted, just as if the livenessProbe failed. This can be used to provide different probe parameters at the beginning of a Pod's lifecycle, when it might take a long time to load data or warm a cache, than during steady-state operation. This cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes false stdin boolean            Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. Default is false. false stdinOnce boolean            Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false false terminationMessagePath string            Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated. false terminationMessagePolicy string            Indicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated. false tty boolean            Whether this container should allocate a TTY for itself, also requires 'stdin' to be true. Default is false. false volumeDevices []object            volumeDevices is the list of block devices to be used by the container. false volumeMounts []object            Pod volumes to mount into the container's filesystem. Cannot be updated. false workingDir string            Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecinitcontainersindexenvindex","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.initContainers[index].env[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>EnvVar represents an environment variable present in a Container.</p> Name Type Description Required name string            Name of the environment variable. Must be a C_IDENTIFIER. true value string            Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to \"\". false valueFrom object            Source for the environment variable's value. Cannot be used if value is not empty. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecinitcontainersindexenvindexvaluefrom","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.initContainers[index].env[index].valueFrom","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Source for the environment variable's value. Cannot be used if value is not empty.</p> Name Type Description Required configMapKeyRef object            Selects a key of a ConfigMap. false fieldRef object            Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['']`, `metadata.annotations['']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs. false resourceFieldRef object            Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported. false secretKeyRef object            Selects a key of a secret in the pod's namespace false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecinitcontainersindexenvindexvaluefromconfigmapkeyref","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.initContainers[index].env[index].valueFrom.configMapKeyRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Selects a key of a ConfigMap.</p> Name Type Description Required key string            The key to select. true name string            Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. TODO: Add other useful fields. apiVersion, kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896. Default:  false optional boolean            Specify whether the ConfigMap or its key must be defined false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecinitcontainersindexenvindexvaluefromfieldref","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.initContainers[index].env[index].valueFrom.fieldRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Selects a field of the pod: supports metadata.name, metadata.namespace, <code>metadata.labels['&lt;KEY&gt;']</code>, <code>metadata.annotations['&lt;KEY&gt;']</code>, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.</p> Name Type Description Required fieldPath string            Path of the field to select in the specified API version. true apiVersion string            Version of the schema the FieldPath is written in terms of, defaults to \"v1\". false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecinitcontainersindexenvindexvaluefromresourcefieldref","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.initContainers[index].env[index].valueFrom.resourceFieldRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.</p> Name Type Description Required resource string            Required: resource to select true containerName string            Container name: required for volumes, optional for env vars false divisor int or string            Specifies the output format of the exposed resources, defaults to \"1\" false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecinitcontainersindexenvindexvaluefromsecretkeyref","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.initContainers[index].env[index].valueFrom.secretKeyRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Selects a key of a secret in the pod's namespace</p> Name Type Description Required key string            The key of the secret to select from.  Must be a valid secret key. true name string            Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. TODO: Add other useful fields. apiVersion, kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896. Default:  false optional boolean            Specify whether the Secret or its key must be defined false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecinitcontainersindexenvfromindex","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.initContainers[index].envFrom[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>EnvFromSource represents the source of a set of ConfigMaps</p> Name Type Description Required configMapRef object            The ConfigMap to select from false prefix string            An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER. false secretRef object            The Secret to select from false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecinitcontainersindexenvfromindexconfigmapref","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.initContainers[index].envFrom[index].configMapRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>The ConfigMap to select from</p> Name Type Description Required name string            Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. TODO: Add other useful fields. apiVersion, kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896. Default:  false optional boolean            Specify whether the ConfigMap must be defined false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecinitcontainersindexenvfromindexsecretref","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.initContainers[index].envFrom[index].secretRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>The Secret to select from</p> Name Type Description Required name string            Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. TODO: Add other useful fields. apiVersion, kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896. Default:  false optional boolean            Specify whether the Secret must be defined false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecinitcontainersindexlifecycle","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.initContainers[index].lifecycle","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Actions that the management system should take in response to container lifecycle events. Cannot be updated.</p> Name Type Description Required postStart object            PostStart is called immediately after a container is created. If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks false preStop object            PreStop is called immediately before a container is terminated due to an API request or management event such as liveness/startup probe failure, preemption, resource contention, etc. The handler is not called if the container crashes or exits. The Pod's termination grace period countdown begins before the PreStop hook is executed. Regardless of the outcome of the handler, the container will eventually terminate within the Pod's termination grace period (unless delayed by finalizers). Other management of the container blocks until the hook completes or until the termination grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecinitcontainersindexlifecyclepoststart","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.initContainers[index].lifecycle.postStart","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>PostStart is called immediately after a container is created. If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks</p> Name Type Description Required exec object            Exec specifies the action to take. false httpGet object            HTTPGet specifies the http request to perform. false sleep object            Sleep represents the duration that the container should sleep before being terminated. false tcpSocket object            Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept for the backward compatibility. There are no validation of this field and lifecycle hooks will fail in runtime when tcp handler is specified. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecinitcontainersindexlifecyclepoststartexec","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.initContainers[index].lifecycle.postStart.exec","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Exec specifies the action to take.</p> Name Type Description Required command []string            Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecinitcontainersindexlifecyclepoststarthttpget","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.initContainers[index].lifecycle.postStart.httpGet","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>HTTPGet specifies the http request to perform.</p> Name Type Description Required port int or string            Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME. true host string            Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead. false httpHeaders []object            Custom headers to set in the request. HTTP allows repeated headers. false path string            Path to access on the HTTP server. false scheme string            Scheme to use for connecting to the host. Defaults to HTTP. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecinitcontainersindexlifecyclepoststarthttpgethttpheadersindex","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.initContainers[index].lifecycle.postStart.httpGet.httpHeaders[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>HTTPHeader describes a custom header to be used in HTTP probes</p> Name Type Description Required name string            The header field name. This will be canonicalized upon output, so case-variant names will be understood as the same header. true value string            The header field value true"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecinitcontainersindexlifecyclepoststartsleep","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.initContainers[index].lifecycle.postStart.sleep","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Sleep represents the duration that the container should sleep before being terminated.</p> Name Type Description Required seconds integer            Seconds is the number of seconds to sleep. Format: int64 true"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecinitcontainersindexlifecyclepoststarttcpsocket","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.initContainers[index].lifecycle.postStart.tcpSocket","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept for the backward compatibility. There are no validation of this field and lifecycle hooks will fail in runtime when tcp handler is specified.</p> Name Type Description Required port int or string            Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME. true host string            Optional: Host name to connect to, defaults to the pod IP. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecinitcontainersindexlifecycleprestop","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.initContainers[index].lifecycle.preStop","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>PreStop is called immediately before a container is terminated due to an API request or management event such as liveness/startup probe failure, preemption, resource contention, etc. The handler is not called if the container crashes or exits. The Pod's termination grace period countdown begins before the PreStop hook is executed. Regardless of the outcome of the handler, the container will eventually terminate within the Pod's termination grace period (unless delayed by finalizers). Other management of the container blocks until the hook completes or until the termination grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks</p> Name Type Description Required exec object            Exec specifies the action to take. false httpGet object            HTTPGet specifies the http request to perform. false sleep object            Sleep represents the duration that the container should sleep before being terminated. false tcpSocket object            Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept for the backward compatibility. There are no validation of this field and lifecycle hooks will fail in runtime when tcp handler is specified. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecinitcontainersindexlifecycleprestopexec","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.initContainers[index].lifecycle.preStop.exec","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Exec specifies the action to take.</p> Name Type Description Required command []string            Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecinitcontainersindexlifecycleprestophttpget","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.initContainers[index].lifecycle.preStop.httpGet","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>HTTPGet specifies the http request to perform.</p> Name Type Description Required port int or string            Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME. true host string            Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead. false httpHeaders []object            Custom headers to set in the request. HTTP allows repeated headers. false path string            Path to access on the HTTP server. false scheme string            Scheme to use for connecting to the host. Defaults to HTTP. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecinitcontainersindexlifecycleprestophttpgethttpheadersindex","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.initContainers[index].lifecycle.preStop.httpGet.httpHeaders[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>HTTPHeader describes a custom header to be used in HTTP probes</p> Name Type Description Required name string            The header field name. This will be canonicalized upon output, so case-variant names will be understood as the same header. true value string            The header field value true"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecinitcontainersindexlifecycleprestopsleep","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.initContainers[index].lifecycle.preStop.sleep","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Sleep represents the duration that the container should sleep before being terminated.</p> Name Type Description Required seconds integer            Seconds is the number of seconds to sleep. Format: int64 true"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecinitcontainersindexlifecycleprestoptcpsocket","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.initContainers[index].lifecycle.preStop.tcpSocket","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept for the backward compatibility. There are no validation of this field and lifecycle hooks will fail in runtime when tcp handler is specified.</p> Name Type Description Required port int or string            Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME. true host string            Optional: Host name to connect to, defaults to the pod IP. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecinitcontainersindexlivenessprobe","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.initContainers[index].livenessProbe","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Periodic probe of container liveness. Container will be restarted if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes</p> Name Type Description Required exec object            Exec specifies the action to take. false failureThreshold integer            Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1. Format: int32 false grpc object            GRPC specifies an action involving a GRPC port. false httpGet object            HTTPGet specifies the http request to perform. false initialDelaySeconds integer            Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes Format: int32 false periodSeconds integer            How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1. Format: int32 false successThreshold integer            Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1. Format: int32 false tcpSocket object            TCPSocket specifies an action involving a TCP port. false terminationGracePeriodSeconds integer            Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset. Format: int64 false timeoutSeconds integer            Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes Format: int32 false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecinitcontainersindexlivenessprobeexec","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.initContainers[index].livenessProbe.exec","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Exec specifies the action to take.</p> Name Type Description Required command []string            Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecinitcontainersindexlivenessprobegrpc","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.initContainers[index].livenessProbe.grpc","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>GRPC specifies an action involving a GRPC port.</p> Name Type Description Required port integer            Port number of the gRPC service. Number must be in the range 1 to 65535. Format: int32 true service string            Service is the name of the service to place in the gRPC HealthCheckRequest (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).   If this is not specified, the default behavior is defined by gRPC. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecinitcontainersindexlivenessprobehttpget","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.initContainers[index].livenessProbe.httpGet","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>HTTPGet specifies the http request to perform.</p> Name Type Description Required port int or string            Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME. true host string            Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead. false httpHeaders []object            Custom headers to set in the request. HTTP allows repeated headers. false path string            Path to access on the HTTP server. false scheme string            Scheme to use for connecting to the host. Defaults to HTTP. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecinitcontainersindexlivenessprobehttpgethttpheadersindex","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.initContainers[index].livenessProbe.httpGet.httpHeaders[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>HTTPHeader describes a custom header to be used in HTTP probes</p> Name Type Description Required name string            The header field name. This will be canonicalized upon output, so case-variant names will be understood as the same header. true value string            The header field value true"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecinitcontainersindexlivenessprobetcpsocket","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.initContainers[index].livenessProbe.tcpSocket","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>TCPSocket specifies an action involving a TCP port.</p> Name Type Description Required port int or string            Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME. true host string            Optional: Host name to connect to, defaults to the pod IP. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecinitcontainersindexportsindex","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.initContainers[index].ports[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>ContainerPort represents a network port in a single container.</p> Name Type Description Required containerPort integer            Number of port to expose on the pod's IP address. This must be a valid port number, 0 &lt; x &lt; 65536. Format: int32 true hostIP string            What host IP to bind the external port to. false hostPort integer            Number of port to expose on the host. If specified, this must be a valid port number, 0 &lt; x &lt; 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this. Format: int32 false name string            If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services. false protocol string            Protocol for port. Must be UDP, TCP, or SCTP. Defaults to \"TCP\". Default: TCP false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecinitcontainersindexreadinessprobe","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.initContainers[index].readinessProbe","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Periodic probe of container service readiness. Container will be removed from service endpoints if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes</p> Name Type Description Required exec object            Exec specifies the action to take. false failureThreshold integer            Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1. Format: int32 false grpc object            GRPC specifies an action involving a GRPC port. false httpGet object            HTTPGet specifies the http request to perform. false initialDelaySeconds integer            Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes Format: int32 false periodSeconds integer            How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1. Format: int32 false successThreshold integer            Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1. Format: int32 false tcpSocket object            TCPSocket specifies an action involving a TCP port. false terminationGracePeriodSeconds integer            Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset. Format: int64 false timeoutSeconds integer            Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes Format: int32 false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecinitcontainersindexreadinessprobeexec","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.initContainers[index].readinessProbe.exec","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Exec specifies the action to take.</p> Name Type Description Required command []string            Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecinitcontainersindexreadinessprobegrpc","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.initContainers[index].readinessProbe.grpc","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>GRPC specifies an action involving a GRPC port.</p> Name Type Description Required port integer            Port number of the gRPC service. Number must be in the range 1 to 65535. Format: int32 true service string            Service is the name of the service to place in the gRPC HealthCheckRequest (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).   If this is not specified, the default behavior is defined by gRPC. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecinitcontainersindexreadinessprobehttpget","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.initContainers[index].readinessProbe.httpGet","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>HTTPGet specifies the http request to perform.</p> Name Type Description Required port int or string            Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME. true host string            Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead. false httpHeaders []object            Custom headers to set in the request. HTTP allows repeated headers. false path string            Path to access on the HTTP server. false scheme string            Scheme to use for connecting to the host. Defaults to HTTP. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecinitcontainersindexreadinessprobehttpgethttpheadersindex","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.initContainers[index].readinessProbe.httpGet.httpHeaders[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>HTTPHeader describes a custom header to be used in HTTP probes</p> Name Type Description Required name string            The header field name. This will be canonicalized upon output, so case-variant names will be understood as the same header. true value string            The header field value true"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecinitcontainersindexreadinessprobetcpsocket","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.initContainers[index].readinessProbe.tcpSocket","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>TCPSocket specifies an action involving a TCP port.</p> Name Type Description Required port int or string            Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME. true host string            Optional: Host name to connect to, defaults to the pod IP. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecinitcontainersindexresizepolicyindex","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.initContainers[index].resizePolicy[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>ContainerResizePolicy represents resource resize policy for the container.</p> Name Type Description Required resourceName string            Name of the resource to which this resource resize policy applies. Supported values: cpu, memory. true restartPolicy string            Restart policy to apply when specified resource is resized. If not specified, it defaults to NotRequired. true"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecinitcontainersindexresources","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.initContainers[index].resources","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Compute Resources required by this container. Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/</p> Name Type Description Required claims []object            Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container.   This is an alpha field and requires enabling the DynamicResourceAllocation feature gate.   This field is immutable. It can only be set for containers. false limits map[string]int or string            Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/ false requests map[string]int or string            Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/ false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecinitcontainersindexresourcesclaimsindex","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.initContainers[index].resources.claims[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>ResourceClaim references one entry in PodSpec.ResourceClaims.</p> Name Type Description Required name string            Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container. true"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecinitcontainersindexsecuritycontext","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.initContainers[index].securityContext","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>SecurityContext defines the security options the container should be run with. If set, the fields of SecurityContext override the equivalent fields of PodSecurityContext. More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/</p> Name Type Description Required allowPrivilegeEscalation boolean            AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN Note that this field cannot be set when spec.os.name is windows. false appArmorProfile object            appArmorProfile is the AppArmor options to use by this container. If set, this profile overrides the pod's appArmorProfile. Note that this field cannot be set when spec.os.name is windows. false capabilities object            The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime. Note that this field cannot be set when spec.os.name is windows. false privileged boolean            Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false. Note that this field cannot be set when spec.os.name is windows. false procMount string            procMount denotes the type of proc mount to use for the containers. The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled. Note that this field cannot be set when spec.os.name is windows. false readOnlyRootFilesystem boolean            Whether this container has a read-only root filesystem. Default is false. Note that this field cannot be set when spec.os.name is windows. false runAsGroup integer            The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is windows. Format: int64 false runAsNonRoot boolean            Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. false runAsUser integer            The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is windows. Format: int64 false seLinuxOptions object            The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is windows. false seccompProfile object            The seccomp options to use by this container. If seccomp options are provided at both the pod &amp; container level, the container options override the pod options. Note that this field cannot be set when spec.os.name is windows. false windowsOptions object            The Windows specific settings applied to all containers. If unspecified, the options from the PodSecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is linux. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecinitcontainersindexsecuritycontextapparmorprofile","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.initContainers[index].securityContext.appArmorProfile","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>appArmorProfile is the AppArmor options to use by this container. If set, this profile overrides the pod's appArmorProfile. Note that this field cannot be set when spec.os.name is windows.</p> Name Type Description Required type string            type indicates which kind of AppArmor profile will be applied. Valid options are:   Localhost - a profile pre-loaded on the node.   RuntimeDefault - the container runtime's default profile.   Unconfined - no AppArmor enforcement. true localhostProfile string            localhostProfile indicates a profile loaded on the node that should be used. The profile must be preconfigured on the node to work. Must match the loaded name of the profile. Must be set if and only if type is \"Localhost\". false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecinitcontainersindexsecuritycontextcapabilities","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.initContainers[index].securityContext.capabilities","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime. Note that this field cannot be set when spec.os.name is windows.</p> Name Type Description Required add []string            Added capabilities false drop []string            Removed capabilities false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecinitcontainersindexsecuritycontextselinuxoptions","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.initContainers[index].securityContext.seLinuxOptions","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is windows.</p> Name Type Description Required level string            Level is SELinux level label that applies to the container. false role string            Role is a SELinux role label that applies to the container. false type string            Type is a SELinux type label that applies to the container. false user string            User is a SELinux user label that applies to the container. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecinitcontainersindexsecuritycontextseccompprofile","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.initContainers[index].securityContext.seccompProfile","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>The seccomp options to use by this container. If seccomp options are provided at both the pod &amp; container level, the container options override the pod options. Note that this field cannot be set when spec.os.name is windows.</p> Name Type Description Required type string            type indicates which kind of seccomp profile will be applied. Valid options are:   Localhost - a profile defined in a file on the node should be used. RuntimeDefault - the container runtime default profile should be used. Unconfined - no profile should be applied. true localhostProfile string            localhostProfile indicates a profile defined in a file on the node should be used. The profile must be preconfigured on the node to work. Must be a descending path, relative to the kubelet's configured seccomp profile location. Must be set if type is \"Localhost\". Must NOT be set for any other type. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecinitcontainersindexsecuritycontextwindowsoptions","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.initContainers[index].securityContext.windowsOptions","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>The Windows specific settings applied to all containers. If unspecified, the options from the PodSecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is linux.</p> Name Type Description Required gmsaCredentialSpec string            GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field. false gmsaCredentialSpecName string            GMSACredentialSpecName is the name of the GMSA credential spec to use. false hostProcess boolean            HostProcess determines if a container should be run as a 'Host Process' container. All of a Pod's containers must have the same effective HostProcess value (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers). In addition, if HostProcess is true then HostNetwork must also be set to true. false runAsUserName string            The UserName in Windows to run the entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecinitcontainersindexstartupprobe","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.initContainers[index].startupProbe","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>StartupProbe indicates that the Pod has successfully initialized. If specified, no other probes are executed until this completes successfully. If this probe fails, the Pod will be restarted, just as if the livenessProbe failed. This can be used to provide different probe parameters at the beginning of a Pod's lifecycle, when it might take a long time to load data or warm a cache, than during steady-state operation. This cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes</p> Name Type Description Required exec object            Exec specifies the action to take. false failureThreshold integer            Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1. Format: int32 false grpc object            GRPC specifies an action involving a GRPC port. false httpGet object            HTTPGet specifies the http request to perform. false initialDelaySeconds integer            Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes Format: int32 false periodSeconds integer            How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1. Format: int32 false successThreshold integer            Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1. Format: int32 false tcpSocket object            TCPSocket specifies an action involving a TCP port. false terminationGracePeriodSeconds integer            Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset. Format: int64 false timeoutSeconds integer            Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes Format: int32 false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecinitcontainersindexstartupprobeexec","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.initContainers[index].startupProbe.exec","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Exec specifies the action to take.</p> Name Type Description Required command []string            Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecinitcontainersindexstartupprobegrpc","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.initContainers[index].startupProbe.grpc","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>GRPC specifies an action involving a GRPC port.</p> Name Type Description Required port integer            Port number of the gRPC service. Number must be in the range 1 to 65535. Format: int32 true service string            Service is the name of the service to place in the gRPC HealthCheckRequest (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).   If this is not specified, the default behavior is defined by gRPC. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecinitcontainersindexstartupprobehttpget","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.initContainers[index].startupProbe.httpGet","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>HTTPGet specifies the http request to perform.</p> Name Type Description Required port int or string            Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME. true host string            Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead. false httpHeaders []object            Custom headers to set in the request. HTTP allows repeated headers. false path string            Path to access on the HTTP server. false scheme string            Scheme to use for connecting to the host. Defaults to HTTP. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecinitcontainersindexstartupprobehttpgethttpheadersindex","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.initContainers[index].startupProbe.httpGet.httpHeaders[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>HTTPHeader describes a custom header to be used in HTTP probes</p> Name Type Description Required name string            The header field name. This will be canonicalized upon output, so case-variant names will be understood as the same header. true value string            The header field value true"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecinitcontainersindexstartupprobetcpsocket","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.initContainers[index].startupProbe.tcpSocket","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>TCPSocket specifies an action involving a TCP port.</p> Name Type Description Required port int or string            Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME. true host string            Optional: Host name to connect to, defaults to the pod IP. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecinitcontainersindexvolumedevicesindex","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.initContainers[index].volumeDevices[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>volumeDevice describes a mapping of a raw block device within a container.</p> Name Type Description Required devicePath string            devicePath is the path inside of the container that the device will be mapped to. true name string            name must match the name of a persistentVolumeClaim in the pod true"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecinitcontainersindexvolumemountsindex","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.initContainers[index].volumeMounts[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>VolumeMount describes a mounting of a Volume within a container.</p> Name Type Description Required mountPath string            Path within the container at which the volume should be mounted.  Must not contain ':'. true name string            This must match the Name of a Volume. true mountPropagation string            mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10. When RecursiveReadOnly is set to IfPossible or to Enabled, MountPropagation must be None or unspecified (which defaults to None). false readOnly boolean            Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false. false recursiveReadOnly string            RecursiveReadOnly specifies whether read-only mounts should be handled recursively.   If ReadOnly is false, this field has no meaning and must be unspecified.   If ReadOnly is true, and this field is set to Disabled, the mount is not made recursively read-only.  If this field is set to IfPossible, the mount is made recursively read-only, if it is supported by the container runtime.  If this field is set to Enabled, the mount is made recursively read-only if it is supported by the container runtime, otherwise the pod will not be started and an error will be generated to indicate the reason.   If this field is set to IfPossible or Enabled, MountPropagation must be set to None (or be unspecified, which defaults to None).   If this field is not specified, it is treated as an equivalent of Disabled. false subPath string            Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root). false subPathExpr string            Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to \"\" (volume's root). SubPathExpr and SubPath are mutually exclusive. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecos","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.os","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Specifies the OS of the containers in the pod. Some pod and container fields are restricted if this is set.</p> <p>If the OS field is set to linux, the following fields must be unset: -securityContext.windowsOptions</p> <p>If the OS field is set to windows, following fields must be unset: - spec.hostPID - spec.hostIPC - spec.hostUsers - spec.securityContext.appArmorProfile - spec.securityContext.seLinuxOptions - spec.securityContext.seccompProfile - spec.securityContext.fsGroup - spec.securityContext.fsGroupChangePolicy - spec.securityContext.sysctls - spec.shareProcessNamespace - spec.securityContext.runAsUser - spec.securityContext.runAsGroup - spec.securityContext.supplementalGroups - spec.containers[].securityContext.appArmorProfile - spec.containers[].securityContext.seLinuxOptions - spec.containers[].securityContext.seccompProfile - spec.containers[].securityContext.capabilities - spec.containers[].securityContext.readOnlyRootFilesystem - spec.containers[].securityContext.privileged - spec.containers[].securityContext.allowPrivilegeEscalation - spec.containers[].securityContext.procMount - spec.containers[].securityContext.runAsUser - spec.containers[].securityContext.runAsGroup</p> Name Type Description Required name string            Name is the name of the operating system. The currently supported values are linux and windows. Additional value may be defined in future and can be one of: https://github.com/opencontainers/runtime-spec/blob/master/config.md#platform-specific-configuration Clients should expect to handle additional values and treat unrecognized values in this field as os: null true"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecreadinessgatesindex","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.readinessGates[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>PodReadinessGate contains the reference to a pod condition</p> Name Type Description Required conditionType string            ConditionType refers to a condition in the pod's condition list with matching type. true"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecresourceclaimsindex","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.resourceClaims[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>PodResourceClaim references exactly one ResourceClaim through a ClaimSource. It adds a name to it that uniquely identifies the ResourceClaim inside the Pod. Containers that need access to the ResourceClaim reference it with this name.</p> Name Type Description Required name string            Name uniquely identifies this resource claim inside the pod. This must be a DNS_LABEL. true source object            Source describes where to find the ResourceClaim. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecresourceclaimsindexsource","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.resourceClaims[index].source","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Source describes where to find the ResourceClaim.</p> Name Type Description Required resourceClaimName string            ResourceClaimName is the name of a ResourceClaim object in the same namespace as this pod. false resourceClaimTemplateName string            ResourceClaimTemplateName is the name of a ResourceClaimTemplate object in the same namespace as this pod.   The template will be used to create a new ResourceClaim, which will be bound to this pod. When this pod is deleted, the ResourceClaim will also be deleted. The pod name and resource name, along with a generated component, will be used to form a unique name for the ResourceClaim, which will be recorded in pod.status.resourceClaimStatuses.   This field is immutable and no changes will be made to the corresponding ResourceClaim by the control plane after creating the ResourceClaim. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecschedulinggatesindex","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.schedulingGates[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>PodSchedulingGate is associated to a Pod to guard its scheduling.</p> Name Type Description Required name string            Name of the scheduling gate. Each scheduling gate must have a unique name field. true"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecsecuritycontext","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.securityContext","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>SecurityContext holds pod-level security attributes and common container settings. Optional: Defaults to empty.  See type description for default values of each field.</p> Name Type Description Required appArmorProfile object            appArmorProfile is the AppArmor options to use by the containers in this pod. Note that this field cannot be set when spec.os.name is windows. false fsGroup integer            A special supplemental group that applies to all containers in a pod. Some volume types allow the Kubelet to change the ownership of that volume to be owned by the pod:   1. The owning GID will be the FSGroup 2. The setgid bit is set (new files created in the volume will be owned by FSGroup) 3. The permission bits are OR'd with rw-rw----   If unset, the Kubelet will not modify the ownership and permissions of any volume. Note that this field cannot be set when spec.os.name is windows. Format: int64 false fsGroupChangePolicy string            fsGroupChangePolicy defines behavior of changing ownership and permission of the volume before being exposed inside Pod. This field will only apply to volume types which support fsGroup based ownership(and permissions). It will have no effect on ephemeral volume types such as: secret, configmaps and emptydir. Valid values are \"OnRootMismatch\" and \"Always\". If not specified, \"Always\" is used. Note that this field cannot be set when spec.os.name is windows. false runAsGroup integer            The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container. Note that this field cannot be set when spec.os.name is windows. Format: int64 false runAsNonRoot boolean            Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. false runAsUser integer            The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container. Note that this field cannot be set when spec.os.name is windows. Format: int64 false seLinuxOptions object            The SELinux context to be applied to all containers. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container. Note that this field cannot be set when spec.os.name is windows. false seccompProfile object            The seccomp options to use by the containers in this pod. Note that this field cannot be set when spec.os.name is windows. false supplementalGroups []integer            A list of groups applied to the first process run in each container, in addition to the container's primary GID, the fsGroup (if specified), and group memberships defined in the container image for the uid of the container process. If unspecified, no additional groups are added to any container. Note that group memberships defined in the container image for the uid of the container process are still effective, even if they are not included in this list. Note that this field cannot be set when spec.os.name is windows. false sysctls []object            Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported sysctls (by the container runtime) might fail to launch. Note that this field cannot be set when spec.os.name is windows. false windowsOptions object            The Windows specific settings applied to all containers. If unspecified, the options within a container's SecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is linux. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecsecuritycontextapparmorprofile","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.securityContext.appArmorProfile","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>appArmorProfile is the AppArmor options to use by the containers in this pod. Note that this field cannot be set when spec.os.name is windows.</p> Name Type Description Required type string            type indicates which kind of AppArmor profile will be applied. Valid options are:   Localhost - a profile pre-loaded on the node.   RuntimeDefault - the container runtime's default profile.   Unconfined - no AppArmor enforcement. true localhostProfile string            localhostProfile indicates a profile loaded on the node that should be used. The profile must be preconfigured on the node to work. Must match the loaded name of the profile. Must be set if and only if type is \"Localhost\". false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecsecuritycontextselinuxoptions","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.securityContext.seLinuxOptions","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>The SELinux context to be applied to all containers. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container. Note that this field cannot be set when spec.os.name is windows.</p> Name Type Description Required level string            Level is SELinux level label that applies to the container. false role string            Role is a SELinux role label that applies to the container. false type string            Type is a SELinux type label that applies to the container. false user string            User is a SELinux user label that applies to the container. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecsecuritycontextseccompprofile","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.securityContext.seccompProfile","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>The seccomp options to use by the containers in this pod. Note that this field cannot be set when spec.os.name is windows.</p> Name Type Description Required type string            type indicates which kind of seccomp profile will be applied. Valid options are:   Localhost - a profile defined in a file on the node should be used. RuntimeDefault - the container runtime default profile should be used. Unconfined - no profile should be applied. true localhostProfile string            localhostProfile indicates a profile defined in a file on the node should be used. The profile must be preconfigured on the node to work. Must be a descending path, relative to the kubelet's configured seccomp profile location. Must be set if type is \"Localhost\". Must NOT be set for any other type. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecsecuritycontextsysctlsindex","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.securityContext.sysctls[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Sysctl defines a kernel parameter to be set</p> Name Type Description Required name string            Name of a property to set true value string            Value of a property to set true"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecsecuritycontextwindowsoptions","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.securityContext.windowsOptions","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>The Windows specific settings applied to all containers. If unspecified, the options within a container's SecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is linux.</p> Name Type Description Required gmsaCredentialSpec string            GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field. false gmsaCredentialSpecName string            GMSACredentialSpecName is the name of the GMSA credential spec to use. false hostProcess boolean            HostProcess determines if a container should be run as a 'Host Process' container. All of a Pod's containers must have the same effective HostProcess value (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers). In addition, if HostProcess is true then HostNetwork must also be set to true. false runAsUserName string            The UserName in Windows to run the entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespectolerationsindex","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.tolerations[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>The pod this Toleration is attached to tolerates any taint that matches the triple  using the matching operator . Name Type Description Required effect string            Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute. false key string            Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys. false operator string            Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category. false tolerationSeconds integer            TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system. Format: int64 false value string            Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespectopologyspreadconstraintsindex","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.topologySpreadConstraints[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>TopologySpreadConstraint specifies how to spread matching pods among the given topology.</p> Name Type Description Required maxSkew integer            MaxSkew describes the degree to which pods may be unevenly distributed. When `whenUnsatisfiable=DoNotSchedule`, it is the maximum permitted difference between the number of matching pods in the target topology and the global minimum. The global minimum is the minimum number of matching pods in an eligible domain or zero if the number of eligible domains is less than MinDomains. For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same labelSelector spread as 2/2/1: In this case, the global minimum is 1. | zone1 | zone2 | zone3 | |  P P  |  P P  |   P   | - if MaxSkew is 1, incoming pod can only be scheduled to zone3 to become 2/2/2; scheduling it onto zone1(zone2) would make the ActualSkew(3-1) on zone1(zone2) violate MaxSkew(1). - if MaxSkew is 2, incoming pod can be scheduled onto any zone. When `whenUnsatisfiable=ScheduleAnyway`, it is used to give higher precedence to topologies that satisfy it. It's a required field. Default value is 1 and 0 is not allowed. Format: int32 true topologyKey string            TopologyKey is the key of node labels. Nodes that have a label with this key and identical values are considered to be in the same topology. We consider each  as a \"bucket\", and try to put balanced number of pods into each bucket. We define a domain as a particular instance of a topology. Also, we define an eligible domain as a domain whose nodes meet the requirements of nodeAffinityPolicy and nodeTaintsPolicy. e.g. If TopologyKey is \"kubernetes.io/hostname\", each Node is a domain of that topology. And, if TopologyKey is \"topology.kubernetes.io/zone\", each zone is a domain of that topology. It's a required field. true whenUnsatisfiable string            WhenUnsatisfiable indicates how to deal with a pod if it doesn't satisfy the spread constraint. - DoNotSchedule (default) tells the scheduler not to schedule it. - ScheduleAnyway tells the scheduler to schedule the pod in any location,   but giving higher precedence to topologies that would help reduce the   skew. A constraint is considered \"Unsatisfiable\" for an incoming pod if and only if every possible node assignment for that pod would violate \"MaxSkew\" on some topology. For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same labelSelector spread as 3/1/1: | zone1 | zone2 | zone3 | | P P P |   P   |   P   | If WhenUnsatisfiable is set to DoNotSchedule, incoming pod can only be scheduled to zone2(zone3) to become 3/2/1(3/1/2) as ActualSkew(2-1) on zone2(zone3) satisfies MaxSkew(1). In other words, the cluster can still be imbalanced, but scheduler won't make it *more* imbalanced. It's a required field. true labelSelector object            LabelSelector is used to find matching pods. Pods that match this label selector are counted to determine the number of pods in their corresponding topology domain. false matchLabelKeys []string            MatchLabelKeys is a set of pod label keys to select the pods over which spreading will be calculated. The keys are used to lookup values from the incoming pod labels, those key-value labels are ANDed with labelSelector to select the group of existing pods over which spreading will be calculated for the incoming pod. The same key is forbidden to exist in both MatchLabelKeys and LabelSelector. MatchLabelKeys cannot be set when LabelSelector isn't set. Keys that don't exist in the incoming pod labels will be ignored. A null or empty list means only match against labelSelector.   This is a beta field and requires the MatchLabelKeysInPodTopologySpread feature gate to be enabled (enabled by default). false minDomains integer            MinDomains indicates a minimum number of eligible domains. When the number of eligible domains with matching topology keys is less than minDomains, Pod Topology Spread treats \"global minimum\" as 0, and then the calculation of Skew is performed. And when the number of eligible domains with matching topology keys equals or greater than minDomains, this value has no effect on scheduling. As a result, when the number of eligible domains is less than minDomains, scheduler won't schedule more than maxSkew Pods to those domains. If value is nil, the constraint behaves as if MinDomains is equal to 1. Valid values are integers greater than 0. When value is not nil, WhenUnsatisfiable must be DoNotSchedule.   For example, in a 3-zone cluster, MaxSkew is set to 2, MinDomains is set to 5 and pods with the same labelSelector spread as 2/2/2: | zone1 | zone2 | zone3 | |  P P  |  P P  |  P P  | The number of domains is less than 5(MinDomains), so \"global minimum\" is treated as 0. In this situation, new pod with the same labelSelector cannot be scheduled, because computed skew will be 3(3 - 0) if new Pod is scheduled to any of the three zones, it will violate MaxSkew. Format: int32 false nodeAffinityPolicy string            NodeAffinityPolicy indicates how we will treat Pod's nodeAffinity/nodeSelector when calculating pod topology spread skew. Options are: - Honor: only nodes matching nodeAffinity/nodeSelector are included in the calculations. - Ignore: nodeAffinity/nodeSelector are ignored. All nodes are included in the calculations.   If this value is nil, the behavior is equivalent to the Honor policy. This is a beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread feature flag. false nodeTaintsPolicy string            NodeTaintsPolicy indicates how we will treat node taints when calculating pod topology spread skew. Options are: - Honor: nodes without taints, along with tainted nodes for which the incoming pod has a toleration, are included. - Ignore: node taints are ignored. All nodes are included.   If this value is nil, the behavior is equivalent to the Ignore policy. This is a beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread feature flag. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespectopologyspreadconstraintsindexlabelselector","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.topologySpreadConstraints[index].labelSelector","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>LabelSelector is used to find matching pods. Pods that match this label selector are counted to determine the number of pods in their corresponding topology domain.</p> Name Type Description Required matchExpressions []object            matchExpressions is a list of label selector requirements. The requirements are ANDed. false matchLabels map[string]string            matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespectopologyspreadconstraintsindexlabelselectormatchexpressionsindex","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.topologySpreadConstraints[index].labelSelector.matchExpressions[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.</p> Name Type Description Required key string            key is the label key that the selector applies to. true operator string            operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist. true values []string            values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecvolumesindex","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.volumes[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Volume represents a named volume in a pod that may be accessed by any container in the pod.</p> Name Type Description Required name string            name of the volume. Must be a DNS_LABEL and unique within the pod. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names true awsElasticBlockStore object            awsElasticBlockStore represents an AWS Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore false azureDisk object            azureDisk represents an Azure Data Disk mount on the host and bind mount to the pod. false azureFile object            azureFile represents an Azure File Service mount on the host and bind mount to the pod. false cephfs object            cephFS represents a Ceph FS mount on the host that shares a pod's lifetime false cinder object            cinder represents a cinder volume attached and mounted on kubelets host machine. More info: https://examples.k8s.io/mysql-cinder-pd/README.md false configMap object            configMap represents a configMap that should populate this volume false csi object            csi (Container Storage Interface) represents ephemeral storage that is handled by certain external CSI drivers (Beta feature). false downwardAPI object            downwardAPI represents downward API about the pod that should populate this volume false emptyDir object            emptyDir represents a temporary directory that shares a pod's lifetime. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir false ephemeral object            ephemeral represents a volume that is handled by a cluster storage driver. The volume's lifecycle is tied to the pod that defines it - it will be created before the pod starts, and deleted when the pod is removed.   Use this if: a) the volume is only needed while the pod runs, b) features of normal volumes like restoring from snapshot or capacity    tracking are needed, c) the storage driver is specified through a storage class, and d) the storage driver supports dynamic volume provisioning through    a PersistentVolumeClaim (see EphemeralVolumeSource for more    information on the connection between this volume type    and PersistentVolumeClaim).   Use PersistentVolumeClaim or one of the vendor-specific APIs for volumes that persist for longer than the lifecycle of an individual pod.   Use CSI for light-weight local ephemeral volumes if the CSI driver is meant to be used that way - see the documentation of the driver for more information.   A pod can use both types of ephemeral volumes and persistent volumes at the same time. false fc object            fc represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod. false flexVolume object            flexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin. false flocker object            flocker represents a Flocker volume attached to a kubelet's host machine. This depends on the Flocker control service being running false gcePersistentDisk object            gcePersistentDisk represents a GCE Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk false gitRepo object            gitRepo represents a git repository at a particular revision. DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir into the Pod's container. false glusterfs object            glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime. More info: https://examples.k8s.io/volumes/glusterfs/README.md false hostPath object            hostPath represents a pre-existing file or directory on the host machine that is directly exposed to the container. This is generally used for system agents or other privileged things that are allowed to see the host machine. Most containers will NOT need this. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath --- TODO(jonesdl) We need to restrict who can use host directory mounts and who can/can not mount host directories as read/write. false iscsi object            iscsi represents an ISCSI Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://examples.k8s.io/volumes/iscsi/README.md false nfs object            nfs represents an NFS mount on the host that shares a pod's lifetime More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs false persistentVolumeClaim object            persistentVolumeClaimVolumeSource represents a reference to a PersistentVolumeClaim in the same namespace. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims false photonPersistentDisk object            photonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine false portworxVolume object            portworxVolume represents a portworx volume attached and mounted on kubelets host machine false projected object            projected items for all in one resources secrets, configmaps, and downward API false quobyte object            quobyte represents a Quobyte mount on the host that shares a pod's lifetime false rbd object            rbd represents a Rados Block Device mount on the host that shares a pod's lifetime. More info: https://examples.k8s.io/volumes/rbd/README.md false scaleIO object            scaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes. false secret object            secret represents a secret that should populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret false storageos object            storageOS represents a StorageOS volume attached and mounted on Kubernetes nodes. false vsphereVolume object            vsphereVolume represents a vSphere volume attached and mounted on kubelets host machine false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecvolumesindexawselasticblockstore","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.volumes[index].awsElasticBlockStore","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>awsElasticBlockStore represents an AWS Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore</p> Name Type Description Required volumeID string            volumeID is unique ID of the persistent disk resource in AWS (Amazon EBS volume). More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore true fsType string            fsType is the filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore TODO: how do we prevent errors in the filesystem from compromising the machine false partition integer            partition is the partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as \"1\". Similarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty). Format: int32 false readOnly boolean            readOnly value true will force the readOnly setting in VolumeMounts. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecvolumesindexazuredisk","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.volumes[index].azureDisk","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>azureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.</p> Name Type Description Required diskName string            diskName is the Name of the data disk in the blob storage true diskURI string            diskURI is the URI of data disk in the blob storage true cachingMode string            cachingMode is the Host Caching mode: None, Read Only, Read Write. false fsType string            fsType is Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. false kind string            kind expected values are Shared: multiple blob disks per storage account  Dedicated: single blob disk per storage account  Managed: azure managed data disk (only in managed availability set). defaults to shared false readOnly boolean            readOnly Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecvolumesindexazurefile","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.volumes[index].azureFile","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>azureFile represents an Azure File Service mount on the host and bind mount to the pod.</p> Name Type Description Required secretName string            secretName is the  name of secret that contains Azure Storage Account Name and Key true shareName string            shareName is the azure share Name true readOnly boolean            readOnly defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecvolumesindexcephfs","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.volumes[index].cephfs","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>cephFS represents a Ceph FS mount on the host that shares a pod's lifetime</p> Name Type Description Required monitors []string            monitors is Required: Monitors is a collection of Ceph monitors More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it true path string            path is Optional: Used as the mounted root, rather than the full Ceph tree, default is / false readOnly boolean            readOnly is Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it false secretFile string            secretFile is Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it false secretRef object            secretRef is Optional: SecretRef is reference to the authentication secret for User, default is empty. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it false user string            user is optional: User is the rados user name, default is admin More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecvolumesindexcephfssecretref","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.volumes[index].cephfs.secretRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>secretRef is Optional: SecretRef is reference to the authentication secret for User, default is empty. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it</p> Name Type Description Required name string            Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. TODO: Add other useful fields. apiVersion, kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896. Default:  false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecvolumesindexcinder","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.volumes[index].cinder","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>cinder represents a cinder volume attached and mounted on kubelets host machine. More info: https://examples.k8s.io/mysql-cinder-pd/README.md</p> Name Type Description Required volumeID string            volumeID used to identify the volume in cinder. More info: https://examples.k8s.io/mysql-cinder-pd/README.md true fsType string            fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://examples.k8s.io/mysql-cinder-pd/README.md false readOnly boolean            readOnly defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/mysql-cinder-pd/README.md false secretRef object            secretRef is optional: points to a secret object containing parameters used to connect to OpenStack. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecvolumesindexcindersecretref","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.volumes[index].cinder.secretRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>secretRef is optional: points to a secret object containing parameters used to connect to OpenStack.</p> Name Type Description Required name string            Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. TODO: Add other useful fields. apiVersion, kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896. Default:  false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecvolumesindexconfigmap","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.volumes[index].configMap","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>configMap represents a configMap that should populate this volume</p> Name Type Description Required defaultMode integer            defaultMode is optional: mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set. Format: int32 false items []object            items if unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'. false name string            Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. TODO: Add other useful fields. apiVersion, kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896. Default:  false optional boolean            optional specify whether the ConfigMap or its keys must be defined false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecvolumesindexconfigmapitemsindex","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.volumes[index].configMap.items[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Maps a string key to a path within a volume.</p> Name Type Description Required key string            key is the key to project. true path string            path is the relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'. true mode integer            mode is Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set. Format: int32 false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecvolumesindexcsi","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.volumes[index].csi","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>csi (Container Storage Interface) represents ephemeral storage that is handled by certain external CSI drivers (Beta feature).</p> Name Type Description Required driver string            driver is the name of the CSI driver that handles this volume. Consult with your admin for the correct name as registered in the cluster. true fsType string            fsType to mount. Ex. \"ext4\", \"xfs\", \"ntfs\". If not provided, the empty value is passed to the associated CSI driver which will determine the default filesystem to apply. false nodePublishSecretRef object            nodePublishSecretRef is a reference to the secret object containing sensitive information to pass to the CSI driver to complete the CSI NodePublishVolume and NodeUnpublishVolume calls. This field is optional, and  may be empty if no secret is required. If the secret object contains more than one secret, all secret references are passed. false readOnly boolean            readOnly specifies a read-only configuration for the volume. Defaults to false (read/write). false volumeAttributes map[string]string            volumeAttributes stores driver-specific properties that are passed to the CSI driver. Consult your driver's documentation for supported values. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecvolumesindexcsinodepublishsecretref","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.volumes[index].csi.nodePublishSecretRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>nodePublishSecretRef is a reference to the secret object containing sensitive information to pass to the CSI driver to complete the CSI NodePublishVolume and NodeUnpublishVolume calls. This field is optional, and  may be empty if no secret is required. If the secret object contains more than one secret, all secret references are passed.</p> Name Type Description Required name string            Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. TODO: Add other useful fields. apiVersion, kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896. Default:  false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecvolumesindexdownwardapi","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.volumes[index].downwardAPI","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>downwardAPI represents downward API about the pod that should populate this volume</p> Name Type Description Required defaultMode integer            Optional: mode bits to use on created files by default. Must be a Optional: mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set. Format: int32 false items []object            Items is a list of downward API volume file false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecvolumesindexdownwardapiitemsindex","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.volumes[index].downwardAPI.items[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>DownwardAPIVolumeFile represents information to create the file containing the pod field</p> Name Type Description Required path string            Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..' true fieldRef object            Required: Selects a field of the pod: only annotations, labels, name, namespace and uid are supported. false mode integer            Optional: mode bits used to set permissions on this file, must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set. Format: int32 false resourceFieldRef object            Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecvolumesindexdownwardapiitemsindexfieldref","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.volumes[index].downwardAPI.items[index].fieldRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Required: Selects a field of the pod: only annotations, labels, name, namespace and uid are supported.</p> Name Type Description Required fieldPath string            Path of the field to select in the specified API version. true apiVersion string            Version of the schema the FieldPath is written in terms of, defaults to \"v1\". false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecvolumesindexdownwardapiitemsindexresourcefieldref","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.volumes[index].downwardAPI.items[index].resourceFieldRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.</p> Name Type Description Required resource string            Required: resource to select true containerName string            Container name: required for volumes, optional for env vars false divisor int or string            Specifies the output format of the exposed resources, defaults to \"1\" false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecvolumesindexemptydir","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.volumes[index].emptyDir","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>emptyDir represents a temporary directory that shares a pod's lifetime. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir</p> Name Type Description Required medium string            medium represents what type of storage medium should back this directory. The default is \"\" which means to use the node's default medium. Must be an empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir false sizeLimit int or string            sizeLimit is the total amount of local storage required for this EmptyDir volume. The size limit is also applicable for memory medium. The maximum usage on memory medium EmptyDir would be the minimum value between the SizeLimit specified here and the sum of memory limits of all containers in a pod. The default is nil which means that the limit is undefined. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecvolumesindexephemeral","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.volumes[index].ephemeral","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>ephemeral represents a volume that is handled by a cluster storage driver. The volume's lifecycle is tied to the pod that defines it - it will be created before the pod starts, and deleted when the pod is removed.</p> <p>Use this if: a) the volume is only needed while the pod runs, b) features of normal volumes like restoring from snapshot or capacity    tracking are needed, c) the storage driver is specified through a storage class, and d) the storage driver supports dynamic volume provisioning through    a PersistentVolumeClaim (see EphemeralVolumeSource for more    information on the connection between this volume type    and PersistentVolumeClaim).</p> <p>Use PersistentVolumeClaim or one of the vendor-specific APIs for volumes that persist for longer than the lifecycle of an individual pod.</p> <p>Use CSI for light-weight local ephemeral volumes if the CSI driver is meant to be used that way - see the documentation of the driver for more information.</p> <p>A pod can use both types of ephemeral volumes and persistent volumes at the same time.</p> Name Type Description Required volumeClaimTemplate object            Will be used to create a stand-alone PVC to provision the volume. The pod in which this EphemeralVolumeSource is embedded will be the owner of the PVC, i.e. the PVC will be deleted together with the pod.  The name of the PVC will be `-` where `` is the name from the `PodSpec.Volumes` array entry. Pod validation will reject the pod if the concatenated name is not valid for a PVC (for example, too long).   An existing PVC with that name that is not owned by the pod will *not* be used for the pod to avoid using an unrelated volume by mistake. Starting the pod is then blocked until the unrelated PVC is removed. If such a pre-created PVC is meant to be used by the pod, the PVC has to updated with an owner reference to the pod once the pod exists. Normally this should not be necessary, but it may be useful when manually reconstructing a broken cluster.   This field is read-only and no changes will be made by Kubernetes to the PVC after it has been created.   Required, must not be nil. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecvolumesindexephemeralvolumeclaimtemplate","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.volumes[index].ephemeral.volumeClaimTemplate","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Will be used to create a stand-alone PVC to provision the volume. The pod in which this EphemeralVolumeSource is embedded will be the owner of the PVC, i.e. the PVC will be deleted together with the pod.  The name of the PVC will be <code>&lt;pod name&gt;-&lt;volume name&gt;</code> where <code>&lt;volume name&gt;</code> is the name from the <code>PodSpec.Volumes</code> array entry. Pod validation will reject the pod if the concatenated name is not valid for a PVC (for example, too long).</p> <p>An existing PVC with that name that is not owned by the pod will not be used for the pod to avoid using an unrelated volume by mistake. Starting the pod is then blocked until the unrelated PVC is removed. If such a pre-created PVC is meant to be used by the pod, the PVC has to updated with an owner reference to the pod once the pod exists. Normally this should not be necessary, but it may be useful when manually reconstructing a broken cluster.</p> <p>This field is read-only and no changes will be made by Kubernetes to the PVC after it has been created.</p> <p>Required, must not be nil.</p> Name Type Description Required spec object            The specification for the PersistentVolumeClaim. The entire content is copied unchanged into the PVC that gets created from this template. The same fields as in a PersistentVolumeClaim are also valid here. true metadata object            May contain labels and annotations that will be copied into the PVC when creating it. No other fields are allowed and will be rejected during validation. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecvolumesindexephemeralvolumeclaimtemplatespec","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.volumes[index].ephemeral.volumeClaimTemplate.spec","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>The specification for the PersistentVolumeClaim. The entire content is copied unchanged into the PVC that gets created from this template. The same fields as in a PersistentVolumeClaim are also valid here.</p> Name Type Description Required accessModes []string            accessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1 false dataSource object            dataSource field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. When the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef, and dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified. If the namespace is specified, then dataSourceRef will not be copied to dataSource. false dataSourceRef object            dataSourceRef specifies the object from which to populate the volume with data, if a non-empty volume is desired. This may be any object from a non-empty API group (non core object) or a PersistentVolumeClaim object. When this field is specified, volume binding will only succeed if the type of the specified object matches some installed volume populator or dynamic provisioner. This field will replace the functionality of the dataSource field and as such if both fields are non-empty, they must have the same value. For backwards compatibility, when namespace isn't specified in dataSourceRef, both fields (dataSource and dataSourceRef) will be set to the same value automatically if one of them is empty and the other is non-empty. When namespace is specified in dataSourceRef, dataSource isn't set to the same value and must be empty. There are three important differences between dataSource and dataSourceRef: * While dataSource only allows two specific types of objects, dataSourceRef   allows any non-core object, as well as PersistentVolumeClaim objects. * While dataSource ignores disallowed values (dropping them), dataSourceRef   preserves all values, and generates an error if a disallowed value is   specified. * While dataSource only allows local objects, dataSourceRef allows objects   in any namespaces. (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled. (Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled. false resources object            resources represents the minimum resources the volume should have. If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements that are lower than previous value but must still be higher than capacity recorded in the status field of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources false selector object            selector is a label query over volumes to consider for binding. false storageClassName string            storageClassName is the name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1 false volumeAttributesClassName string            volumeAttributesClassName may be used to set the VolumeAttributesClass used by this claim. If specified, the CSI driver will create or update the volume with the attributes defined in the corresponding VolumeAttributesClass. This has a different purpose than storageClassName, it can be changed after the claim is created. An empty string value means that no VolumeAttributesClass will be applied to the claim but it's not allowed to reset this field to empty string once it is set. If unspecified and the PersistentVolumeClaim is unbound, the default VolumeAttributesClass will be set by the persistentvolume controller if it exists. If the resource referred to by volumeAttributesClass does not exist, this PersistentVolumeClaim will be set to a Pending state, as reflected by the modifyVolumeStatus field, until such as a resource exists. More info: https://kubernetes.io/docs/concepts/storage/volume-attributes-classes/ (Alpha) Using this field requires the VolumeAttributesClass feature gate to be enabled. false volumeMode string            volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec. false volumeName string            volumeName is the binding reference to the PersistentVolume backing this claim. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecvolumesindexephemeralvolumeclaimtemplatespecdatasource","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.volumes[index].ephemeral.volumeClaimTemplate.spec.dataSource","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>dataSource field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. When the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef, and dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified. If the namespace is specified, then dataSourceRef will not be copied to dataSource.</p> Name Type Description Required kind string            Kind is the type of resource being referenced true name string            Name is the name of resource being referenced true apiGroup string            APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecvolumesindexephemeralvolumeclaimtemplatespecdatasourceref","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.volumes[index].ephemeral.volumeClaimTemplate.spec.dataSourceRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>dataSourceRef specifies the object from which to populate the volume with data, if a non-empty volume is desired. This may be any object from a non-empty API group (non core object) or a PersistentVolumeClaim object. When this field is specified, volume binding will only succeed if the type of the specified object matches some installed volume populator or dynamic provisioner. This field will replace the functionality of the dataSource field and as such if both fields are non-empty, they must have the same value. For backwards compatibility, when namespace isn't specified in dataSourceRef, both fields (dataSource and dataSourceRef) will be set to the same value automatically if one of them is empty and the other is non-empty. When namespace is specified in dataSourceRef, dataSource isn't set to the same value and must be empty. There are three important differences between dataSource and dataSourceRef: * While dataSource only allows two specific types of objects, dataSourceRef   allows any non-core object, as well as PersistentVolumeClaim objects. * While dataSource ignores disallowed values (dropping them), dataSourceRef   preserves all values, and generates an error if a disallowed value is   specified. * While dataSource only allows local objects, dataSourceRef allows objects   in any namespaces. (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled. (Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled.</p> Name Type Description Required kind string            Kind is the type of resource being referenced true name string            Name is the name of resource being referenced true apiGroup string            APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required. false namespace string            Namespace is the namespace of resource being referenced Note that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details. (Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecvolumesindexephemeralvolumeclaimtemplatespecresources","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.volumes[index].ephemeral.volumeClaimTemplate.spec.resources","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>resources represents the minimum resources the volume should have. If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements that are lower than previous value but must still be higher than capacity recorded in the status field of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources</p> Name Type Description Required limits map[string]int or string            Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/ false requests map[string]int or string            Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/ false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecvolumesindexephemeralvolumeclaimtemplatespecselector","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.volumes[index].ephemeral.volumeClaimTemplate.spec.selector","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>selector is a label query over volumes to consider for binding.</p> Name Type Description Required matchExpressions []object            matchExpressions is a list of label selector requirements. The requirements are ANDed. false matchLabels map[string]string            matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecvolumesindexephemeralvolumeclaimtemplatespecselectormatchexpressionsindex","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.volumes[index].ephemeral.volumeClaimTemplate.spec.selector.matchExpressions[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.</p> Name Type Description Required key string            key is the label key that the selector applies to. true operator string            operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist. true values []string            values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecvolumesindexephemeralvolumeclaimtemplatemetadata","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.volumes[index].ephemeral.volumeClaimTemplate.metadata","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>May contain labels and annotations that will be copied into the PVC when creating it. No other fields are allowed and will be rejected during validation.</p> Name Type Description Required annotations map[string]string false finalizers []string false labels map[string]string false name string false namespace string false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecvolumesindexfc","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.volumes[index].fc","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>fc represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.</p> Name Type Description Required fsType string            fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. TODO: how do we prevent errors in the filesystem from compromising the machine false lun integer            lun is Optional: FC target lun number Format: int32 false readOnly boolean            readOnly is Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. false targetWWNs []string            targetWWNs is Optional: FC target worldwide names (WWNs) false wwids []string            wwids Optional: FC volume world wide identifiers (wwids) Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecvolumesindexflexvolume","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.volumes[index].flexVolume","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>flexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin.</p> Name Type Description Required driver string            driver is the name of the driver to use for this volume. true fsType string            fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". The default filesystem depends on FlexVolume script. false options map[string]string            options is Optional: this field holds extra command options if any. false readOnly boolean            readOnly is Optional: defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. false secretRef object            secretRef is Optional: secretRef is reference to the secret object containing sensitive information to pass to the plugin scripts. This may be empty if no secret object is specified. If the secret object contains more than one secret, all secrets are passed to the plugin scripts. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecvolumesindexflexvolumesecretref","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.volumes[index].flexVolume.secretRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>secretRef is Optional: secretRef is reference to the secret object containing sensitive information to pass to the plugin scripts. This may be empty if no secret object is specified. If the secret object contains more than one secret, all secrets are passed to the plugin scripts.</p> Name Type Description Required name string            Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. TODO: Add other useful fields. apiVersion, kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896. Default:  false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecvolumesindexflocker","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.volumes[index].flocker","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>flocker represents a Flocker volume attached to a kubelet's host machine. This depends on the Flocker control service being running</p> Name Type Description Required datasetName string            datasetName is Name of the dataset stored as metadata -&gt; name on the dataset for Flocker should be considered as deprecated false datasetUUID string            datasetUUID is the UUID of the dataset. This is unique identifier of a Flocker dataset false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecvolumesindexgcepersistentdisk","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.volumes[index].gcePersistentDisk","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>gcePersistentDisk represents a GCE Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk</p> Name Type Description Required pdName string            pdName is unique name of the PD resource in GCE. Used to identify the disk in GCE. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk true fsType string            fsType is filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk TODO: how do we prevent errors in the filesystem from compromising the machine false partition integer            partition is the partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as \"1\". Similarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty). More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk Format: int32 false readOnly boolean            readOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecvolumesindexgitrepo","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.volumes[index].gitRepo","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>gitRepo represents a git repository at a particular revision. DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir into the Pod's container.</p> Name Type Description Required repository string            repository is the URL true directory string            directory is the target directory name. Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the git repository.  Otherwise, if specified, the volume will contain the git repository in the subdirectory with the given name. false revision string            revision is the commit hash for the specified revision. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecvolumesindexglusterfs","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.volumes[index].glusterfs","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime. More info: https://examples.k8s.io/volumes/glusterfs/README.md</p> Name Type Description Required endpoints string            endpoints is the endpoint name that details Glusterfs topology. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod true path string            path is the Glusterfs volume path. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod true readOnly boolean            readOnly here will force the Glusterfs volume to be mounted with read-only permissions. Defaults to false. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecvolumesindexhostpath","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.volumes[index].hostPath","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>hostPath represents a pre-existing file or directory on the host machine that is directly exposed to the container. This is generally used for system agents or other privileged things that are allowed to see the host machine. Most containers will NOT need this. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath</p> <p>TODO(jonesdl) We need to restrict who can use host directory mounts and who can/can not mount host directories as read/write.</p> Name Type Description Required path string            path of the directory on the host. If the path is a symlink, it will follow the link to the real path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath true type string            type for HostPath Volume Defaults to \"\" More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecvolumesindexiscsi","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.volumes[index].iscsi","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>iscsi represents an ISCSI Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://examples.k8s.io/volumes/iscsi/README.md</p> Name Type Description Required iqn string            iqn is the target iSCSI Qualified Name. true lun integer            lun represents iSCSI Target Lun number. Format: int32 true targetPortal string            targetPortal is iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260). true chapAuthDiscovery boolean            chapAuthDiscovery defines whether support iSCSI Discovery CHAP authentication false chapAuthSession boolean            chapAuthSession defines whether support iSCSI Session CHAP authentication false fsType string            fsType is the filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi TODO: how do we prevent errors in the filesystem from compromising the machine false initiatorName string            initiatorName is the custom iSCSI Initiator Name. If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface : will be created for the connection. false iscsiInterface string            iscsiInterface is the interface Name that uses an iSCSI transport. Defaults to 'default' (tcp). false portals []string            portals is the iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260). false readOnly boolean            readOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. false secretRef object            secretRef is the CHAP Secret for iSCSI target and initiator authentication false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecvolumesindexiscsisecretref","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.volumes[index].iscsi.secretRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>secretRef is the CHAP Secret for iSCSI target and initiator authentication</p> Name Type Description Required name string            Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. TODO: Add other useful fields. apiVersion, kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896. Default:  false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecvolumesindexnfs","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.volumes[index].nfs","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>nfs represents an NFS mount on the host that shares a pod's lifetime More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs</p> Name Type Description Required path string            path that is exported by the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs true server string            server is the hostname or IP address of the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs true readOnly boolean            readOnly here will force the NFS export to be mounted with read-only permissions. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecvolumesindexpersistentvolumeclaim","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.volumes[index].persistentVolumeClaim","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>persistentVolumeClaimVolumeSource represents a reference to a PersistentVolumeClaim in the same namespace. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims</p> Name Type Description Required claimName string            claimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims true readOnly boolean            readOnly Will force the ReadOnly setting in VolumeMounts. Default false. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecvolumesindexphotonpersistentdisk","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.volumes[index].photonPersistentDisk","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>photonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine</p> Name Type Description Required pdID string            pdID is the ID that identifies Photon Controller persistent disk true fsType string            fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecvolumesindexportworxvolume","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.volumes[index].portworxVolume","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>portworxVolume represents a portworx volume attached and mounted on kubelets host machine</p> Name Type Description Required volumeID string            volumeID uniquely identifies a Portworx volume true fsType string            fSType represents the filesystem type to mount Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\". Implicitly inferred to be \"ext4\" if unspecified. false readOnly boolean            readOnly defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecvolumesindexprojected","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.volumes[index].projected","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>projected items for all in one resources secrets, configmaps, and downward API</p> Name Type Description Required defaultMode integer            defaultMode are the mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set. Format: int32 false sources []object            sources is the list of volume projections false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecvolumesindexprojectedsourcesindex","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.volumes[index].projected.sources[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Projection that may be projected along with other supported volume types</p> Name Type Description Required clusterTrustBundle object            ClusterTrustBundle allows a pod to access the `.spec.trustBundle` field of ClusterTrustBundle objects in an auto-updating file.   Alpha, gated by the ClusterTrustBundleProjection feature gate.   ClusterTrustBundle objects can either be selected by name, or by the combination of signer name and a label selector.   Kubelet performs aggressive normalization of the PEM contents written into the pod filesystem.  Esoteric PEM features such as inter-block comments and block headers are stripped.  Certificates are deduplicated. The ordering of certificates within the file is arbitrary, and Kubelet may change the order over time. false configMap object            configMap information about the configMap data to project false downwardAPI object            downwardAPI information about the downwardAPI data to project false secret object            secret information about the secret data to project false serviceAccountToken object            serviceAccountToken is information about the serviceAccountToken data to project false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecvolumesindexprojectedsourcesindexclustertrustbundle","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.volumes[index].projected.sources[index].clusterTrustBundle","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>ClusterTrustBundle allows a pod to access the <code>.spec.trustBundle</code> field of ClusterTrustBundle objects in an auto-updating file.</p> <p>Alpha, gated by the ClusterTrustBundleProjection feature gate.</p> <p>ClusterTrustBundle objects can either be selected by name, or by the combination of signer name and a label selector.</p> <p>Kubelet performs aggressive normalization of the PEM contents written into the pod filesystem.  Esoteric PEM features such as inter-block comments and block headers are stripped.  Certificates are deduplicated. The ordering of certificates within the file is arbitrary, and Kubelet may change the order over time.</p> Name Type Description Required path string            Relative path from the volume root to write the bundle. true labelSelector object            Select all ClusterTrustBundles that match this label selector.  Only has effect if signerName is set.  Mutually-exclusive with name.  If unset, interpreted as \"match nothing\".  If set but empty, interpreted as \"match everything\". false name string            Select a single ClusterTrustBundle by object name.  Mutually-exclusive with signerName and labelSelector. false optional boolean            If true, don't block pod startup if the referenced ClusterTrustBundle(s) aren't available.  If using name, then the named ClusterTrustBundle is allowed not to exist.  If using signerName, then the combination of signerName and labelSelector is allowed to match zero ClusterTrustBundles. false signerName string            Select all ClusterTrustBundles that match this signer name. Mutually-exclusive with name.  The contents of all selected ClusterTrustBundles will be unified and deduplicated. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecvolumesindexprojectedsourcesindexclustertrustbundlelabelselector","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.volumes[index].projected.sources[index].clusterTrustBundle.labelSelector","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Select all ClusterTrustBundles that match this label selector.  Only has effect if signerName is set.  Mutually-exclusive with name.  If unset, interpreted as \"match nothing\".  If set but empty, interpreted as \"match everything\".</p> Name Type Description Required matchExpressions []object            matchExpressions is a list of label selector requirements. The requirements are ANDed. false matchLabels map[string]string            matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecvolumesindexprojectedsourcesindexclustertrustbundlelabelselectormatchexpressionsindex","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.volumes[index].projected.sources[index].clusterTrustBundle.labelSelector.matchExpressions[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.</p> Name Type Description Required key string            key is the label key that the selector applies to. true operator string            operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist. true values []string            values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecvolumesindexprojectedsourcesindexconfigmap","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.volumes[index].projected.sources[index].configMap","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>configMap information about the configMap data to project</p> Name Type Description Required items []object            items if unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'. false name string            Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. TODO: Add other useful fields. apiVersion, kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896. Default:  false optional boolean            optional specify whether the ConfigMap or its keys must be defined false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecvolumesindexprojectedsourcesindexconfigmapitemsindex","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.volumes[index].projected.sources[index].configMap.items[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Maps a string key to a path within a volume.</p> Name Type Description Required key string            key is the key to project. true path string            path is the relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'. true mode integer            mode is Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set. Format: int32 false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecvolumesindexprojectedsourcesindexdownwardapi","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.volumes[index].projected.sources[index].downwardAPI","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>downwardAPI information about the downwardAPI data to project</p> Name Type Description Required items []object            Items is a list of DownwardAPIVolume file false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecvolumesindexprojectedsourcesindexdownwardapiitemsindex","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.volumes[index].projected.sources[index].downwardAPI.items[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>DownwardAPIVolumeFile represents information to create the file containing the pod field</p> Name Type Description Required path string            Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..' true fieldRef object            Required: Selects a field of the pod: only annotations, labels, name, namespace and uid are supported. false mode integer            Optional: mode bits used to set permissions on this file, must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set. Format: int32 false resourceFieldRef object            Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecvolumesindexprojectedsourcesindexdownwardapiitemsindexfieldref","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.volumes[index].projected.sources[index].downwardAPI.items[index].fieldRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Required: Selects a field of the pod: only annotations, labels, name, namespace and uid are supported.</p> Name Type Description Required fieldPath string            Path of the field to select in the specified API version. true apiVersion string            Version of the schema the FieldPath is written in terms of, defaults to \"v1\". false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecvolumesindexprojectedsourcesindexdownwardapiitemsindexresourcefieldref","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.volumes[index].projected.sources[index].downwardAPI.items[index].resourceFieldRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.</p> Name Type Description Required resource string            Required: resource to select true containerName string            Container name: required for volumes, optional for env vars false divisor int or string            Specifies the output format of the exposed resources, defaults to \"1\" false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecvolumesindexprojectedsourcesindexsecret","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.volumes[index].projected.sources[index].secret","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>secret information about the secret data to project</p> Name Type Description Required items []object            items if unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'. false name string            Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. TODO: Add other useful fields. apiVersion, kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896. Default:  false optional boolean            optional field specify whether the Secret or its key must be defined false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecvolumesindexprojectedsourcesindexsecretitemsindex","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.volumes[index].projected.sources[index].secret.items[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Maps a string key to a path within a volume.</p> Name Type Description Required key string            key is the key to project. true path string            path is the relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'. true mode integer            mode is Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set. Format: int32 false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecvolumesindexprojectedsourcesindexserviceaccounttoken","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.volumes[index].projected.sources[index].serviceAccountToken","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>serviceAccountToken is information about the serviceAccountToken data to project</p> Name Type Description Required path string            path is the path relative to the mount point of the file to project the token into. true audience string            audience is the intended audience of the token. A recipient of a token must identify itself with an identifier specified in the audience of the token, and otherwise should reject the token. The audience defaults to the identifier of the apiserver. false expirationSeconds integer            expirationSeconds is the requested duration of validity of the service account token. As the token approaches expiration, the kubelet volume plugin will proactively rotate the service account token. The kubelet will start trying to rotate the token if the token is older than 80 percent of its time to live or if the token is older than 24 hours.Defaults to 1 hour and must be at least 10 minutes. Format: int64 false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecvolumesindexquobyte","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.volumes[index].quobyte","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>quobyte represents a Quobyte mount on the host that shares a pod's lifetime</p> Name Type Description Required registry string            registry represents a single or multiple Quobyte Registry services specified as a string as host:port pair (multiple entries are separated with commas) which acts as the central registry for volumes true volume string            volume is a string that references an already created Quobyte volume by name. true group string            group to map volume access to Default is no group false readOnly boolean            readOnly here will force the Quobyte volume to be mounted with read-only permissions. Defaults to false. false tenant string            tenant owning the given Quobyte volume in the Backend Used with dynamically provisioned Quobyte volumes, value is set by the plugin false user string            user to map volume access to Defaults to serivceaccount user false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecvolumesindexrbd","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.volumes[index].rbd","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>rbd represents a Rados Block Device mount on the host that shares a pod's lifetime. More info: https://examples.k8s.io/volumes/rbd/README.md</p> Name Type Description Required image string            image is the rados image name. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it true monitors []string            monitors is a collection of Ceph monitors. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it true fsType string            fsType is the filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd TODO: how do we prevent errors in the filesystem from compromising the machine false keyring string            keyring is the path to key ring for RBDUser. Default is /etc/ceph/keyring. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it false pool string            pool is the rados pool name. Default is rbd. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it false readOnly boolean            readOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it false secretRef object            secretRef is name of the authentication secret for RBDUser. If provided overrides keyring. Default is nil. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it false user string            user is the rados user name. Default is admin. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecvolumesindexrbdsecretref","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.volumes[index].rbd.secretRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>secretRef is name of the authentication secret for RBDUser. If provided overrides keyring. Default is nil. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it</p> Name Type Description Required name string            Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. TODO: Add other useful fields. apiVersion, kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896. Default:  false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecvolumesindexscaleio","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.volumes[index].scaleIO","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>scaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.</p> Name Type Description Required gateway string            gateway is the host address of the ScaleIO API Gateway. true secretRef object            secretRef references to the secret for ScaleIO user and other sensitive information. If this is not provided, Login operation will fail. true system string            system is the name of the storage system as configured in ScaleIO. true fsType string            fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Default is \"xfs\". false protectionDomain string            protectionDomain is the name of the ScaleIO Protection Domain for the configured storage. false readOnly boolean            readOnly Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. false sslEnabled boolean            sslEnabled Flag enable/disable SSL communication with Gateway, default false false storageMode string            storageMode indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned. Default is ThinProvisioned. false storagePool string            storagePool is the ScaleIO Storage Pool associated with the protection domain. false volumeName string            volumeName is the name of a volume already created in the ScaleIO system that is associated with this volume source. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecvolumesindexscaleiosecretref","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.volumes[index].scaleIO.secretRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>secretRef references to the secret for ScaleIO user and other sensitive information. If this is not provided, Login operation will fail.</p> Name Type Description Required name string            Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. TODO: Add other useful fields. apiVersion, kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896. Default:  false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecvolumesindexsecret","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.volumes[index].secret","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>secret represents a secret that should populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret</p> Name Type Description Required defaultMode integer            defaultMode is Optional: mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set. Format: int32 false items []object            items If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'. false optional boolean            optional field specify whether the Secret or its keys must be defined false secretName string            secretName is the name of the secret in the pod's namespace to use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecvolumesindexsecretitemsindex","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.volumes[index].secret.items[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Maps a string key to a path within a volume.</p> Name Type Description Required key string            key is the key to project. true path string            path is the relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'. true mode integer            mode is Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set. Format: int32 false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecvolumesindexstorageos","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.volumes[index].storageos","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>storageOS represents a StorageOS volume attached and mounted on Kubernetes nodes.</p> Name Type Description Required fsType string            fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. false readOnly boolean            readOnly defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. false secretRef object            secretRef specifies the secret to use for obtaining the StorageOS API credentials.  If not specified, default values will be attempted. false volumeName string            volumeName is the human-readable name of the StorageOS volume.  Volume names are only unique within a namespace. false volumeNamespace string            volumeNamespace specifies the scope of the volume within StorageOS.  If no namespace is specified then the Pod's namespace will be used.  This allows the Kubernetes name scoping to be mirrored within StorageOS for tighter integration. Set VolumeName to any name to override the default behaviour. Set to \"default\" if you are not using namespaces within StorageOS. Namespaces that do not pre-exist within StorageOS will be created. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecvolumesindexstorageossecretref","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.volumes[index].storageos.secretRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>secretRef specifies the secret to use for obtaining the StorageOS API credentials.  If not specified, default values will be attempted.</p> Name Type Description Required name string            Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. TODO: Add other useful fields. apiVersion, kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896. Default:  false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespectemplatespecvolumesindexvspherevolume","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.template.spec.volumes[index].vsphereVolume","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>vsphereVolume represents a vSphere volume attached and mounted on kubelets host machine</p> Name Type Description Required volumePath string            volumePath is the path that identifies vSphere volume vmdk true fsType string            fsType is filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. false storagePolicyID string            storagePolicyID is the storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName. false storagePolicyName string            storagePolicyName is the storage Policy Based Management (SPBM) profile name. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespecpodfailurepolicy","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.podFailurePolicy","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Specifies the policy of handling failed pods. In particular, it allows to specify the set of actions and conditions which need to be satisfied to take the associated action. If empty, the default behaviour applies - the counter of failed pods, represented by the jobs's .status.failed field, is incremented and it is checked against the backoffLimit. This field cannot be used in combination with restartPolicy=OnFailure.</p> <p>This field is beta-level. It can be used when the <code>JobPodFailurePolicy</code> feature gate is enabled (enabled by default).</p> Name Type Description Required rules []object            A list of pod failure policy rules. The rules are evaluated in order. Once a rule matches a Pod failure, the remaining of the rules are ignored. When no rule matches the Pod failure, the default handling applies - the counter of pod failures is incremented and it is checked against the backoffLimit. At most 20 elements are allowed. true"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespecpodfailurepolicyrulesindex","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.podFailurePolicy.rules[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>PodFailurePolicyRule describes how a pod failure is handled when the requirements are met. One of onExitCodes and onPodConditions, but not both, can be used in each rule.</p> Name Type Description Required action string            Specifies the action taken on a pod failure when the requirements are satisfied. Possible values are:   - FailJob: indicates that the pod's job is marked as Failed and all   running pods are terminated. - FailIndex: indicates that the pod's index is marked as Failed and will   not be restarted.   This value is beta-level. It can be used when the   `JobBackoffLimitPerIndex` feature gate is enabled (enabled by default). - Ignore: indicates that the counter towards the .backoffLimit is not   incremented and a replacement pod is created. - Count: indicates that the pod is handled in the default way - the   counter towards the .backoffLimit is incremented. Additional values are considered to be added in the future. Clients should react to an unknown action by skipping the rule. true onExitCodes object            Represents the requirement on the container exit codes. false onPodConditions []object            Represents the requirement on the pod conditions. The requirement is represented as a list of pod condition patterns. The requirement is satisfied if at least one pattern matches an actual pod condition. At most 20 elements are allowed. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespecpodfailurepolicyrulesindexonexitcodes","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.podFailurePolicy.rules[index].onExitCodes","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Represents the requirement on the container exit codes.</p> Name Type Description Required operator string            Represents the relationship between the container exit code(s) and the specified values. Containers completed with success (exit code 0) are excluded from the requirement check. Possible values are:   - In: the requirement is satisfied if at least one container exit code   (might be multiple if there are multiple containers not restricted   by the 'containerName' field) is in the set of specified values. - NotIn: the requirement is satisfied if at least one container exit code   (might be multiple if there are multiple containers not restricted   by the 'containerName' field) is not in the set of specified values. Additional values are considered to be added in the future. Clients should react to an unknown operator by assuming the requirement is not satisfied. true values []integer            Specifies the set of values. Each returned container exit code (might be multiple in case of multiple containers) is checked against this set of values with respect to the operator. The list of values must be ordered and must not contain duplicates. Value '0' cannot be used for the In operator. At least one element is required. At most 255 elements are allowed. true containerName string            Restricts the check for exit codes to the container with the specified name. When null, the rule applies to all containers. When specified, it should match one the container or initContainer names in the pod template. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespecpodfailurepolicyrulesindexonpodconditionsindex","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.podFailurePolicy.rules[index].onPodConditions[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>PodFailurePolicyOnPodConditionsPattern describes a pattern for matching an actual pod condition type.</p> Name Type Description Required status string            Specifies the required Pod condition status. To match a pod condition it is required that the specified status equals the pod condition status. Defaults to True. true type string            Specifies the required Pod condition type. To match a pod condition it is required that specified type equals the pod condition type. true"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespecselector","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.selector","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>A label query over pods that should match the pod count. Normally, the system sets this field for you. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors</p> Name Type Description Required matchExpressions []object            matchExpressions is a list of label selector requirements. The requirements are ANDed. false matchLabels map[string]string            matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespecselectormatchexpressionsindex","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.selector.matchExpressions[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.</p> Name Type Description Required key string            key is the label key that the selector applies to. true operator string            operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist. true values []string            values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespecsuccesspolicy","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.successPolicy","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>successPolicy specifies the policy when the Job can be declared as succeeded. If empty, the default behavior applies - the Job is declared as succeeded only when the number of succeeded pods equals to the completions. When the field is specified, it must be immutable and works only for the Indexed Jobs. Once the Job meets the SuccessPolicy, the lingering pods are terminated.</p> <p>This field  is alpha-level. To use this field, you must enable the <code>JobSuccessPolicy</code> feature gate (disabled by default).</p> Name Type Description Required rules []object            rules represents the list of alternative rules for the declaring the Jobs as successful before `.status.succeeded &gt;= .spec.completions`. Once any of the rules are met, the \"SucceededCriteriaMet\" condition is added, and the lingering pods are removed. The terminal state for such a Job has the \"Complete\" condition. Additionally, these rules are evaluated in order; Once the Job meets one of the rules, other rules are ignored. At most 20 elements are allowed. true"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecprovisionjobjobspectemplatespecsuccesspolicyrulesindex","title":"RemoteMachine.spec.provisionJob.jobSpecTemplate.spec.successPolicy.rules[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>SuccessPolicyRule describes rule for declaring a Job as succeeded. Each rule must have at least one of the \"succeededIndexes\" or \"succeededCount\" specified.</p> Name Type Description Required succeededCount integer            succeededCount specifies the minimal required size of the actual set of the succeeded indexes for the Job. When succeededCount is used along with succeededIndexes, the check is constrained only to the set of indexes specified by succeededIndexes. For example, given that succeededIndexes is \"1-4\", succeededCount is \"3\", and completed indexes are \"1\", \"3\", and \"5\", the Job isn't declared as succeeded because only \"1\" and \"3\" indexes are considered in that rules. When this field is null, this doesn't default to any value and is never evaluated at any time. When specified it needs to be a positive integer. Format: int32 false succeededIndexes string            succeededIndexes specifies the set of indexes which need to be contained in the actual set of the succeeded indexes for the Job. The list of indexes must be within 0 to \".spec.completions-1\" and must not contain duplicates. At least one element is required. The indexes are represented as intervals separated by commas. The intervals can be a decimal integer or a pair of decimal integers separated by a hyphen. The number are listed in represented by the first and last element of the series, separated by a hyphen. For example, if the completed indexes are 1, 3, 4, 5 and 7, they are represented as \"1,3-5,7\". When this field is null, this field doesn't default to any value and is never evaluated at any time. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinespecsshkeyref","title":"RemoteMachine.spec.sshKeyRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>SSHKeyRef is a reference to a secret that contains the SSH private key. The key must be placed on the secret using the key \"value\".</p> Name Type Description Required name string            Name is the name of the secret. true"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinestatus","title":"RemoteMachine.status","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>RemoteMachineStatus defines the observed state of RemoteMachine</p> Name Type Description Required failureMessage string false failureReason string false ready boolean            Ready denotes that the remote machine is ready to be used. false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinetemplate","title":"RemoteMachineTemplate","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> Name Type Description Required apiVersion string infrastructure.cluster.x-k8s.io/v1beta1 true kind string RemoteMachineTemplate true metadata object Refer to the Kubernetes API documentation for the fields of the `metadata` field. true spec object false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinetemplatespec","title":"RemoteMachineTemplate.spec","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> Name Type Description Required template object true"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinetemplatespectemplate","title":"RemoteMachineTemplate.spec.template","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> Name Type Description Required metadata object false spec object false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinetemplatespectemplatemetadata","title":"RemoteMachineTemplate.spec.template.metadata","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> Name Type Description Required annotations map[string]string false finalizers []string false labels map[string]string false name string false namespace string false"},{"location":"resource-reference/infrastructure.cluster.x-k8s.io-v1beta1/#remotemachinetemplatespectemplatespec","title":"RemoteMachineTemplate.spec.template.spec","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> Name Type Description Required pool string true"},{"location":"resource-reference/k0smotron.io-v1beta1/","title":"API Reference","text":"<p>Packages:</p> <ul> <li>k0smotron.io/v1beta1</li> </ul>"},{"location":"resource-reference/k0smotron.io-v1beta1/#k0smotroniov1beta1","title":"k0smotron.io/v1beta1","text":"<p>Resource Types:</p> <ul> <li>Cluster</li> </ul> <ul> <li>JoinTokenRequest</li> </ul>"},{"location":"resource-reference/k0smotron.io-v1beta1/#cluster","title":"Cluster","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Cluster is the Schema for the k0smotronclusters API</p> Name Type Description Required apiVersion string k0smotron.io/v1beta1 true kind string Cluster true metadata object Refer to the Kubernetes API documentation for the fields of the `metadata` field. true spec object            ClusterSpec defines the desired state of K0smotronCluster Default: map[service:map[type:NodePort]] false status object            ClusterStatus defines the observed state of K0smotronCluster false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspec","title":"Cluster.spec","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>ClusterSpec defines the desired state of K0smotronCluster</p> Name Type Description Required certificateRefs []object            CertificateRefs defines the certificate references. false controllerPlaneFlags []string            ControlPlaneFlags allows to configure additional flags for k0s control plane and to override existing ones. The default flags are kept unless they are overriden explicitly. Flags with arguments must be specified as a single string, e.g. --some-flag=argument false etcd object            Etcd defines the etcd configuration. Default: map[image:quay.io/k0sproject/etcd:v3.5.13 persistence:map[]] false externalAddress string            ExternalAddress defines k0s external address. See https://docs.k0sproject.io/stable/configuration/#specapi Will be detected automatically for service type LoadBalancer. false image string            Image defines the k0s image to be deployed. If empty k0smotron will pick it automatically. Must not include the image tag. Default: k0sproject/k0s false k0sConfig object            k0sConfig defines the k0s configuration. Note, that some fields will be overwritten by k0smotron. If empty, will be used default configuration. @see https://docs.k0sproject.io/stable/configuration/ false kineDataSourceSecretName string            KineDataSourceSecretName defines the name of kine datasource URL secret. false kineDataSourceURL string            KineDataSourceURL defines the kine datasource URL. false manifests []object            Manifests allows to specify list of volumes with manifests to be deployed in the cluster. The volumes will be mounted in /var/lib/k0s/manifests/, for this reason each manifest is a stack. K0smotron allows any kind of volume, but the recommendation is to use secrets and configmaps. For more information check: https://docs.k0sproject.io/stable/manifests/ and https://kubernetes.io/docs/concepts/storage/volumes false monitoring object            Monitoring defines the monitoring configuration. false mounts []object            Mounts allows to specify list of volumes with any files to be mounted in the controlplane pod. K0smotron allows any kind of volume, but the recommendation is to use secrets and configmaps. For more information check: https://kubernetes.io/docs/concepts/storage/volumes false persistence object            Persistence defines the persistence configuration. If empty k0smotron will use emptyDir as a volume. See https://docs.k0smotron.io/stable/configuration/#persistence false replicas integer            Replicas is the desired number of replicas of the k0s control planes. If unspecified, defaults to 1. If the value is above 1, k0smotron requires kine datasource URL to be set. Recommended value is 3. Format: int32 Default: 1 false resources object            Resources describes the compute resource requirements for the control plane pods. false service object            Service defines the service configuration. Default: map[apiPort:30443 konnectivityPort:30132 type:ClusterIP] false serviceAccount string            ServiceAccount defines the service account to be used by both k0s and etcd StatefulSets. false topologySpreadConstraints []object            TopologySpreadConstraints will be passed directly to BOTH etcd and k0s pods. See https://kubernetes.io/docs/concepts/scheduling-eviction/topology-spread-constraints/ for more information. false version string            Version defines the k0s version to be deployed. If empty k0smotron will pick it automatically. false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspeccertificaterefsindex","title":"Cluster.spec.certificateRefs[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> Name Type Description Required type enum Enum: ca, sa, proxy, etcd, apiserver-etcd-client, etcd-peer, etcd-server true name string false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecetcd","title":"Cluster.spec.etcd","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Etcd defines the etcd configuration.</p> Name Type Description Required image string            Image defines the etcd image to be deployed. Default: quay.io/k0sproject/etcd:v3.5.13 true args []string            Args defines the etcd arguments. false autoDeletePVCs boolean            AutoDeletePVCs defines whether the PVC should be deleted when the etcd cluster is deleted. Default: false false defragJob object            DefragJob defines the etcd defragmentation job configuration. false persistence object            Persistence defines the persistence configuration. false resources object            Resources defines the compute resource requirements for the etcd container. false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecetcddefragjob","title":"Cluster.spec.etcd.defragJob","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>DefragJob defines the etcd defragmentation job configuration.</p> Name Type Description Required enabled boolean            Enabled enables the etcd defragmentation job. Default: false true image string            Image defines the etcd defragmentation job image. Default: ghcr.io/ahrtr/etcd-defrag:v0.16.0 true rule string            Rule defines the etcd defragmentation job defrag-rule. For more information check: https://github.com/ahrtr/etcd-defrag/tree/main?tab=readme-ov-file#defragmentation-rule Default: dbQuotaUsage &gt; 0.8 || dbSize - dbSizeInUse &gt; 200*1024*1024 true schedule string            Schedule defines the etcd defragmentation job schedule. Default: 0 12 * * * true"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecetcdpersistence","title":"Cluster.spec.etcd.persistence","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Persistence defines the persistence configuration.</p> Name Type Description Required size int or string            Size defines the size of the etcd volume. Default: 1Gi Default: 1Gi false storageClass string            StorageClass defines the storage class to be used for etcd persistence. If empty, will be used the default storage class. false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecetcdresources","title":"Cluster.spec.etcd.resources","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Resources defines the compute resource requirements for the etcd container.</p> Name Type Description Required claims []object            Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container.   This is an alpha field and requires enabling the DynamicResourceAllocation feature gate.   This field is immutable. It can only be set for containers. false limits map[string]int or string            Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/ false requests map[string]int or string            Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/ false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecetcdresourcesclaimsindex","title":"Cluster.spec.etcd.resources.claims[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>ResourceClaim references one entry in PodSpec.ResourceClaims.</p> Name Type Description Required name string            Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container. true"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmanifestsindex","title":"Cluster.spec.manifests[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Volume represents a named volume in a pod that may be accessed by any container in the pod.</p> Name Type Description Required name string            name of the volume. Must be a DNS_LABEL and unique within the pod. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names true awsElasticBlockStore object            awsElasticBlockStore represents an AWS Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore false azureDisk object            azureDisk represents an Azure Data Disk mount on the host and bind mount to the pod. false azureFile object            azureFile represents an Azure File Service mount on the host and bind mount to the pod. false cephfs object            cephFS represents a Ceph FS mount on the host that shares a pod's lifetime false cinder object            cinder represents a cinder volume attached and mounted on kubelets host machine. More info: https://examples.k8s.io/mysql-cinder-pd/README.md false configMap object            configMap represents a configMap that should populate this volume false csi object            csi (Container Storage Interface) represents ephemeral storage that is handled by certain external CSI drivers (Beta feature). false downwardAPI object            downwardAPI represents downward API about the pod that should populate this volume false emptyDir object            emptyDir represents a temporary directory that shares a pod's lifetime. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir false ephemeral object            ephemeral represents a volume that is handled by a cluster storage driver. The volume's lifecycle is tied to the pod that defines it - it will be created before the pod starts, and deleted when the pod is removed.   Use this if: a) the volume is only needed while the pod runs, b) features of normal volumes like restoring from snapshot or capacity    tracking are needed, c) the storage driver is specified through a storage class, and d) the storage driver supports dynamic volume provisioning through    a PersistentVolumeClaim (see EphemeralVolumeSource for more    information on the connection between this volume type    and PersistentVolumeClaim).   Use PersistentVolumeClaim or one of the vendor-specific APIs for volumes that persist for longer than the lifecycle of an individual pod.   Use CSI for light-weight local ephemeral volumes if the CSI driver is meant to be used that way - see the documentation of the driver for more information.   A pod can use both types of ephemeral volumes and persistent volumes at the same time. false fc object            fc represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod. false flexVolume object            flexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin. false flocker object            flocker represents a Flocker volume attached to a kubelet's host machine. This depends on the Flocker control service being running false gcePersistentDisk object            gcePersistentDisk represents a GCE Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk false gitRepo object            gitRepo represents a git repository at a particular revision. DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir into the Pod's container. false glusterfs object            glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime. More info: https://examples.k8s.io/volumes/glusterfs/README.md false hostPath object            hostPath represents a pre-existing file or directory on the host machine that is directly exposed to the container. This is generally used for system agents or other privileged things that are allowed to see the host machine. Most containers will NOT need this. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath --- TODO(jonesdl) We need to restrict who can use host directory mounts and who can/can not mount host directories as read/write. false iscsi object            iscsi represents an ISCSI Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://examples.k8s.io/volumes/iscsi/README.md false nfs object            nfs represents an NFS mount on the host that shares a pod's lifetime More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs false persistentVolumeClaim object            persistentVolumeClaimVolumeSource represents a reference to a PersistentVolumeClaim in the same namespace. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims false photonPersistentDisk object            photonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine false portworxVolume object            portworxVolume represents a portworx volume attached and mounted on kubelets host machine false projected object            projected items for all in one resources secrets, configmaps, and downward API false quobyte object            quobyte represents a Quobyte mount on the host that shares a pod's lifetime false rbd object            rbd represents a Rados Block Device mount on the host that shares a pod's lifetime. More info: https://examples.k8s.io/volumes/rbd/README.md false scaleIO object            scaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes. false secret object            secret represents a secret that should populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret false storageos object            storageOS represents a StorageOS volume attached and mounted on Kubernetes nodes. false vsphereVolume object            vsphereVolume represents a vSphere volume attached and mounted on kubelets host machine false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmanifestsindexawselasticblockstore","title":"Cluster.spec.manifests[index].awsElasticBlockStore","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>awsElasticBlockStore represents an AWS Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore</p> Name Type Description Required volumeID string            volumeID is unique ID of the persistent disk resource in AWS (Amazon EBS volume). More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore true fsType string            fsType is the filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore TODO: how do we prevent errors in the filesystem from compromising the machine false partition integer            partition is the partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as \"1\". Similarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty). Format: int32 false readOnly boolean            readOnly value true will force the readOnly setting in VolumeMounts. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmanifestsindexazuredisk","title":"Cluster.spec.manifests[index].azureDisk","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>azureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.</p> Name Type Description Required diskName string            diskName is the Name of the data disk in the blob storage true diskURI string            diskURI is the URI of data disk in the blob storage true cachingMode string            cachingMode is the Host Caching mode: None, Read Only, Read Write. false fsType string            fsType is Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. false kind string            kind expected values are Shared: multiple blob disks per storage account  Dedicated: single blob disk per storage account  Managed: azure managed data disk (only in managed availability set). defaults to shared false readOnly boolean            readOnly Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmanifestsindexazurefile","title":"Cluster.spec.manifests[index].azureFile","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>azureFile represents an Azure File Service mount on the host and bind mount to the pod.</p> Name Type Description Required secretName string            secretName is the  name of secret that contains Azure Storage Account Name and Key true shareName string            shareName is the azure share Name true readOnly boolean            readOnly defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmanifestsindexcephfs","title":"Cluster.spec.manifests[index].cephfs","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>cephFS represents a Ceph FS mount on the host that shares a pod's lifetime</p> Name Type Description Required monitors []string            monitors is Required: Monitors is a collection of Ceph monitors More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it true path string            path is Optional: Used as the mounted root, rather than the full Ceph tree, default is / false readOnly boolean            readOnly is Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it false secretFile string            secretFile is Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it false secretRef object            secretRef is Optional: SecretRef is reference to the authentication secret for User, default is empty. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it false user string            user is optional: User is the rados user name, default is admin More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmanifestsindexcephfssecretref","title":"Cluster.spec.manifests[index].cephfs.secretRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>secretRef is Optional: SecretRef is reference to the authentication secret for User, default is empty. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it</p> Name Type Description Required name string            Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. TODO: Add other useful fields. apiVersion, kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896. Default:  false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmanifestsindexcinder","title":"Cluster.spec.manifests[index].cinder","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>cinder represents a cinder volume attached and mounted on kubelets host machine. More info: https://examples.k8s.io/mysql-cinder-pd/README.md</p> Name Type Description Required volumeID string            volumeID used to identify the volume in cinder. More info: https://examples.k8s.io/mysql-cinder-pd/README.md true fsType string            fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://examples.k8s.io/mysql-cinder-pd/README.md false readOnly boolean            readOnly defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/mysql-cinder-pd/README.md false secretRef object            secretRef is optional: points to a secret object containing parameters used to connect to OpenStack. false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmanifestsindexcindersecretref","title":"Cluster.spec.manifests[index].cinder.secretRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>secretRef is optional: points to a secret object containing parameters used to connect to OpenStack.</p> Name Type Description Required name string            Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. TODO: Add other useful fields. apiVersion, kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896. Default:  false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmanifestsindexconfigmap","title":"Cluster.spec.manifests[index].configMap","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>configMap represents a configMap that should populate this volume</p> Name Type Description Required defaultMode integer            defaultMode is optional: mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set. Format: int32 false items []object            items if unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'. false name string            Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. TODO: Add other useful fields. apiVersion, kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896. Default:  false optional boolean            optional specify whether the ConfigMap or its keys must be defined false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmanifestsindexconfigmapitemsindex","title":"Cluster.spec.manifests[index].configMap.items[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Maps a string key to a path within a volume.</p> Name Type Description Required key string            key is the key to project. true path string            path is the relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'. true mode integer            mode is Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set. Format: int32 false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmanifestsindexcsi","title":"Cluster.spec.manifests[index].csi","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>csi (Container Storage Interface) represents ephemeral storage that is handled by certain external CSI drivers (Beta feature).</p> Name Type Description Required driver string            driver is the name of the CSI driver that handles this volume. Consult with your admin for the correct name as registered in the cluster. true fsType string            fsType to mount. Ex. \"ext4\", \"xfs\", \"ntfs\". If not provided, the empty value is passed to the associated CSI driver which will determine the default filesystem to apply. false nodePublishSecretRef object            nodePublishSecretRef is a reference to the secret object containing sensitive information to pass to the CSI driver to complete the CSI NodePublishVolume and NodeUnpublishVolume calls. This field is optional, and  may be empty if no secret is required. If the secret object contains more than one secret, all secret references are passed. false readOnly boolean            readOnly specifies a read-only configuration for the volume. Defaults to false (read/write). false volumeAttributes map[string]string            volumeAttributes stores driver-specific properties that are passed to the CSI driver. Consult your driver's documentation for supported values. false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmanifestsindexcsinodepublishsecretref","title":"Cluster.spec.manifests[index].csi.nodePublishSecretRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>nodePublishSecretRef is a reference to the secret object containing sensitive information to pass to the CSI driver to complete the CSI NodePublishVolume and NodeUnpublishVolume calls. This field is optional, and  may be empty if no secret is required. If the secret object contains more than one secret, all secret references are passed.</p> Name Type Description Required name string            Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. TODO: Add other useful fields. apiVersion, kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896. Default:  false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmanifestsindexdownwardapi","title":"Cluster.spec.manifests[index].downwardAPI","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>downwardAPI represents downward API about the pod that should populate this volume</p> Name Type Description Required defaultMode integer            Optional: mode bits to use on created files by default. Must be a Optional: mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set. Format: int32 false items []object            Items is a list of downward API volume file false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmanifestsindexdownwardapiitemsindex","title":"Cluster.spec.manifests[index].downwardAPI.items[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>DownwardAPIVolumeFile represents information to create the file containing the pod field</p> Name Type Description Required path string            Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..' true fieldRef object            Required: Selects a field of the pod: only annotations, labels, name, namespace and uid are supported. false mode integer            Optional: mode bits used to set permissions on this file, must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set. Format: int32 false resourceFieldRef object            Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported. false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmanifestsindexdownwardapiitemsindexfieldref","title":"Cluster.spec.manifests[index].downwardAPI.items[index].fieldRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Required: Selects a field of the pod: only annotations, labels, name, namespace and uid are supported.</p> Name Type Description Required fieldPath string            Path of the field to select in the specified API version. true apiVersion string            Version of the schema the FieldPath is written in terms of, defaults to \"v1\". false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmanifestsindexdownwardapiitemsindexresourcefieldref","title":"Cluster.spec.manifests[index].downwardAPI.items[index].resourceFieldRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.</p> Name Type Description Required resource string            Required: resource to select true containerName string            Container name: required for volumes, optional for env vars false divisor int or string            Specifies the output format of the exposed resources, defaults to \"1\" false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmanifestsindexemptydir","title":"Cluster.spec.manifests[index].emptyDir","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>emptyDir represents a temporary directory that shares a pod's lifetime. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir</p> Name Type Description Required medium string            medium represents what type of storage medium should back this directory. The default is \"\" which means to use the node's default medium. Must be an empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir false sizeLimit int or string            sizeLimit is the total amount of local storage required for this EmptyDir volume. The size limit is also applicable for memory medium. The maximum usage on memory medium EmptyDir would be the minimum value between the SizeLimit specified here and the sum of memory limits of all containers in a pod. The default is nil which means that the limit is undefined. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmanifestsindexephemeral","title":"Cluster.spec.manifests[index].ephemeral","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>ephemeral represents a volume that is handled by a cluster storage driver. The volume's lifecycle is tied to the pod that defines it - it will be created before the pod starts, and deleted when the pod is removed.</p> <p>Use this if: a) the volume is only needed while the pod runs, b) features of normal volumes like restoring from snapshot or capacity    tracking are needed, c) the storage driver is specified through a storage class, and d) the storage driver supports dynamic volume provisioning through    a PersistentVolumeClaim (see EphemeralVolumeSource for more    information on the connection between this volume type    and PersistentVolumeClaim).</p> <p>Use PersistentVolumeClaim or one of the vendor-specific APIs for volumes that persist for longer than the lifecycle of an individual pod.</p> <p>Use CSI for light-weight local ephemeral volumes if the CSI driver is meant to be used that way - see the documentation of the driver for more information.</p> <p>A pod can use both types of ephemeral volumes and persistent volumes at the same time.</p> Name Type Description Required volumeClaimTemplate object            Will be used to create a stand-alone PVC to provision the volume. The pod in which this EphemeralVolumeSource is embedded will be the owner of the PVC, i.e. the PVC will be deleted together with the pod.  The name of the PVC will be `-` where `` is the name from the `PodSpec.Volumes` array entry. Pod validation will reject the pod if the concatenated name is not valid for a PVC (for example, too long).   An existing PVC with that name that is not owned by the pod will *not* be used for the pod to avoid using an unrelated volume by mistake. Starting the pod is then blocked until the unrelated PVC is removed. If such a pre-created PVC is meant to be used by the pod, the PVC has to updated with an owner reference to the pod once the pod exists. Normally this should not be necessary, but it may be useful when manually reconstructing a broken cluster.   This field is read-only and no changes will be made by Kubernetes to the PVC after it has been created.   Required, must not be nil. false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmanifestsindexephemeralvolumeclaimtemplate","title":"Cluster.spec.manifests[index].ephemeral.volumeClaimTemplate","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Will be used to create a stand-alone PVC to provision the volume. The pod in which this EphemeralVolumeSource is embedded will be the owner of the PVC, i.e. the PVC will be deleted together with the pod.  The name of the PVC will be <code>&lt;pod name&gt;-&lt;volume name&gt;</code> where <code>&lt;volume name&gt;</code> is the name from the <code>PodSpec.Volumes</code> array entry. Pod validation will reject the pod if the concatenated name is not valid for a PVC (for example, too long).</p> <p>An existing PVC with that name that is not owned by the pod will not be used for the pod to avoid using an unrelated volume by mistake. Starting the pod is then blocked until the unrelated PVC is removed. If such a pre-created PVC is meant to be used by the pod, the PVC has to updated with an owner reference to the pod once the pod exists. Normally this should not be necessary, but it may be useful when manually reconstructing a broken cluster.</p> <p>This field is read-only and no changes will be made by Kubernetes to the PVC after it has been created.</p> <p>Required, must not be nil.</p> Name Type Description Required spec object            The specification for the PersistentVolumeClaim. The entire content is copied unchanged into the PVC that gets created from this template. The same fields as in a PersistentVolumeClaim are also valid here. true metadata object            May contain labels and annotations that will be copied into the PVC when creating it. No other fields are allowed and will be rejected during validation. false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmanifestsindexephemeralvolumeclaimtemplatespec","title":"Cluster.spec.manifests[index].ephemeral.volumeClaimTemplate.spec","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>The specification for the PersistentVolumeClaim. The entire content is copied unchanged into the PVC that gets created from this template. The same fields as in a PersistentVolumeClaim are also valid here.</p> Name Type Description Required accessModes []string            accessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1 false dataSource object            dataSource field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. When the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef, and dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified. If the namespace is specified, then dataSourceRef will not be copied to dataSource. false dataSourceRef object            dataSourceRef specifies the object from which to populate the volume with data, if a non-empty volume is desired. This may be any object from a non-empty API group (non core object) or a PersistentVolumeClaim object. When this field is specified, volume binding will only succeed if the type of the specified object matches some installed volume populator or dynamic provisioner. This field will replace the functionality of the dataSource field and as such if both fields are non-empty, they must have the same value. For backwards compatibility, when namespace isn't specified in dataSourceRef, both fields (dataSource and dataSourceRef) will be set to the same value automatically if one of them is empty and the other is non-empty. When namespace is specified in dataSourceRef, dataSource isn't set to the same value and must be empty. There are three important differences between dataSource and dataSourceRef: * While dataSource only allows two specific types of objects, dataSourceRef   allows any non-core object, as well as PersistentVolumeClaim objects. * While dataSource ignores disallowed values (dropping them), dataSourceRef   preserves all values, and generates an error if a disallowed value is   specified. * While dataSource only allows local objects, dataSourceRef allows objects   in any namespaces. (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled. (Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled. false resources object            resources represents the minimum resources the volume should have. If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements that are lower than previous value but must still be higher than capacity recorded in the status field of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources false selector object            selector is a label query over volumes to consider for binding. false storageClassName string            storageClassName is the name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1 false volumeAttributesClassName string            volumeAttributesClassName may be used to set the VolumeAttributesClass used by this claim. If specified, the CSI driver will create or update the volume with the attributes defined in the corresponding VolumeAttributesClass. This has a different purpose than storageClassName, it can be changed after the claim is created. An empty string value means that no VolumeAttributesClass will be applied to the claim but it's not allowed to reset this field to empty string once it is set. If unspecified and the PersistentVolumeClaim is unbound, the default VolumeAttributesClass will be set by the persistentvolume controller if it exists. If the resource referred to by volumeAttributesClass does not exist, this PersistentVolumeClaim will be set to a Pending state, as reflected by the modifyVolumeStatus field, until such as a resource exists. More info: https://kubernetes.io/docs/concepts/storage/volume-attributes-classes/ (Alpha) Using this field requires the VolumeAttributesClass feature gate to be enabled. false volumeMode string            volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec. false volumeName string            volumeName is the binding reference to the PersistentVolume backing this claim. false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmanifestsindexephemeralvolumeclaimtemplatespecdatasource","title":"Cluster.spec.manifests[index].ephemeral.volumeClaimTemplate.spec.dataSource","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>dataSource field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. When the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef, and dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified. If the namespace is specified, then dataSourceRef will not be copied to dataSource.</p> Name Type Description Required kind string            Kind is the type of resource being referenced true name string            Name is the name of resource being referenced true apiGroup string            APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required. false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmanifestsindexephemeralvolumeclaimtemplatespecdatasourceref","title":"Cluster.spec.manifests[index].ephemeral.volumeClaimTemplate.spec.dataSourceRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>dataSourceRef specifies the object from which to populate the volume with data, if a non-empty volume is desired. This may be any object from a non-empty API group (non core object) or a PersistentVolumeClaim object. When this field is specified, volume binding will only succeed if the type of the specified object matches some installed volume populator or dynamic provisioner. This field will replace the functionality of the dataSource field and as such if both fields are non-empty, they must have the same value. For backwards compatibility, when namespace isn't specified in dataSourceRef, both fields (dataSource and dataSourceRef) will be set to the same value automatically if one of them is empty and the other is non-empty. When namespace is specified in dataSourceRef, dataSource isn't set to the same value and must be empty. There are three important differences between dataSource and dataSourceRef: * While dataSource only allows two specific types of objects, dataSourceRef   allows any non-core object, as well as PersistentVolumeClaim objects. * While dataSource ignores disallowed values (dropping them), dataSourceRef   preserves all values, and generates an error if a disallowed value is   specified. * While dataSource only allows local objects, dataSourceRef allows objects   in any namespaces. (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled. (Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled.</p> Name Type Description Required kind string            Kind is the type of resource being referenced true name string            Name is the name of resource being referenced true apiGroup string            APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required. false namespace string            Namespace is the namespace of resource being referenced Note that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details. (Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled. false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmanifestsindexephemeralvolumeclaimtemplatespecresources","title":"Cluster.spec.manifests[index].ephemeral.volumeClaimTemplate.spec.resources","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>resources represents the minimum resources the volume should have. If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements that are lower than previous value but must still be higher than capacity recorded in the status field of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources</p> Name Type Description Required limits map[string]int or string            Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/ false requests map[string]int or string            Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/ false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmanifestsindexephemeralvolumeclaimtemplatespecselector","title":"Cluster.spec.manifests[index].ephemeral.volumeClaimTemplate.spec.selector","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>selector is a label query over volumes to consider for binding.</p> Name Type Description Required matchExpressions []object            matchExpressions is a list of label selector requirements. The requirements are ANDed. false matchLabels map[string]string            matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed. false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmanifestsindexephemeralvolumeclaimtemplatespecselectormatchexpressionsindex","title":"Cluster.spec.manifests[index].ephemeral.volumeClaimTemplate.spec.selector.matchExpressions[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.</p> Name Type Description Required key string            key is the label key that the selector applies to. true operator string            operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist. true values []string            values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch. false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmanifestsindexephemeralvolumeclaimtemplatemetadata","title":"Cluster.spec.manifests[index].ephemeral.volumeClaimTemplate.metadata","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>May contain labels and annotations that will be copied into the PVC when creating it. No other fields are allowed and will be rejected during validation.</p> Name Type Description Required annotations map[string]string false finalizers []string false labels map[string]string false name string false namespace string false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmanifestsindexfc","title":"Cluster.spec.manifests[index].fc","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>fc represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.</p> Name Type Description Required fsType string            fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. TODO: how do we prevent errors in the filesystem from compromising the machine false lun integer            lun is Optional: FC target lun number Format: int32 false readOnly boolean            readOnly is Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. false targetWWNs []string            targetWWNs is Optional: FC target worldwide names (WWNs) false wwids []string            wwids Optional: FC volume world wide identifiers (wwids) Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously. false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmanifestsindexflexvolume","title":"Cluster.spec.manifests[index].flexVolume","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>flexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin.</p> Name Type Description Required driver string            driver is the name of the driver to use for this volume. true fsType string            fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". The default filesystem depends on FlexVolume script. false options map[string]string            options is Optional: this field holds extra command options if any. false readOnly boolean            readOnly is Optional: defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. false secretRef object            secretRef is Optional: secretRef is reference to the secret object containing sensitive information to pass to the plugin scripts. This may be empty if no secret object is specified. If the secret object contains more than one secret, all secrets are passed to the plugin scripts. false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmanifestsindexflexvolumesecretref","title":"Cluster.spec.manifests[index].flexVolume.secretRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>secretRef is Optional: secretRef is reference to the secret object containing sensitive information to pass to the plugin scripts. This may be empty if no secret object is specified. If the secret object contains more than one secret, all secrets are passed to the plugin scripts.</p> Name Type Description Required name string            Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. TODO: Add other useful fields. apiVersion, kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896. Default:  false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmanifestsindexflocker","title":"Cluster.spec.manifests[index].flocker","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>flocker represents a Flocker volume attached to a kubelet's host machine. This depends on the Flocker control service being running</p> Name Type Description Required datasetName string            datasetName is Name of the dataset stored as metadata -&gt; name on the dataset for Flocker should be considered as deprecated false datasetUUID string            datasetUUID is the UUID of the dataset. This is unique identifier of a Flocker dataset false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmanifestsindexgcepersistentdisk","title":"Cluster.spec.manifests[index].gcePersistentDisk","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>gcePersistentDisk represents a GCE Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk</p> Name Type Description Required pdName string            pdName is unique name of the PD resource in GCE. Used to identify the disk in GCE. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk true fsType string            fsType is filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk TODO: how do we prevent errors in the filesystem from compromising the machine false partition integer            partition is the partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as \"1\". Similarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty). More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk Format: int32 false readOnly boolean            readOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmanifestsindexgitrepo","title":"Cluster.spec.manifests[index].gitRepo","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>gitRepo represents a git repository at a particular revision. DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir into the Pod's container.</p> Name Type Description Required repository string            repository is the URL true directory string            directory is the target directory name. Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the git repository.  Otherwise, if specified, the volume will contain the git repository in the subdirectory with the given name. false revision string            revision is the commit hash for the specified revision. false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmanifestsindexglusterfs","title":"Cluster.spec.manifests[index].glusterfs","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime. More info: https://examples.k8s.io/volumes/glusterfs/README.md</p> Name Type Description Required endpoints string            endpoints is the endpoint name that details Glusterfs topology. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod true path string            path is the Glusterfs volume path. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod true readOnly boolean            readOnly here will force the Glusterfs volume to be mounted with read-only permissions. Defaults to false. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmanifestsindexhostpath","title":"Cluster.spec.manifests[index].hostPath","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>hostPath represents a pre-existing file or directory on the host machine that is directly exposed to the container. This is generally used for system agents or other privileged things that are allowed to see the host machine. Most containers will NOT need this. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath</p> <p>TODO(jonesdl) We need to restrict who can use host directory mounts and who can/can not mount host directories as read/write.</p> Name Type Description Required path string            path of the directory on the host. If the path is a symlink, it will follow the link to the real path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath true type string            type for HostPath Volume Defaults to \"\" More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmanifestsindexiscsi","title":"Cluster.spec.manifests[index].iscsi","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>iscsi represents an ISCSI Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://examples.k8s.io/volumes/iscsi/README.md</p> Name Type Description Required iqn string            iqn is the target iSCSI Qualified Name. true lun integer            lun represents iSCSI Target Lun number. Format: int32 true targetPortal string            targetPortal is iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260). true chapAuthDiscovery boolean            chapAuthDiscovery defines whether support iSCSI Discovery CHAP authentication false chapAuthSession boolean            chapAuthSession defines whether support iSCSI Session CHAP authentication false fsType string            fsType is the filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi TODO: how do we prevent errors in the filesystem from compromising the machine false initiatorName string            initiatorName is the custom iSCSI Initiator Name. If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface : will be created for the connection. false iscsiInterface string            iscsiInterface is the interface Name that uses an iSCSI transport. Defaults to 'default' (tcp). false portals []string            portals is the iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260). false readOnly boolean            readOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. false secretRef object            secretRef is the CHAP Secret for iSCSI target and initiator authentication false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmanifestsindexiscsisecretref","title":"Cluster.spec.manifests[index].iscsi.secretRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>secretRef is the CHAP Secret for iSCSI target and initiator authentication</p> Name Type Description Required name string            Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. TODO: Add other useful fields. apiVersion, kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896. Default:  false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmanifestsindexnfs","title":"Cluster.spec.manifests[index].nfs","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>nfs represents an NFS mount on the host that shares a pod's lifetime More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs</p> Name Type Description Required path string            path that is exported by the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs true server string            server is the hostname or IP address of the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs true readOnly boolean            readOnly here will force the NFS export to be mounted with read-only permissions. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmanifestsindexpersistentvolumeclaim","title":"Cluster.spec.manifests[index].persistentVolumeClaim","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>persistentVolumeClaimVolumeSource represents a reference to a PersistentVolumeClaim in the same namespace. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims</p> Name Type Description Required claimName string            claimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims true readOnly boolean            readOnly Will force the ReadOnly setting in VolumeMounts. Default false. false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmanifestsindexphotonpersistentdisk","title":"Cluster.spec.manifests[index].photonPersistentDisk","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>photonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine</p> Name Type Description Required pdID string            pdID is the ID that identifies Photon Controller persistent disk true fsType string            fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmanifestsindexportworxvolume","title":"Cluster.spec.manifests[index].portworxVolume","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>portworxVolume represents a portworx volume attached and mounted on kubelets host machine</p> Name Type Description Required volumeID string            volumeID uniquely identifies a Portworx volume true fsType string            fSType represents the filesystem type to mount Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\". Implicitly inferred to be \"ext4\" if unspecified. false readOnly boolean            readOnly defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmanifestsindexprojected","title":"Cluster.spec.manifests[index].projected","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>projected items for all in one resources secrets, configmaps, and downward API</p> Name Type Description Required defaultMode integer            defaultMode are the mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set. Format: int32 false sources []object            sources is the list of volume projections false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmanifestsindexprojectedsourcesindex","title":"Cluster.spec.manifests[index].projected.sources[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Projection that may be projected along with other supported volume types</p> Name Type Description Required clusterTrustBundle object            ClusterTrustBundle allows a pod to access the `.spec.trustBundle` field of ClusterTrustBundle objects in an auto-updating file.   Alpha, gated by the ClusterTrustBundleProjection feature gate.   ClusterTrustBundle objects can either be selected by name, or by the combination of signer name and a label selector.   Kubelet performs aggressive normalization of the PEM contents written into the pod filesystem.  Esoteric PEM features such as inter-block comments and block headers are stripped.  Certificates are deduplicated. The ordering of certificates within the file is arbitrary, and Kubelet may change the order over time. false configMap object            configMap information about the configMap data to project false downwardAPI object            downwardAPI information about the downwardAPI data to project false secret object            secret information about the secret data to project false serviceAccountToken object            serviceAccountToken is information about the serviceAccountToken data to project false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmanifestsindexprojectedsourcesindexclustertrustbundle","title":"Cluster.spec.manifests[index].projected.sources[index].clusterTrustBundle","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>ClusterTrustBundle allows a pod to access the <code>.spec.trustBundle</code> field of ClusterTrustBundle objects in an auto-updating file.</p> <p>Alpha, gated by the ClusterTrustBundleProjection feature gate.</p> <p>ClusterTrustBundle objects can either be selected by name, or by the combination of signer name and a label selector.</p> <p>Kubelet performs aggressive normalization of the PEM contents written into the pod filesystem.  Esoteric PEM features such as inter-block comments and block headers are stripped.  Certificates are deduplicated. The ordering of certificates within the file is arbitrary, and Kubelet may change the order over time.</p> Name Type Description Required path string            Relative path from the volume root to write the bundle. true labelSelector object            Select all ClusterTrustBundles that match this label selector.  Only has effect if signerName is set.  Mutually-exclusive with name.  If unset, interpreted as \"match nothing\".  If set but empty, interpreted as \"match everything\". false name string            Select a single ClusterTrustBundle by object name.  Mutually-exclusive with signerName and labelSelector. false optional boolean            If true, don't block pod startup if the referenced ClusterTrustBundle(s) aren't available.  If using name, then the named ClusterTrustBundle is allowed not to exist.  If using signerName, then the combination of signerName and labelSelector is allowed to match zero ClusterTrustBundles. false signerName string            Select all ClusterTrustBundles that match this signer name. Mutually-exclusive with name.  The contents of all selected ClusterTrustBundles will be unified and deduplicated. false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmanifestsindexprojectedsourcesindexclustertrustbundlelabelselector","title":"Cluster.spec.manifests[index].projected.sources[index].clusterTrustBundle.labelSelector","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Select all ClusterTrustBundles that match this label selector.  Only has effect if signerName is set.  Mutually-exclusive with name.  If unset, interpreted as \"match nothing\".  If set but empty, interpreted as \"match everything\".</p> Name Type Description Required matchExpressions []object            matchExpressions is a list of label selector requirements. The requirements are ANDed. false matchLabels map[string]string            matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed. false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmanifestsindexprojectedsourcesindexclustertrustbundlelabelselectormatchexpressionsindex","title":"Cluster.spec.manifests[index].projected.sources[index].clusterTrustBundle.labelSelector.matchExpressions[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.</p> Name Type Description Required key string            key is the label key that the selector applies to. true operator string            operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist. true values []string            values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch. false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmanifestsindexprojectedsourcesindexconfigmap","title":"Cluster.spec.manifests[index].projected.sources[index].configMap","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>configMap information about the configMap data to project</p> Name Type Description Required items []object            items if unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'. false name string            Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. TODO: Add other useful fields. apiVersion, kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896. Default:  false optional boolean            optional specify whether the ConfigMap or its keys must be defined false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmanifestsindexprojectedsourcesindexconfigmapitemsindex","title":"Cluster.spec.manifests[index].projected.sources[index].configMap.items[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Maps a string key to a path within a volume.</p> Name Type Description Required key string            key is the key to project. true path string            path is the relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'. true mode integer            mode is Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set. Format: int32 false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmanifestsindexprojectedsourcesindexdownwardapi","title":"Cluster.spec.manifests[index].projected.sources[index].downwardAPI","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>downwardAPI information about the downwardAPI data to project</p> Name Type Description Required items []object            Items is a list of DownwardAPIVolume file false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmanifestsindexprojectedsourcesindexdownwardapiitemsindex","title":"Cluster.spec.manifests[index].projected.sources[index].downwardAPI.items[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>DownwardAPIVolumeFile represents information to create the file containing the pod field</p> Name Type Description Required path string            Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..' true fieldRef object            Required: Selects a field of the pod: only annotations, labels, name, namespace and uid are supported. false mode integer            Optional: mode bits used to set permissions on this file, must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set. Format: int32 false resourceFieldRef object            Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported. false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmanifestsindexprojectedsourcesindexdownwardapiitemsindexfieldref","title":"Cluster.spec.manifests[index].projected.sources[index].downwardAPI.items[index].fieldRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Required: Selects a field of the pod: only annotations, labels, name, namespace and uid are supported.</p> Name Type Description Required fieldPath string            Path of the field to select in the specified API version. true apiVersion string            Version of the schema the FieldPath is written in terms of, defaults to \"v1\". false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmanifestsindexprojectedsourcesindexdownwardapiitemsindexresourcefieldref","title":"Cluster.spec.manifests[index].projected.sources[index].downwardAPI.items[index].resourceFieldRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.</p> Name Type Description Required resource string            Required: resource to select true containerName string            Container name: required for volumes, optional for env vars false divisor int or string            Specifies the output format of the exposed resources, defaults to \"1\" false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmanifestsindexprojectedsourcesindexsecret","title":"Cluster.spec.manifests[index].projected.sources[index].secret","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>secret information about the secret data to project</p> Name Type Description Required items []object            items if unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'. false name string            Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. TODO: Add other useful fields. apiVersion, kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896. Default:  false optional boolean            optional field specify whether the Secret or its key must be defined false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmanifestsindexprojectedsourcesindexsecretitemsindex","title":"Cluster.spec.manifests[index].projected.sources[index].secret.items[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Maps a string key to a path within a volume.</p> Name Type Description Required key string            key is the key to project. true path string            path is the relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'. true mode integer            mode is Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set. Format: int32 false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmanifestsindexprojectedsourcesindexserviceaccounttoken","title":"Cluster.spec.manifests[index].projected.sources[index].serviceAccountToken","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>serviceAccountToken is information about the serviceAccountToken data to project</p> Name Type Description Required path string            path is the path relative to the mount point of the file to project the token into. true audience string            audience is the intended audience of the token. A recipient of a token must identify itself with an identifier specified in the audience of the token, and otherwise should reject the token. The audience defaults to the identifier of the apiserver. false expirationSeconds integer            expirationSeconds is the requested duration of validity of the service account token. As the token approaches expiration, the kubelet volume plugin will proactively rotate the service account token. The kubelet will start trying to rotate the token if the token is older than 80 percent of its time to live or if the token is older than 24 hours.Defaults to 1 hour and must be at least 10 minutes. Format: int64 false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmanifestsindexquobyte","title":"Cluster.spec.manifests[index].quobyte","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>quobyte represents a Quobyte mount on the host that shares a pod's lifetime</p> Name Type Description Required registry string            registry represents a single or multiple Quobyte Registry services specified as a string as host:port pair (multiple entries are separated with commas) which acts as the central registry for volumes true volume string            volume is a string that references an already created Quobyte volume by name. true group string            group to map volume access to Default is no group false readOnly boolean            readOnly here will force the Quobyte volume to be mounted with read-only permissions. Defaults to false. false tenant string            tenant owning the given Quobyte volume in the Backend Used with dynamically provisioned Quobyte volumes, value is set by the plugin false user string            user to map volume access to Defaults to serivceaccount user false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmanifestsindexrbd","title":"Cluster.spec.manifests[index].rbd","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>rbd represents a Rados Block Device mount on the host that shares a pod's lifetime. More info: https://examples.k8s.io/volumes/rbd/README.md</p> Name Type Description Required image string            image is the rados image name. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it true monitors []string            monitors is a collection of Ceph monitors. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it true fsType string            fsType is the filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd TODO: how do we prevent errors in the filesystem from compromising the machine false keyring string            keyring is the path to key ring for RBDUser. Default is /etc/ceph/keyring. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it false pool string            pool is the rados pool name. Default is rbd. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it false readOnly boolean            readOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it false secretRef object            secretRef is name of the authentication secret for RBDUser. If provided overrides keyring. Default is nil. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it false user string            user is the rados user name. Default is admin. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmanifestsindexrbdsecretref","title":"Cluster.spec.manifests[index].rbd.secretRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>secretRef is name of the authentication secret for RBDUser. If provided overrides keyring. Default is nil. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it</p> Name Type Description Required name string            Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. TODO: Add other useful fields. apiVersion, kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896. Default:  false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmanifestsindexscaleio","title":"Cluster.spec.manifests[index].scaleIO","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>scaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.</p> Name Type Description Required gateway string            gateway is the host address of the ScaleIO API Gateway. true secretRef object            secretRef references to the secret for ScaleIO user and other sensitive information. If this is not provided, Login operation will fail. true system string            system is the name of the storage system as configured in ScaleIO. true fsType string            fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Default is \"xfs\". false protectionDomain string            protectionDomain is the name of the ScaleIO Protection Domain for the configured storage. false readOnly boolean            readOnly Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. false sslEnabled boolean            sslEnabled Flag enable/disable SSL communication with Gateway, default false false storageMode string            storageMode indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned. Default is ThinProvisioned. false storagePool string            storagePool is the ScaleIO Storage Pool associated with the protection domain. false volumeName string            volumeName is the name of a volume already created in the ScaleIO system that is associated with this volume source. false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmanifestsindexscaleiosecretref","title":"Cluster.spec.manifests[index].scaleIO.secretRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>secretRef references to the secret for ScaleIO user and other sensitive information. If this is not provided, Login operation will fail.</p> Name Type Description Required name string            Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. TODO: Add other useful fields. apiVersion, kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896. Default:  false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmanifestsindexsecret","title":"Cluster.spec.manifests[index].secret","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>secret represents a secret that should populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret</p> Name Type Description Required defaultMode integer            defaultMode is Optional: mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set. Format: int32 false items []object            items If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'. false optional boolean            optional field specify whether the Secret or its keys must be defined false secretName string            secretName is the name of the secret in the pod's namespace to use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmanifestsindexsecretitemsindex","title":"Cluster.spec.manifests[index].secret.items[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Maps a string key to a path within a volume.</p> Name Type Description Required key string            key is the key to project. true path string            path is the relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'. true mode integer            mode is Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set. Format: int32 false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmanifestsindexstorageos","title":"Cluster.spec.manifests[index].storageos","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>storageOS represents a StorageOS volume attached and mounted on Kubernetes nodes.</p> Name Type Description Required fsType string            fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. false readOnly boolean            readOnly defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. false secretRef object            secretRef specifies the secret to use for obtaining the StorageOS API credentials.  If not specified, default values will be attempted. false volumeName string            volumeName is the human-readable name of the StorageOS volume.  Volume names are only unique within a namespace. false volumeNamespace string            volumeNamespace specifies the scope of the volume within StorageOS.  If no namespace is specified then the Pod's namespace will be used.  This allows the Kubernetes name scoping to be mirrored within StorageOS for tighter integration. Set VolumeName to any name to override the default behaviour. Set to \"default\" if you are not using namespaces within StorageOS. Namespaces that do not pre-exist within StorageOS will be created. false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmanifestsindexstorageossecretref","title":"Cluster.spec.manifests[index].storageos.secretRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>secretRef specifies the secret to use for obtaining the StorageOS API credentials.  If not specified, default values will be attempted.</p> Name Type Description Required name string            Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. TODO: Add other useful fields. apiVersion, kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896. Default:  false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmanifestsindexvspherevolume","title":"Cluster.spec.manifests[index].vsphereVolume","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>vsphereVolume represents a vSphere volume attached and mounted on kubelets host machine</p> Name Type Description Required volumePath string            volumePath is the path that identifies vSphere volume vmdk true fsType string            fsType is filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. false storagePolicyID string            storagePolicyID is the storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName. false storagePolicyName string            storagePolicyName is the storage Policy Based Management (SPBM) profile name. false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmonitoring","title":"Cluster.spec.monitoring","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Monitoring defines the monitoring configuration.</p> Name Type Description Required enabled boolean            Enabled enables prometheus sidecar that scrapes metrics from the child cluster system components and expose them as usual kubernetes pod metrics. true prometheusImage string            PrometheusImage defines the image used for the prometheus sidecar. Default: quay.io/k0sproject/prometheus:v2.44.0 true proxyImage string            ProxyImage defines the image used for the nginx proxy sidecar. Default: nginx:1.19.10 true"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmountsindex","title":"Cluster.spec.mounts[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> Name Type Description Required path string true awsElasticBlockStore object            awsElasticBlockStore represents an AWS Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore false azureDisk object            azureDisk represents an Azure Data Disk mount on the host and bind mount to the pod. false azureFile object            azureFile represents an Azure File Service mount on the host and bind mount to the pod. false cephfs object            cephFS represents a Ceph FS mount on the host that shares a pod's lifetime false cinder object            cinder represents a cinder volume attached and mounted on kubelets host machine. More info: https://examples.k8s.io/mysql-cinder-pd/README.md false configMap object            configMap represents a configMap that should populate this volume false csi object            csi (Container Storage Interface) represents ephemeral storage that is handled by certain external CSI drivers (Beta feature). false downwardAPI object            downwardAPI represents downward API about the pod that should populate this volume false emptyDir object            emptyDir represents a temporary directory that shares a pod's lifetime. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir false ephemeral object            ephemeral represents a volume that is handled by a cluster storage driver. The volume's lifecycle is tied to the pod that defines it - it will be created before the pod starts, and deleted when the pod is removed.   Use this if: a) the volume is only needed while the pod runs, b) features of normal volumes like restoring from snapshot or capacity    tracking are needed, c) the storage driver is specified through a storage class, and d) the storage driver supports dynamic volume provisioning through    a PersistentVolumeClaim (see EphemeralVolumeSource for more    information on the connection between this volume type    and PersistentVolumeClaim).   Use PersistentVolumeClaim or one of the vendor-specific APIs for volumes that persist for longer than the lifecycle of an individual pod.   Use CSI for light-weight local ephemeral volumes if the CSI driver is meant to be used that way - see the documentation of the driver for more information.   A pod can use both types of ephemeral volumes and persistent volumes at the same time. false fc object            fc represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod. false flexVolume object            flexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin. false flocker object            flocker represents a Flocker volume attached to a kubelet's host machine. This depends on the Flocker control service being running false gcePersistentDisk object            gcePersistentDisk represents a GCE Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk false gitRepo object            gitRepo represents a git repository at a particular revision. DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir into the Pod's container. false glusterfs object            glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime. More info: https://examples.k8s.io/volumes/glusterfs/README.md false hostPath object            hostPath represents a pre-existing file or directory on the host machine that is directly exposed to the container. This is generally used for system agents or other privileged things that are allowed to see the host machine. Most containers will NOT need this. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath --- TODO(jonesdl) We need to restrict who can use host directory mounts and who can/can not mount host directories as read/write. false iscsi object            iscsi represents an ISCSI Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://examples.k8s.io/volumes/iscsi/README.md false nfs object            nfs represents an NFS mount on the host that shares a pod's lifetime More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs false persistentVolumeClaim object            persistentVolumeClaimVolumeSource represents a reference to a PersistentVolumeClaim in the same namespace. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims false photonPersistentDisk object            photonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine false portworxVolume object            portworxVolume represents a portworx volume attached and mounted on kubelets host machine false projected object            projected items for all in one resources secrets, configmaps, and downward API false quobyte object            quobyte represents a Quobyte mount on the host that shares a pod's lifetime false rbd object            rbd represents a Rados Block Device mount on the host that shares a pod's lifetime. More info: https://examples.k8s.io/volumes/rbd/README.md false readOnly boolean            ReadOnly specifies whether the volume should be mounted as read-only. (default: false, except for ConfigMaps and Secrets) false scaleIO object            scaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes. false secret object            secret represents a secret that should populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret false storageos object            storageOS represents a StorageOS volume attached and mounted on Kubernetes nodes. false vsphereVolume object            vsphereVolume represents a vSphere volume attached and mounted on kubelets host machine false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmountsindexawselasticblockstore","title":"Cluster.spec.mounts[index].awsElasticBlockStore","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>awsElasticBlockStore represents an AWS Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore</p> Name Type Description Required volumeID string            volumeID is unique ID of the persistent disk resource in AWS (Amazon EBS volume). More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore true fsType string            fsType is the filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore TODO: how do we prevent errors in the filesystem from compromising the machine false partition integer            partition is the partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as \"1\". Similarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty). Format: int32 false readOnly boolean            readOnly value true will force the readOnly setting in VolumeMounts. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmountsindexazuredisk","title":"Cluster.spec.mounts[index].azureDisk","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>azureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.</p> Name Type Description Required diskName string            diskName is the Name of the data disk in the blob storage true diskURI string            diskURI is the URI of data disk in the blob storage true cachingMode string            cachingMode is the Host Caching mode: None, Read Only, Read Write. false fsType string            fsType is Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. false kind string            kind expected values are Shared: multiple blob disks per storage account  Dedicated: single blob disk per storage account  Managed: azure managed data disk (only in managed availability set). defaults to shared false readOnly boolean            readOnly Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmountsindexazurefile","title":"Cluster.spec.mounts[index].azureFile","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>azureFile represents an Azure File Service mount on the host and bind mount to the pod.</p> Name Type Description Required secretName string            secretName is the  name of secret that contains Azure Storage Account Name and Key true shareName string            shareName is the azure share Name true readOnly boolean            readOnly defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmountsindexcephfs","title":"Cluster.spec.mounts[index].cephfs","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>cephFS represents a Ceph FS mount on the host that shares a pod's lifetime</p> Name Type Description Required monitors []string            monitors is Required: Monitors is a collection of Ceph monitors More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it true path string            path is Optional: Used as the mounted root, rather than the full Ceph tree, default is / false readOnly boolean            readOnly is Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it false secretFile string            secretFile is Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it false secretRef object            secretRef is Optional: SecretRef is reference to the authentication secret for User, default is empty. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it false user string            user is optional: User is the rados user name, default is admin More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmountsindexcephfssecretref","title":"Cluster.spec.mounts[index].cephfs.secretRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>secretRef is Optional: SecretRef is reference to the authentication secret for User, default is empty. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it</p> Name Type Description Required name string            Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. TODO: Add other useful fields. apiVersion, kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896. Default:  false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmountsindexcinder","title":"Cluster.spec.mounts[index].cinder","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>cinder represents a cinder volume attached and mounted on kubelets host machine. More info: https://examples.k8s.io/mysql-cinder-pd/README.md</p> Name Type Description Required volumeID string            volumeID used to identify the volume in cinder. More info: https://examples.k8s.io/mysql-cinder-pd/README.md true fsType string            fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://examples.k8s.io/mysql-cinder-pd/README.md false readOnly boolean            readOnly defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/mysql-cinder-pd/README.md false secretRef object            secretRef is optional: points to a secret object containing parameters used to connect to OpenStack. false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmountsindexcindersecretref","title":"Cluster.spec.mounts[index].cinder.secretRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>secretRef is optional: points to a secret object containing parameters used to connect to OpenStack.</p> Name Type Description Required name string            Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. TODO: Add other useful fields. apiVersion, kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896. Default:  false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmountsindexconfigmap","title":"Cluster.spec.mounts[index].configMap","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>configMap represents a configMap that should populate this volume</p> Name Type Description Required defaultMode integer            defaultMode is optional: mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set. Format: int32 false items []object            items if unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'. false name string            Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. TODO: Add other useful fields. apiVersion, kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896. Default:  false optional boolean            optional specify whether the ConfigMap or its keys must be defined false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmountsindexconfigmapitemsindex","title":"Cluster.spec.mounts[index].configMap.items[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Maps a string key to a path within a volume.</p> Name Type Description Required key string            key is the key to project. true path string            path is the relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'. true mode integer            mode is Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set. Format: int32 false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmountsindexcsi","title":"Cluster.spec.mounts[index].csi","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>csi (Container Storage Interface) represents ephemeral storage that is handled by certain external CSI drivers (Beta feature).</p> Name Type Description Required driver string            driver is the name of the CSI driver that handles this volume. Consult with your admin for the correct name as registered in the cluster. true fsType string            fsType to mount. Ex. \"ext4\", \"xfs\", \"ntfs\". If not provided, the empty value is passed to the associated CSI driver which will determine the default filesystem to apply. false nodePublishSecretRef object            nodePublishSecretRef is a reference to the secret object containing sensitive information to pass to the CSI driver to complete the CSI NodePublishVolume and NodeUnpublishVolume calls. This field is optional, and  may be empty if no secret is required. If the secret object contains more than one secret, all secret references are passed. false readOnly boolean            readOnly specifies a read-only configuration for the volume. Defaults to false (read/write). false volumeAttributes map[string]string            volumeAttributes stores driver-specific properties that are passed to the CSI driver. Consult your driver's documentation for supported values. false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmountsindexcsinodepublishsecretref","title":"Cluster.spec.mounts[index].csi.nodePublishSecretRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>nodePublishSecretRef is a reference to the secret object containing sensitive information to pass to the CSI driver to complete the CSI NodePublishVolume and NodeUnpublishVolume calls. This field is optional, and  may be empty if no secret is required. If the secret object contains more than one secret, all secret references are passed.</p> Name Type Description Required name string            Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. TODO: Add other useful fields. apiVersion, kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896. Default:  false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmountsindexdownwardapi","title":"Cluster.spec.mounts[index].downwardAPI","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>downwardAPI represents downward API about the pod that should populate this volume</p> Name Type Description Required defaultMode integer            Optional: mode bits to use on created files by default. Must be a Optional: mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set. Format: int32 false items []object            Items is a list of downward API volume file false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmountsindexdownwardapiitemsindex","title":"Cluster.spec.mounts[index].downwardAPI.items[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>DownwardAPIVolumeFile represents information to create the file containing the pod field</p> Name Type Description Required path string            Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..' true fieldRef object            Required: Selects a field of the pod: only annotations, labels, name, namespace and uid are supported. false mode integer            Optional: mode bits used to set permissions on this file, must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set. Format: int32 false resourceFieldRef object            Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported. false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmountsindexdownwardapiitemsindexfieldref","title":"Cluster.spec.mounts[index].downwardAPI.items[index].fieldRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Required: Selects a field of the pod: only annotations, labels, name, namespace and uid are supported.</p> Name Type Description Required fieldPath string            Path of the field to select in the specified API version. true apiVersion string            Version of the schema the FieldPath is written in terms of, defaults to \"v1\". false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmountsindexdownwardapiitemsindexresourcefieldref","title":"Cluster.spec.mounts[index].downwardAPI.items[index].resourceFieldRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.</p> Name Type Description Required resource string            Required: resource to select true containerName string            Container name: required for volumes, optional for env vars false divisor int or string            Specifies the output format of the exposed resources, defaults to \"1\" false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmountsindexemptydir","title":"Cluster.spec.mounts[index].emptyDir","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>emptyDir represents a temporary directory that shares a pod's lifetime. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir</p> Name Type Description Required medium string            medium represents what type of storage medium should back this directory. The default is \"\" which means to use the node's default medium. Must be an empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir false sizeLimit int or string            sizeLimit is the total amount of local storage required for this EmptyDir volume. The size limit is also applicable for memory medium. The maximum usage on memory medium EmptyDir would be the minimum value between the SizeLimit specified here and the sum of memory limits of all containers in a pod. The default is nil which means that the limit is undefined. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmountsindexephemeral","title":"Cluster.spec.mounts[index].ephemeral","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>ephemeral represents a volume that is handled by a cluster storage driver. The volume's lifecycle is tied to the pod that defines it - it will be created before the pod starts, and deleted when the pod is removed.</p> <p>Use this if: a) the volume is only needed while the pod runs, b) features of normal volumes like restoring from snapshot or capacity    tracking are needed, c) the storage driver is specified through a storage class, and d) the storage driver supports dynamic volume provisioning through    a PersistentVolumeClaim (see EphemeralVolumeSource for more    information on the connection between this volume type    and PersistentVolumeClaim).</p> <p>Use PersistentVolumeClaim or one of the vendor-specific APIs for volumes that persist for longer than the lifecycle of an individual pod.</p> <p>Use CSI for light-weight local ephemeral volumes if the CSI driver is meant to be used that way - see the documentation of the driver for more information.</p> <p>A pod can use both types of ephemeral volumes and persistent volumes at the same time.</p> Name Type Description Required volumeClaimTemplate object            Will be used to create a stand-alone PVC to provision the volume. The pod in which this EphemeralVolumeSource is embedded will be the owner of the PVC, i.e. the PVC will be deleted together with the pod.  The name of the PVC will be `-` where `` is the name from the `PodSpec.Volumes` array entry. Pod validation will reject the pod if the concatenated name is not valid for a PVC (for example, too long).   An existing PVC with that name that is not owned by the pod will *not* be used for the pod to avoid using an unrelated volume by mistake. Starting the pod is then blocked until the unrelated PVC is removed. If such a pre-created PVC is meant to be used by the pod, the PVC has to updated with an owner reference to the pod once the pod exists. Normally this should not be necessary, but it may be useful when manually reconstructing a broken cluster.   This field is read-only and no changes will be made by Kubernetes to the PVC after it has been created.   Required, must not be nil. false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmountsindexephemeralvolumeclaimtemplate","title":"Cluster.spec.mounts[index].ephemeral.volumeClaimTemplate","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Will be used to create a stand-alone PVC to provision the volume. The pod in which this EphemeralVolumeSource is embedded will be the owner of the PVC, i.e. the PVC will be deleted together with the pod.  The name of the PVC will be <code>&lt;pod name&gt;-&lt;volume name&gt;</code> where <code>&lt;volume name&gt;</code> is the name from the <code>PodSpec.Volumes</code> array entry. Pod validation will reject the pod if the concatenated name is not valid for a PVC (for example, too long).</p> <p>An existing PVC with that name that is not owned by the pod will not be used for the pod to avoid using an unrelated volume by mistake. Starting the pod is then blocked until the unrelated PVC is removed. If such a pre-created PVC is meant to be used by the pod, the PVC has to updated with an owner reference to the pod once the pod exists. Normally this should not be necessary, but it may be useful when manually reconstructing a broken cluster.</p> <p>This field is read-only and no changes will be made by Kubernetes to the PVC after it has been created.</p> <p>Required, must not be nil.</p> Name Type Description Required spec object            The specification for the PersistentVolumeClaim. The entire content is copied unchanged into the PVC that gets created from this template. The same fields as in a PersistentVolumeClaim are also valid here. true metadata object            May contain labels and annotations that will be copied into the PVC when creating it. No other fields are allowed and will be rejected during validation. false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmountsindexephemeralvolumeclaimtemplatespec","title":"Cluster.spec.mounts[index].ephemeral.volumeClaimTemplate.spec","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>The specification for the PersistentVolumeClaim. The entire content is copied unchanged into the PVC that gets created from this template. The same fields as in a PersistentVolumeClaim are also valid here.</p> Name Type Description Required accessModes []string            accessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1 false dataSource object            dataSource field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. When the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef, and dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified. If the namespace is specified, then dataSourceRef will not be copied to dataSource. false dataSourceRef object            dataSourceRef specifies the object from which to populate the volume with data, if a non-empty volume is desired. This may be any object from a non-empty API group (non core object) or a PersistentVolumeClaim object. When this field is specified, volume binding will only succeed if the type of the specified object matches some installed volume populator or dynamic provisioner. This field will replace the functionality of the dataSource field and as such if both fields are non-empty, they must have the same value. For backwards compatibility, when namespace isn't specified in dataSourceRef, both fields (dataSource and dataSourceRef) will be set to the same value automatically if one of them is empty and the other is non-empty. When namespace is specified in dataSourceRef, dataSource isn't set to the same value and must be empty. There are three important differences between dataSource and dataSourceRef: * While dataSource only allows two specific types of objects, dataSourceRef   allows any non-core object, as well as PersistentVolumeClaim objects. * While dataSource ignores disallowed values (dropping them), dataSourceRef   preserves all values, and generates an error if a disallowed value is   specified. * While dataSource only allows local objects, dataSourceRef allows objects   in any namespaces. (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled. (Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled. false resources object            resources represents the minimum resources the volume should have. If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements that are lower than previous value but must still be higher than capacity recorded in the status field of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources false selector object            selector is a label query over volumes to consider for binding. false storageClassName string            storageClassName is the name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1 false volumeAttributesClassName string            volumeAttributesClassName may be used to set the VolumeAttributesClass used by this claim. If specified, the CSI driver will create or update the volume with the attributes defined in the corresponding VolumeAttributesClass. This has a different purpose than storageClassName, it can be changed after the claim is created. An empty string value means that no VolumeAttributesClass will be applied to the claim but it's not allowed to reset this field to empty string once it is set. If unspecified and the PersistentVolumeClaim is unbound, the default VolumeAttributesClass will be set by the persistentvolume controller if it exists. If the resource referred to by volumeAttributesClass does not exist, this PersistentVolumeClaim will be set to a Pending state, as reflected by the modifyVolumeStatus field, until such as a resource exists. More info: https://kubernetes.io/docs/concepts/storage/volume-attributes-classes/ (Alpha) Using this field requires the VolumeAttributesClass feature gate to be enabled. false volumeMode string            volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec. false volumeName string            volumeName is the binding reference to the PersistentVolume backing this claim. false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmountsindexephemeralvolumeclaimtemplatespecdatasource","title":"Cluster.spec.mounts[index].ephemeral.volumeClaimTemplate.spec.dataSource","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>dataSource field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. When the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef, and dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified. If the namespace is specified, then dataSourceRef will not be copied to dataSource.</p> Name Type Description Required kind string            Kind is the type of resource being referenced true name string            Name is the name of resource being referenced true apiGroup string            APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required. false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmountsindexephemeralvolumeclaimtemplatespecdatasourceref","title":"Cluster.spec.mounts[index].ephemeral.volumeClaimTemplate.spec.dataSourceRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>dataSourceRef specifies the object from which to populate the volume with data, if a non-empty volume is desired. This may be any object from a non-empty API group (non core object) or a PersistentVolumeClaim object. When this field is specified, volume binding will only succeed if the type of the specified object matches some installed volume populator or dynamic provisioner. This field will replace the functionality of the dataSource field and as such if both fields are non-empty, they must have the same value. For backwards compatibility, when namespace isn't specified in dataSourceRef, both fields (dataSource and dataSourceRef) will be set to the same value automatically if one of them is empty and the other is non-empty. When namespace is specified in dataSourceRef, dataSource isn't set to the same value and must be empty. There are three important differences between dataSource and dataSourceRef: * While dataSource only allows two specific types of objects, dataSourceRef   allows any non-core object, as well as PersistentVolumeClaim objects. * While dataSource ignores disallowed values (dropping them), dataSourceRef   preserves all values, and generates an error if a disallowed value is   specified. * While dataSource only allows local objects, dataSourceRef allows objects   in any namespaces. (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled. (Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled.</p> Name Type Description Required kind string            Kind is the type of resource being referenced true name string            Name is the name of resource being referenced true apiGroup string            APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required. false namespace string            Namespace is the namespace of resource being referenced Note that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details. (Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled. false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmountsindexephemeralvolumeclaimtemplatespecresources","title":"Cluster.spec.mounts[index].ephemeral.volumeClaimTemplate.spec.resources","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>resources represents the minimum resources the volume should have. If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements that are lower than previous value but must still be higher than capacity recorded in the status field of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources</p> Name Type Description Required limits map[string]int or string            Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/ false requests map[string]int or string            Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/ false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmountsindexephemeralvolumeclaimtemplatespecselector","title":"Cluster.spec.mounts[index].ephemeral.volumeClaimTemplate.spec.selector","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>selector is a label query over volumes to consider for binding.</p> Name Type Description Required matchExpressions []object            matchExpressions is a list of label selector requirements. The requirements are ANDed. false matchLabels map[string]string            matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed. false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmountsindexephemeralvolumeclaimtemplatespecselectormatchexpressionsindex","title":"Cluster.spec.mounts[index].ephemeral.volumeClaimTemplate.spec.selector.matchExpressions[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.</p> Name Type Description Required key string            key is the label key that the selector applies to. true operator string            operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist. true values []string            values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch. false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmountsindexephemeralvolumeclaimtemplatemetadata","title":"Cluster.spec.mounts[index].ephemeral.volumeClaimTemplate.metadata","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>May contain labels and annotations that will be copied into the PVC when creating it. No other fields are allowed and will be rejected during validation.</p> Name Type Description Required annotations map[string]string false finalizers []string false labels map[string]string false name string false namespace string false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmountsindexfc","title":"Cluster.spec.mounts[index].fc","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>fc represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.</p> Name Type Description Required fsType string            fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. TODO: how do we prevent errors in the filesystem from compromising the machine false lun integer            lun is Optional: FC target lun number Format: int32 false readOnly boolean            readOnly is Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. false targetWWNs []string            targetWWNs is Optional: FC target worldwide names (WWNs) false wwids []string            wwids Optional: FC volume world wide identifiers (wwids) Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously. false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmountsindexflexvolume","title":"Cluster.spec.mounts[index].flexVolume","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>flexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin.</p> Name Type Description Required driver string            driver is the name of the driver to use for this volume. true fsType string            fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". The default filesystem depends on FlexVolume script. false options map[string]string            options is Optional: this field holds extra command options if any. false readOnly boolean            readOnly is Optional: defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. false secretRef object            secretRef is Optional: secretRef is reference to the secret object containing sensitive information to pass to the plugin scripts. This may be empty if no secret object is specified. If the secret object contains more than one secret, all secrets are passed to the plugin scripts. false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmountsindexflexvolumesecretref","title":"Cluster.spec.mounts[index].flexVolume.secretRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>secretRef is Optional: secretRef is reference to the secret object containing sensitive information to pass to the plugin scripts. This may be empty if no secret object is specified. If the secret object contains more than one secret, all secrets are passed to the plugin scripts.</p> Name Type Description Required name string            Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. TODO: Add other useful fields. apiVersion, kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896. Default:  false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmountsindexflocker","title":"Cluster.spec.mounts[index].flocker","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>flocker represents a Flocker volume attached to a kubelet's host machine. This depends on the Flocker control service being running</p> Name Type Description Required datasetName string            datasetName is Name of the dataset stored as metadata -&gt; name on the dataset for Flocker should be considered as deprecated false datasetUUID string            datasetUUID is the UUID of the dataset. This is unique identifier of a Flocker dataset false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmountsindexgcepersistentdisk","title":"Cluster.spec.mounts[index].gcePersistentDisk","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>gcePersistentDisk represents a GCE Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk</p> Name Type Description Required pdName string            pdName is unique name of the PD resource in GCE. Used to identify the disk in GCE. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk true fsType string            fsType is filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk TODO: how do we prevent errors in the filesystem from compromising the machine false partition integer            partition is the partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as \"1\". Similarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty). More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk Format: int32 false readOnly boolean            readOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmountsindexgitrepo","title":"Cluster.spec.mounts[index].gitRepo","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>gitRepo represents a git repository at a particular revision. DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir into the Pod's container.</p> Name Type Description Required repository string            repository is the URL true directory string            directory is the target directory name. Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the git repository.  Otherwise, if specified, the volume will contain the git repository in the subdirectory with the given name. false revision string            revision is the commit hash for the specified revision. false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmountsindexglusterfs","title":"Cluster.spec.mounts[index].glusterfs","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime. More info: https://examples.k8s.io/volumes/glusterfs/README.md</p> Name Type Description Required endpoints string            endpoints is the endpoint name that details Glusterfs topology. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod true path string            path is the Glusterfs volume path. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod true readOnly boolean            readOnly here will force the Glusterfs volume to be mounted with read-only permissions. Defaults to false. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmountsindexhostpath","title":"Cluster.spec.mounts[index].hostPath","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>hostPath represents a pre-existing file or directory on the host machine that is directly exposed to the container. This is generally used for system agents or other privileged things that are allowed to see the host machine. Most containers will NOT need this. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath</p> <p>TODO(jonesdl) We need to restrict who can use host directory mounts and who can/can not mount host directories as read/write.</p> Name Type Description Required path string            path of the directory on the host. If the path is a symlink, it will follow the link to the real path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath true type string            type for HostPath Volume Defaults to \"\" More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmountsindexiscsi","title":"Cluster.spec.mounts[index].iscsi","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>iscsi represents an ISCSI Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://examples.k8s.io/volumes/iscsi/README.md</p> Name Type Description Required iqn string            iqn is the target iSCSI Qualified Name. true lun integer            lun represents iSCSI Target Lun number. Format: int32 true targetPortal string            targetPortal is iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260). true chapAuthDiscovery boolean            chapAuthDiscovery defines whether support iSCSI Discovery CHAP authentication false chapAuthSession boolean            chapAuthSession defines whether support iSCSI Session CHAP authentication false fsType string            fsType is the filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi TODO: how do we prevent errors in the filesystem from compromising the machine false initiatorName string            initiatorName is the custom iSCSI Initiator Name. If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface : will be created for the connection. false iscsiInterface string            iscsiInterface is the interface Name that uses an iSCSI transport. Defaults to 'default' (tcp). false portals []string            portals is the iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260). false readOnly boolean            readOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. false secretRef object            secretRef is the CHAP Secret for iSCSI target and initiator authentication false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmountsindexiscsisecretref","title":"Cluster.spec.mounts[index].iscsi.secretRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>secretRef is the CHAP Secret for iSCSI target and initiator authentication</p> Name Type Description Required name string            Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. TODO: Add other useful fields. apiVersion, kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896. Default:  false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmountsindexnfs","title":"Cluster.spec.mounts[index].nfs","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>nfs represents an NFS mount on the host that shares a pod's lifetime More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs</p> Name Type Description Required path string            path that is exported by the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs true server string            server is the hostname or IP address of the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs true readOnly boolean            readOnly here will force the NFS export to be mounted with read-only permissions. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmountsindexpersistentvolumeclaim","title":"Cluster.spec.mounts[index].persistentVolumeClaim","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>persistentVolumeClaimVolumeSource represents a reference to a PersistentVolumeClaim in the same namespace. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims</p> Name Type Description Required claimName string            claimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims true readOnly boolean            readOnly Will force the ReadOnly setting in VolumeMounts. Default false. false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmountsindexphotonpersistentdisk","title":"Cluster.spec.mounts[index].photonPersistentDisk","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>photonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine</p> Name Type Description Required pdID string            pdID is the ID that identifies Photon Controller persistent disk true fsType string            fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmountsindexportworxvolume","title":"Cluster.spec.mounts[index].portworxVolume","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>portworxVolume represents a portworx volume attached and mounted on kubelets host machine</p> Name Type Description Required volumeID string            volumeID uniquely identifies a Portworx volume true fsType string            fSType represents the filesystem type to mount Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\". Implicitly inferred to be \"ext4\" if unspecified. false readOnly boolean            readOnly defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmountsindexprojected","title":"Cluster.spec.mounts[index].projected","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>projected items for all in one resources secrets, configmaps, and downward API</p> Name Type Description Required defaultMode integer            defaultMode are the mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set. Format: int32 false sources []object            sources is the list of volume projections false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmountsindexprojectedsourcesindex","title":"Cluster.spec.mounts[index].projected.sources[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Projection that may be projected along with other supported volume types</p> Name Type Description Required clusterTrustBundle object            ClusterTrustBundle allows a pod to access the `.spec.trustBundle` field of ClusterTrustBundle objects in an auto-updating file.   Alpha, gated by the ClusterTrustBundleProjection feature gate.   ClusterTrustBundle objects can either be selected by name, or by the combination of signer name and a label selector.   Kubelet performs aggressive normalization of the PEM contents written into the pod filesystem.  Esoteric PEM features such as inter-block comments and block headers are stripped.  Certificates are deduplicated. The ordering of certificates within the file is arbitrary, and Kubelet may change the order over time. false configMap object            configMap information about the configMap data to project false downwardAPI object            downwardAPI information about the downwardAPI data to project false secret object            secret information about the secret data to project false serviceAccountToken object            serviceAccountToken is information about the serviceAccountToken data to project false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmountsindexprojectedsourcesindexclustertrustbundle","title":"Cluster.spec.mounts[index].projected.sources[index].clusterTrustBundle","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>ClusterTrustBundle allows a pod to access the <code>.spec.trustBundle</code> field of ClusterTrustBundle objects in an auto-updating file.</p> <p>Alpha, gated by the ClusterTrustBundleProjection feature gate.</p> <p>ClusterTrustBundle objects can either be selected by name, or by the combination of signer name and a label selector.</p> <p>Kubelet performs aggressive normalization of the PEM contents written into the pod filesystem.  Esoteric PEM features such as inter-block comments and block headers are stripped.  Certificates are deduplicated. The ordering of certificates within the file is arbitrary, and Kubelet may change the order over time.</p> Name Type Description Required path string            Relative path from the volume root to write the bundle. true labelSelector object            Select all ClusterTrustBundles that match this label selector.  Only has effect if signerName is set.  Mutually-exclusive with name.  If unset, interpreted as \"match nothing\".  If set but empty, interpreted as \"match everything\". false name string            Select a single ClusterTrustBundle by object name.  Mutually-exclusive with signerName and labelSelector. false optional boolean            If true, don't block pod startup if the referenced ClusterTrustBundle(s) aren't available.  If using name, then the named ClusterTrustBundle is allowed not to exist.  If using signerName, then the combination of signerName and labelSelector is allowed to match zero ClusterTrustBundles. false signerName string            Select all ClusterTrustBundles that match this signer name. Mutually-exclusive with name.  The contents of all selected ClusterTrustBundles will be unified and deduplicated. false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmountsindexprojectedsourcesindexclustertrustbundlelabelselector","title":"Cluster.spec.mounts[index].projected.sources[index].clusterTrustBundle.labelSelector","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Select all ClusterTrustBundles that match this label selector.  Only has effect if signerName is set.  Mutually-exclusive with name.  If unset, interpreted as \"match nothing\".  If set but empty, interpreted as \"match everything\".</p> Name Type Description Required matchExpressions []object            matchExpressions is a list of label selector requirements. The requirements are ANDed. false matchLabels map[string]string            matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed. false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmountsindexprojectedsourcesindexclustertrustbundlelabelselectormatchexpressionsindex","title":"Cluster.spec.mounts[index].projected.sources[index].clusterTrustBundle.labelSelector.matchExpressions[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.</p> Name Type Description Required key string            key is the label key that the selector applies to. true operator string            operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist. true values []string            values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch. false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmountsindexprojectedsourcesindexconfigmap","title":"Cluster.spec.mounts[index].projected.sources[index].configMap","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>configMap information about the configMap data to project</p> Name Type Description Required items []object            items if unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'. false name string            Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. TODO: Add other useful fields. apiVersion, kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896. Default:  false optional boolean            optional specify whether the ConfigMap or its keys must be defined false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmountsindexprojectedsourcesindexconfigmapitemsindex","title":"Cluster.spec.mounts[index].projected.sources[index].configMap.items[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Maps a string key to a path within a volume.</p> Name Type Description Required key string            key is the key to project. true path string            path is the relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'. true mode integer            mode is Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set. Format: int32 false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmountsindexprojectedsourcesindexdownwardapi","title":"Cluster.spec.mounts[index].projected.sources[index].downwardAPI","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>downwardAPI information about the downwardAPI data to project</p> Name Type Description Required items []object            Items is a list of DownwardAPIVolume file false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmountsindexprojectedsourcesindexdownwardapiitemsindex","title":"Cluster.spec.mounts[index].projected.sources[index].downwardAPI.items[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>DownwardAPIVolumeFile represents information to create the file containing the pod field</p> Name Type Description Required path string            Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..' true fieldRef object            Required: Selects a field of the pod: only annotations, labels, name, namespace and uid are supported. false mode integer            Optional: mode bits used to set permissions on this file, must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set. Format: int32 false resourceFieldRef object            Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported. false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmountsindexprojectedsourcesindexdownwardapiitemsindexfieldref","title":"Cluster.spec.mounts[index].projected.sources[index].downwardAPI.items[index].fieldRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Required: Selects a field of the pod: only annotations, labels, name, namespace and uid are supported.</p> Name Type Description Required fieldPath string            Path of the field to select in the specified API version. true apiVersion string            Version of the schema the FieldPath is written in terms of, defaults to \"v1\". false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmountsindexprojectedsourcesindexdownwardapiitemsindexresourcefieldref","title":"Cluster.spec.mounts[index].projected.sources[index].downwardAPI.items[index].resourceFieldRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.</p> Name Type Description Required resource string            Required: resource to select true containerName string            Container name: required for volumes, optional for env vars false divisor int or string            Specifies the output format of the exposed resources, defaults to \"1\" false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmountsindexprojectedsourcesindexsecret","title":"Cluster.spec.mounts[index].projected.sources[index].secret","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>secret information about the secret data to project</p> Name Type Description Required items []object            items if unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'. false name string            Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. TODO: Add other useful fields. apiVersion, kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896. Default:  false optional boolean            optional field specify whether the Secret or its key must be defined false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmountsindexprojectedsourcesindexsecretitemsindex","title":"Cluster.spec.mounts[index].projected.sources[index].secret.items[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Maps a string key to a path within a volume.</p> Name Type Description Required key string            key is the key to project. true path string            path is the relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'. true mode integer            mode is Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set. Format: int32 false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmountsindexprojectedsourcesindexserviceaccounttoken","title":"Cluster.spec.mounts[index].projected.sources[index].serviceAccountToken","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>serviceAccountToken is information about the serviceAccountToken data to project</p> Name Type Description Required path string            path is the path relative to the mount point of the file to project the token into. true audience string            audience is the intended audience of the token. A recipient of a token must identify itself with an identifier specified in the audience of the token, and otherwise should reject the token. The audience defaults to the identifier of the apiserver. false expirationSeconds integer            expirationSeconds is the requested duration of validity of the service account token. As the token approaches expiration, the kubelet volume plugin will proactively rotate the service account token. The kubelet will start trying to rotate the token if the token is older than 80 percent of its time to live or if the token is older than 24 hours.Defaults to 1 hour and must be at least 10 minutes. Format: int64 false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmountsindexquobyte","title":"Cluster.spec.mounts[index].quobyte","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>quobyte represents a Quobyte mount on the host that shares a pod's lifetime</p> Name Type Description Required registry string            registry represents a single or multiple Quobyte Registry services specified as a string as host:port pair (multiple entries are separated with commas) which acts as the central registry for volumes true volume string            volume is a string that references an already created Quobyte volume by name. true group string            group to map volume access to Default is no group false readOnly boolean            readOnly here will force the Quobyte volume to be mounted with read-only permissions. Defaults to false. false tenant string            tenant owning the given Quobyte volume in the Backend Used with dynamically provisioned Quobyte volumes, value is set by the plugin false user string            user to map volume access to Defaults to serivceaccount user false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmountsindexrbd","title":"Cluster.spec.mounts[index].rbd","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>rbd represents a Rados Block Device mount on the host that shares a pod's lifetime. More info: https://examples.k8s.io/volumes/rbd/README.md</p> Name Type Description Required image string            image is the rados image name. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it true monitors []string            monitors is a collection of Ceph monitors. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it true fsType string            fsType is the filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd TODO: how do we prevent errors in the filesystem from compromising the machine false keyring string            keyring is the path to key ring for RBDUser. Default is /etc/ceph/keyring. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it false pool string            pool is the rados pool name. Default is rbd. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it false readOnly boolean            readOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it false secretRef object            secretRef is name of the authentication secret for RBDUser. If provided overrides keyring. Default is nil. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it false user string            user is the rados user name. Default is admin. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmountsindexrbdsecretref","title":"Cluster.spec.mounts[index].rbd.secretRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>secretRef is name of the authentication secret for RBDUser. If provided overrides keyring. Default is nil. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it</p> Name Type Description Required name string            Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. TODO: Add other useful fields. apiVersion, kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896. Default:  false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmountsindexscaleio","title":"Cluster.spec.mounts[index].scaleIO","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>scaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.</p> Name Type Description Required gateway string            gateway is the host address of the ScaleIO API Gateway. true secretRef object            secretRef references to the secret for ScaleIO user and other sensitive information. If this is not provided, Login operation will fail. true system string            system is the name of the storage system as configured in ScaleIO. true fsType string            fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Default is \"xfs\". false protectionDomain string            protectionDomain is the name of the ScaleIO Protection Domain for the configured storage. false readOnly boolean            readOnly Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. false sslEnabled boolean            sslEnabled Flag enable/disable SSL communication with Gateway, default false false storageMode string            storageMode indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned. Default is ThinProvisioned. false storagePool string            storagePool is the ScaleIO Storage Pool associated with the protection domain. false volumeName string            volumeName is the name of a volume already created in the ScaleIO system that is associated with this volume source. false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmountsindexscaleiosecretref","title":"Cluster.spec.mounts[index].scaleIO.secretRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>secretRef references to the secret for ScaleIO user and other sensitive information. If this is not provided, Login operation will fail.</p> Name Type Description Required name string            Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. TODO: Add other useful fields. apiVersion, kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896. Default:  false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmountsindexsecret","title":"Cluster.spec.mounts[index].secret","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>secret represents a secret that should populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret</p> Name Type Description Required defaultMode integer            defaultMode is Optional: mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set. Format: int32 false items []object            items If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'. false optional boolean            optional field specify whether the Secret or its keys must be defined false secretName string            secretName is the name of the secret in the pod's namespace to use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmountsindexsecretitemsindex","title":"Cluster.spec.mounts[index].secret.items[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Maps a string key to a path within a volume.</p> Name Type Description Required key string            key is the key to project. true path string            path is the relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'. true mode integer            mode is Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set. Format: int32 false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmountsindexstorageos","title":"Cluster.spec.mounts[index].storageos","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>storageOS represents a StorageOS volume attached and mounted on Kubernetes nodes.</p> Name Type Description Required fsType string            fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. false readOnly boolean            readOnly defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. false secretRef object            secretRef specifies the secret to use for obtaining the StorageOS API credentials.  If not specified, default values will be attempted. false volumeName string            volumeName is the human-readable name of the StorageOS volume.  Volume names are only unique within a namespace. false volumeNamespace string            volumeNamespace specifies the scope of the volume within StorageOS.  If no namespace is specified then the Pod's namespace will be used.  This allows the Kubernetes name scoping to be mirrored within StorageOS for tighter integration. Set VolumeName to any name to override the default behaviour. Set to \"default\" if you are not using namespaces within StorageOS. Namespaces that do not pre-exist within StorageOS will be created. false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmountsindexstorageossecretref","title":"Cluster.spec.mounts[index].storageos.secretRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>secretRef specifies the secret to use for obtaining the StorageOS API credentials.  If not specified, default values will be attempted.</p> Name Type Description Required name string            Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. TODO: Add other useful fields. apiVersion, kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896. Default:  false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecmountsindexvspherevolume","title":"Cluster.spec.mounts[index].vsphereVolume","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>vsphereVolume represents a vSphere volume attached and mounted on kubelets host machine</p> Name Type Description Required volumePath string            volumePath is the path that identifies vSphere volume vmdk true fsType string            fsType is filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. false storagePolicyID string            storagePolicyID is the storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName. false storagePolicyName string            storagePolicyName is the storage Policy Based Management (SPBM) profile name. false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecpersistence","title":"Cluster.spec.persistence","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Persistence defines the persistence configuration. If empty k0smotron will use emptyDir as a volume. See https://docs.k0smotron.io/stable/configuration/#persistence</p> Name Type Description Required type string Default: emptyDir true autoDeletePVCs boolean            AutoDeletePVCs defines whether the PVC should be deleted when the cluster is deleted. Default: false false hostPath string            HostPath defines the host path configuration. Will be used as is in case of .spec.persistence.type is hostPath. false persistentVolumeClaim object            PersistentVolumeClaim defines the PVC configuration. Will be used as is in case of .spec.persistence.type is pvc. false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecpersistencepersistentvolumeclaim","title":"Cluster.spec.persistence.persistentVolumeClaim","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>PersistentVolumeClaim defines the PVC configuration. Will be used as is in case of .spec.persistence.type is pvc.</p> Name Type Description Required apiVersion string            APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources false kind string            Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds false metadata object            Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata false spec object            spec defines the desired characteristics of a volume requested by a pod author. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims false status object            status represents the current information/status of a persistent volume claim. Read-only. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecpersistencepersistentvolumeclaimmetadata","title":"Cluster.spec.persistence.persistentVolumeClaim.metadata","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata</p> Name Type Description Required annotations map[string]string false finalizers []string false labels map[string]string false name string false namespace string false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecpersistencepersistentvolumeclaimspec","title":"Cluster.spec.persistence.persistentVolumeClaim.spec","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>spec defines the desired characteristics of a volume requested by a pod author. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims</p> Name Type Description Required accessModes []string            accessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1 false dataSource object            dataSource field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. When the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef, and dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified. If the namespace is specified, then dataSourceRef will not be copied to dataSource. false dataSourceRef object            dataSourceRef specifies the object from which to populate the volume with data, if a non-empty volume is desired. This may be any object from a non-empty API group (non core object) or a PersistentVolumeClaim object. When this field is specified, volume binding will only succeed if the type of the specified object matches some installed volume populator or dynamic provisioner. This field will replace the functionality of the dataSource field and as such if both fields are non-empty, they must have the same value. For backwards compatibility, when namespace isn't specified in dataSourceRef, both fields (dataSource and dataSourceRef) will be set to the same value automatically if one of them is empty and the other is non-empty. When namespace is specified in dataSourceRef, dataSource isn't set to the same value and must be empty. There are three important differences between dataSource and dataSourceRef: * While dataSource only allows two specific types of objects, dataSourceRef   allows any non-core object, as well as PersistentVolumeClaim objects. * While dataSource ignores disallowed values (dropping them), dataSourceRef   preserves all values, and generates an error if a disallowed value is   specified. * While dataSource only allows local objects, dataSourceRef allows objects   in any namespaces. (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled. (Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled. false resources object            resources represents the minimum resources the volume should have. If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements that are lower than previous value but must still be higher than capacity recorded in the status field of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources false selector object            selector is a label query over volumes to consider for binding. false storageClassName string            storageClassName is the name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1 false volumeAttributesClassName string            volumeAttributesClassName may be used to set the VolumeAttributesClass used by this claim. If specified, the CSI driver will create or update the volume with the attributes defined in the corresponding VolumeAttributesClass. This has a different purpose than storageClassName, it can be changed after the claim is created. An empty string value means that no VolumeAttributesClass will be applied to the claim but it's not allowed to reset this field to empty string once it is set. If unspecified and the PersistentVolumeClaim is unbound, the default VolumeAttributesClass will be set by the persistentvolume controller if it exists. If the resource referred to by volumeAttributesClass does not exist, this PersistentVolumeClaim will be set to a Pending state, as reflected by the modifyVolumeStatus field, until such as a resource exists. More info: https://kubernetes.io/docs/concepts/storage/volume-attributes-classes/ (Alpha) Using this field requires the VolumeAttributesClass feature gate to be enabled. false volumeMode string            volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec. false volumeName string            volumeName is the binding reference to the PersistentVolume backing this claim. false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecpersistencepersistentvolumeclaimspecdatasource","title":"Cluster.spec.persistence.persistentVolumeClaim.spec.dataSource","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>dataSource field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. When the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef, and dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified. If the namespace is specified, then dataSourceRef will not be copied to dataSource.</p> Name Type Description Required kind string            Kind is the type of resource being referenced true name string            Name is the name of resource being referenced true apiGroup string            APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required. false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecpersistencepersistentvolumeclaimspecdatasourceref","title":"Cluster.spec.persistence.persistentVolumeClaim.spec.dataSourceRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>dataSourceRef specifies the object from which to populate the volume with data, if a non-empty volume is desired. This may be any object from a non-empty API group (non core object) or a PersistentVolumeClaim object. When this field is specified, volume binding will only succeed if the type of the specified object matches some installed volume populator or dynamic provisioner. This field will replace the functionality of the dataSource field and as such if both fields are non-empty, they must have the same value. For backwards compatibility, when namespace isn't specified in dataSourceRef, both fields (dataSource and dataSourceRef) will be set to the same value automatically if one of them is empty and the other is non-empty. When namespace is specified in dataSourceRef, dataSource isn't set to the same value and must be empty. There are three important differences between dataSource and dataSourceRef: * While dataSource only allows two specific types of objects, dataSourceRef   allows any non-core object, as well as PersistentVolumeClaim objects. * While dataSource ignores disallowed values (dropping them), dataSourceRef   preserves all values, and generates an error if a disallowed value is   specified. * While dataSource only allows local objects, dataSourceRef allows objects   in any namespaces. (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled. (Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled.</p> Name Type Description Required kind string            Kind is the type of resource being referenced true name string            Name is the name of resource being referenced true apiGroup string            APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required. false namespace string            Namespace is the namespace of resource being referenced Note that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details. (Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled. false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecpersistencepersistentvolumeclaimspecresources","title":"Cluster.spec.persistence.persistentVolumeClaim.spec.resources","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>resources represents the minimum resources the volume should have. If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements that are lower than previous value but must still be higher than capacity recorded in the status field of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources</p> Name Type Description Required limits map[string]int or string            Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/ false requests map[string]int or string            Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/ false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecpersistencepersistentvolumeclaimspecselector","title":"Cluster.spec.persistence.persistentVolumeClaim.spec.selector","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>selector is a label query over volumes to consider for binding.</p> Name Type Description Required matchExpressions []object            matchExpressions is a list of label selector requirements. The requirements are ANDed. false matchLabels map[string]string            matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed. false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecpersistencepersistentvolumeclaimspecselectormatchexpressionsindex","title":"Cluster.spec.persistence.persistentVolumeClaim.spec.selector.matchExpressions[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.</p> Name Type Description Required key string            key is the label key that the selector applies to. true operator string            operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist. true values []string            values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch. false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecpersistencepersistentvolumeclaimstatus","title":"Cluster.spec.persistence.persistentVolumeClaim.status","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>status represents the current information/status of a persistent volume claim. Read-only. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims</p> Name Type Description Required accessModes []string            accessModes contains the actual access modes the volume backing the PVC has. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1 false allocatedResourceStatuses map[string]string            allocatedResourceStatuses stores status of resource being resized for the given PVC. Key names follow standard Kubernetes label syntax. Valid values are either:     * Un-prefixed keys:         - storage - the capacity of the volume.     * Custom resources must use implementation-defined prefixed names such as \"example.com/my-custom-resource\" Apart from above values - keys that are unprefixed or have kubernetes.io prefix are considered reserved and hence may not be used.   ClaimResourceStatus can be in any of following states:     - ControllerResizeInProgress:         State set when resize controller starts resizing the volume in control-plane.     - ControllerResizeFailed:         State set when resize has failed in resize controller with a terminal error.     - NodeResizePending:         State set when resize controller has finished resizing the volume but further resizing of         volume is needed on the node.     - NodeResizeInProgress:         State set when kubelet starts resizing the volume.     - NodeResizeFailed:         State set when resizing has failed in kubelet with a terminal error. Transient errors don't set         NodeResizeFailed. For example: if expanding a PVC for more capacity - this field can be one of the following states:     - pvc.status.allocatedResourceStatus['storage'] = \"ControllerResizeInProgress\"      - pvc.status.allocatedResourceStatus['storage'] = \"ControllerResizeFailed\"      - pvc.status.allocatedResourceStatus['storage'] = \"NodeResizePending\"      - pvc.status.allocatedResourceStatus['storage'] = \"NodeResizeInProgress\"      - pvc.status.allocatedResourceStatus['storage'] = \"NodeResizeFailed\" When this field is not set, it means that no resize operation is in progress for the given PVC.   A controller that receives PVC update with previously unknown resourceName or ClaimResourceStatus should ignore the update for the purpose it was designed. For example - a controller that only is responsible for resizing capacity of the volume, should ignore PVC updates that change other valid resources associated with PVC.   This is an alpha field and requires enabling RecoverVolumeExpansionFailure feature. false allocatedResources map[string]int or string            allocatedResources tracks the resources allocated to a PVC including its capacity. Key names follow standard Kubernetes label syntax. Valid values are either:     * Un-prefixed keys:         - storage - the capacity of the volume.     * Custom resources must use implementation-defined prefixed names such as \"example.com/my-custom-resource\" Apart from above values - keys that are unprefixed or have kubernetes.io prefix are considered reserved and hence may not be used.   Capacity reported here may be larger than the actual capacity when a volume expansion operation is requested. For storage quota, the larger value from allocatedResources and PVC.spec.resources is used. If allocatedResources is not set, PVC.spec.resources alone is used for quota calculation. If a volume expansion capacity request is lowered, allocatedResources is only lowered if there are no expansion operations in progress and if the actual volume capacity is equal or lower than the requested capacity.   A controller that receives PVC update with previously unknown resourceName should ignore the update for the purpose it was designed. For example - a controller that only is responsible for resizing capacity of the volume, should ignore PVC updates that change other valid resources associated with PVC.   This is an alpha field and requires enabling RecoverVolumeExpansionFailure feature. false capacity map[string]int or string            capacity represents the actual resources of the underlying volume. false conditions []object            conditions is the current Condition of persistent volume claim. If underlying persistent volume is being resized then the Condition will be set to 'Resizing'. false currentVolumeAttributesClassName string            currentVolumeAttributesClassName is the current name of the VolumeAttributesClass the PVC is using. When unset, there is no VolumeAttributeClass applied to this PersistentVolumeClaim This is an alpha field and requires enabling VolumeAttributesClass feature. false modifyVolumeStatus object            ModifyVolumeStatus represents the status object of ControllerModifyVolume operation. When this is unset, there is no ModifyVolume operation being attempted. This is an alpha field and requires enabling VolumeAttributesClass feature. false phase string            phase represents the current phase of PersistentVolumeClaim. false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecpersistencepersistentvolumeclaimstatusconditionsindex","title":"Cluster.spec.persistence.persistentVolumeClaim.status.conditions[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>PersistentVolumeClaimCondition contains details about state of pvc</p> Name Type Description Required status string true type string            PersistentVolumeClaimConditionType is a valid value of PersistentVolumeClaimCondition.Type true lastProbeTime string            lastProbeTime is the time we probed the condition. Format: date-time false lastTransitionTime string            lastTransitionTime is the time the condition transitioned from one status to another. Format: date-time false message string            message is the human-readable message indicating details about last transition. false reason string            reason is a unique, this should be a short, machine understandable string that gives the reason for condition's last transition. If it reports \"Resizing\" that means the underlying persistent volume is being resized. false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecpersistencepersistentvolumeclaimstatusmodifyvolumestatus","title":"Cluster.spec.persistence.persistentVolumeClaim.status.modifyVolumeStatus","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>ModifyVolumeStatus represents the status object of ControllerModifyVolume operation. When this is unset, there is no ModifyVolume operation being attempted. This is an alpha field and requires enabling VolumeAttributesClass feature.</p> Name Type Description Required status string            status is the status of the ControllerModifyVolume operation. It can be in any of following states:  - Pending    Pending indicates that the PersistentVolumeClaim cannot be modified due to unmet requirements, such as    the specified VolumeAttributesClass not existing.  - InProgress    InProgress indicates that the volume is being modified.  - Infeasible   Infeasible indicates that the request has been rejected as invalid by the CSI driver. To       resolve the error, a valid VolumeAttributesClass needs to be specified. Note: New statuses can be added in the future. Consumers should check for unknown statuses and fail appropriately. true targetVolumeAttributesClassName string            targetVolumeAttributesClassName is the name of the VolumeAttributesClass the PVC currently being reconciled false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecresources","title":"Cluster.spec.resources","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Resources describes the compute resource requirements for the control plane pods.</p> Name Type Description Required claims []object            Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container.   This is an alpha field and requires enabling the DynamicResourceAllocation feature gate.   This field is immutable. It can only be set for containers. false limits map[string]int or string            Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/ false requests map[string]int or string            Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/ false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecresourcesclaimsindex","title":"Cluster.spec.resources.claims[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>ResourceClaim references one entry in PodSpec.ResourceClaims.</p> Name Type Description Required name string            Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container. true"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspecservice","title":"Cluster.spec.service","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Service defines the service configuration.</p> Name Type Description Required type enum            Service Type string describes ingress methods for a service Enum: ClusterIP, NodePort, LoadBalancer Default: ClusterIP true annotations map[string]string            Annotations defines extra annotations to be added to the service. false apiPort integer            APIPort defines the kubernetes API port. If empty k0smotron will pick it automatically. Default: 30443 false konnectivityPort integer            KonnectivityPort defines the konnectivity port. If empty k0smotron will pick it automatically. Default: 30132 false labels map[string]string            Labels defines extra labels to be added to the service. false loadBalancerClass string            LoadBalancerClass defines the load balancer class to be used for the service. Used only when service type is LoadBalancer. false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspectopologyspreadconstraintsindex","title":"Cluster.spec.topologySpreadConstraints[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>TopologySpreadConstraint specifies how to spread matching pods among the given topology.</p> Name Type Description Required maxSkew integer            MaxSkew describes the degree to which pods may be unevenly distributed. When `whenUnsatisfiable=DoNotSchedule`, it is the maximum permitted difference between the number of matching pods in the target topology and the global minimum. The global minimum is the minimum number of matching pods in an eligible domain or zero if the number of eligible domains is less than MinDomains. For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same labelSelector spread as 2/2/1: In this case, the global minimum is 1. | zone1 | zone2 | zone3 | |  P P  |  P P  |   P   | - if MaxSkew is 1, incoming pod can only be scheduled to zone3 to become 2/2/2; scheduling it onto zone1(zone2) would make the ActualSkew(3-1) on zone1(zone2) violate MaxSkew(1). - if MaxSkew is 2, incoming pod can be scheduled onto any zone. When `whenUnsatisfiable=ScheduleAnyway`, it is used to give higher precedence to topologies that satisfy it. It's a required field. Default value is 1 and 0 is not allowed. Format: int32 true topologyKey string            TopologyKey is the key of node labels. Nodes that have a label with this key and identical values are considered to be in the same topology. We consider each  as a \"bucket\", and try to put balanced number of pods into each bucket. We define a domain as a particular instance of a topology. Also, we define an eligible domain as a domain whose nodes meet the requirements of nodeAffinityPolicy and nodeTaintsPolicy. e.g. If TopologyKey is \"kubernetes.io/hostname\", each Node is a domain of that topology. And, if TopologyKey is \"topology.kubernetes.io/zone\", each zone is a domain of that topology. It's a required field. true whenUnsatisfiable string            WhenUnsatisfiable indicates how to deal with a pod if it doesn't satisfy the spread constraint. - DoNotSchedule (default) tells the scheduler not to schedule it. - ScheduleAnyway tells the scheduler to schedule the pod in any location,   but giving higher precedence to topologies that would help reduce the   skew. A constraint is considered \"Unsatisfiable\" for an incoming pod if and only if every possible node assignment for that pod would violate \"MaxSkew\" on some topology. For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same labelSelector spread as 3/1/1: | zone1 | zone2 | zone3 | | P P P |   P   |   P   | If WhenUnsatisfiable is set to DoNotSchedule, incoming pod can only be scheduled to zone2(zone3) to become 3/2/1(3/1/2) as ActualSkew(2-1) on zone2(zone3) satisfies MaxSkew(1). In other words, the cluster can still be imbalanced, but scheduler won't make it *more* imbalanced. It's a required field. true labelSelector object            LabelSelector is used to find matching pods. Pods that match this label selector are counted to determine the number of pods in their corresponding topology domain. false matchLabelKeys []string            MatchLabelKeys is a set of pod label keys to select the pods over which spreading will be calculated. The keys are used to lookup values from the incoming pod labels, those key-value labels are ANDed with labelSelector to select the group of existing pods over which spreading will be calculated for the incoming pod. The same key is forbidden to exist in both MatchLabelKeys and LabelSelector. MatchLabelKeys cannot be set when LabelSelector isn't set. Keys that don't exist in the incoming pod labels will be ignored. A null or empty list means only match against labelSelector.   This is a beta field and requires the MatchLabelKeysInPodTopologySpread feature gate to be enabled (enabled by default). false minDomains integer            MinDomains indicates a minimum number of eligible domains. When the number of eligible domains with matching topology keys is less than minDomains, Pod Topology Spread treats \"global minimum\" as 0, and then the calculation of Skew is performed. And when the number of eligible domains with matching topology keys equals or greater than minDomains, this value has no effect on scheduling. As a result, when the number of eligible domains is less than minDomains, scheduler won't schedule more than maxSkew Pods to those domains. If value is nil, the constraint behaves as if MinDomains is equal to 1. Valid values are integers greater than 0. When value is not nil, WhenUnsatisfiable must be DoNotSchedule.   For example, in a 3-zone cluster, MaxSkew is set to 2, MinDomains is set to 5 and pods with the same labelSelector spread as 2/2/2: | zone1 | zone2 | zone3 | |  P P  |  P P  |  P P  | The number of domains is less than 5(MinDomains), so \"global minimum\" is treated as 0. In this situation, new pod with the same labelSelector cannot be scheduled, because computed skew will be 3(3 - 0) if new Pod is scheduled to any of the three zones, it will violate MaxSkew. Format: int32 false nodeAffinityPolicy string            NodeAffinityPolicy indicates how we will treat Pod's nodeAffinity/nodeSelector when calculating pod topology spread skew. Options are: - Honor: only nodes matching nodeAffinity/nodeSelector are included in the calculations. - Ignore: nodeAffinity/nodeSelector are ignored. All nodes are included in the calculations.   If this value is nil, the behavior is equivalent to the Honor policy. This is a beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread feature flag. false nodeTaintsPolicy string            NodeTaintsPolicy indicates how we will treat node taints when calculating pod topology spread skew. Options are: - Honor: nodes without taints, along with tainted nodes for which the incoming pod has a toleration, are included. - Ignore: node taints are ignored. All nodes are included.   If this value is nil, the behavior is equivalent to the Ignore policy. This is a beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread feature flag. false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspectopologyspreadconstraintsindexlabelselector","title":"Cluster.spec.topologySpreadConstraints[index].labelSelector","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>LabelSelector is used to find matching pods. Pods that match this label selector are counted to determine the number of pods in their corresponding topology domain.</p> Name Type Description Required matchExpressions []object            matchExpressions is a list of label selector requirements. The requirements are ANDed. false matchLabels map[string]string            matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed. false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterspectopologyspreadconstraintsindexlabelselectormatchexpressionsindex","title":"Cluster.spec.topologySpreadConstraints[index].labelSelector.matchExpressions[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.</p> Name Type Description Required key string            key is the label key that the selector applies to. true operator string            operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist. true values []string            values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch. false"},{"location":"resource-reference/k0smotron.io-v1beta1/#clusterstatus","title":"Cluster.status","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>ClusterStatus defines the observed state of K0smotronCluster</p> Name Type Description Required reconciliationStatus string true ready boolean false replicas integer Format: int32 false selector string            selector is the label selector for pods that should match the replicas count. false"},{"location":"resource-reference/k0smotron.io-v1beta1/#jointokenrequest","title":"JoinTokenRequest","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>JoinTokenRequest is the Schema for the join token request API</p> Name Type Description Required apiVersion string k0smotron.io/v1beta1 true kind string JoinTokenRequest true metadata object Refer to the Kubernetes API documentation for the fields of the `metadata` field. true spec object            JoinTokenRequestSpec defines the desired state of K0smotronJoinTokenRequest false status object            JoinTokenRequestStatus defines the observed state of K0smotronJoinTokenRequest false"},{"location":"resource-reference/k0smotron.io-v1beta1/#jointokenrequestspec","title":"JoinTokenRequest.spec","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>JoinTokenRequestSpec defines the desired state of K0smotronJoinTokenRequest</p> Name Type Description Required clusterRef object            ClusterRef is the reference to the cluster for which the join token is requested. true expiry string            Expiration time of the token. Format 1.5h, 2h45m or 300ms. Default: 0s false role enum            Role of the node for which the token is requested (worker or controller). Enum: worker, controller Default: worker false"},{"location":"resource-reference/k0smotron.io-v1beta1/#jointokenrequestspecclusterref","title":"JoinTokenRequest.spec.clusterRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>ClusterRef is the reference to the cluster for which the join token is requested.</p> Name Type Description Required name string            Name of the cluster. true namespace string            Namespace of the cluster. true"},{"location":"resource-reference/k0smotron.io-v1beta1/#jointokenrequeststatus","title":"JoinTokenRequest.status","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>JoinTokenRequestStatus defines the observed state of K0smotronJoinTokenRequest</p> Name Type Description Required reconciliationStatus string true clusterUID string            UID is a type that holds unique ID values, including UUIDs.  Because we don't ONLY use UUIDs, this is an alias to string.  Being a type captures intent and helps make sure that UIDs and names do not get conflated. false tokenID string false"},{"location":"update/update-capi-cluster/","title":"Update control nodes in Cluster API clusters","text":"<p>k0smotron supports two ways to update the control plane in the Cluster API clusters:</p> <ul> <li>Using the k0s autopilot</li> <li>Using the Cluster API workflow</li> </ul>"},{"location":"update/update-capi-cluster/#updating-the-control-plane-using-k0s-autopilot","title":"Updating the control plane using k0s autopilot","text":"<p>In case <code>K0sContolPlane</code> is created with <code>spec.updateStrategy=InPlace</code>, k0smotron uses k0s autopilot to seamlessly update the k0s version on the control plane in-place.</p> <p>k0smotron does not recycle new machines for the new nodes to make the control plane upgrade process faster by avoiding the need to spin up and configure the new machine, and safer by keeping any data on the machine safe. This differs from the usual Cluster API workflow, where deploying the new control plane is followed by decommissioning of the old one.</p> <ol> <li> <p>Check the configuration of deployed k0smotron cluster in your repository. For example:</p> <pre><code>apiVersion: cluster.x-k8s.io/v1beta1\nkind: Cluster\nmetadata:\n  name: docker-test\n  namespace: default\nspec:\n  clusterNetwork:\n    pods:\n      cidrBlocks:\n      - 192.168.0.0/16\n    serviceDomain: cluster.local\n    services:\n      cidrBlocks:\n      - 10.128.0.0/12\n  controlPlaneRef:\n    apiVersion: controlplane.cluster.x-k8s.io/v1beta1\n    kind: K0sControlPlane\n    name: docker-test-cp\n  infrastructureRef:\n    apiVersion: infrastructure.cluster.x-k8s.io/v1beta1\n    kind: DockerCluster\n    name: docker-test\n---\napiVersion: infrastructure.cluster.x-k8s.io/v1beta1\nkind: DockerCluster\nmetadata:\n  name: docker-test\n  namespace: default\nspec:\n---\napiVersion: controlplane.cluster.x-k8s.io/v1beta1\nkind: K0sControlPlane\nmetadata:\n  name: docker-test-cp\nspec:\n  replicas: 3\n  version: v1.31.2+k0s.0\n  updateStrategy: InPlace\n  k0sConfigSpec:\n    args:\n      - --enable-worker\n    k0s:\n      apiVersion: k0s.k0sproject.io/v1beta1\n      kind: ClusterConfig\n      metadata:\n        name: k0s\n      spec:\n        api:\n          extraArgs:\n            anonymous-auth: \"true\" # anonymous-auth=true is needed for k0s to allow unauthorized health-checks on /healthz\n        telemetry:\n          enabled: true\n  machineTemplate:\n    infrastructureRef:\n      apiVersion: infrastructure.cluster.x-k8s.io/v1beta1\n      kind: DockerMachineTemplate\n      name: docker-test-cp-template\n      namespace: default\n---\napiVersion: infrastructure.cluster.x-k8s.io/v1beta1\nkind: DockerMachineTemplate\nmetadata:\n  name: docker-test-cp-template\n  namespace: default\nspec:\n  template:\n    spec:\n      customImage: kindest/node:v1.31.0\n</code></pre> </li> <li> <p>Change the k0s version to the target one. For example:</p> <pre><code>apiVersion: controlplane.cluster.x-k8s.io/v1beta1\nkind: K0sControlPlane\nmetadata:\n  name: docker-test-cp\nspec:\n  replicas: 3\n  version: v1.31.3+k0s.0 # updated version\n  updateStrategy: InPlace\n  k0sConfigSpec:\n   args:\n     - --enable-worker\n   k0s:\n     apiVersion: k0s.k0sproject.io/v1beta1\n     kind: ClusterConfig\n     metadata:\n       name: k0s\n     spec:\n       api:\n         extraArgs:\n           anonymous-auth: \"true\" # anonymous-auth=true is needed for k0s to allow unauthorized health-checks on /healthz\n       telemetry:\n         enabled: true\n  machineTemplate:\n    infrastructureRef:\n      apiVersion: infrastructure.cluster.x-k8s.io/v1beta1\n      kind: DockerMachineTemplate\n      name: docker-test-cp-template\n      namespace: default\n</code></pre> </li> <li> <p>Update the resources:</p> <pre><code>kubectl apply -f ./path-to-file.yaml\n</code></pre> </li> </ol>"},{"location":"update/update-capi-cluster/#updating-the-control-plane-using-the-cluster-api-workflow","title":"Updating the control plane using the Cluster API workflow","text":"<p>In case <code>K0sControlPlane</code> is created with <code>spec.updateStrategy=Recreate</code>, k0smotron uses the Cluster API workflow to update the control plane, which involves creating a new machines for control plane and decommissioning the old ones.</p> <p>Warning</p> <p>The <code>Recreate</code> update strategy is not supported for k0s clusters running in <code>--single</code> mode.</p> <p>For the example below, k0smotron will create 3 new machines for the control plane, ensure that the new control plane nodes are online, and then remove the old machines.</p> <ol> <li> <p>Check the configuration of deployed k0smotron cluster in your repository. For example:</p> <pre><code>apiVersion: cluster.x-k8s.io/v1beta1\nkind: Cluster\nmetadata:\n  name: docker-test\n  namespace: default\nspec:\n  clusterNetwork:\n    pods:\n      cidrBlocks:\n      - 192.168.0.0/16\n    serviceDomain: cluster.local\n    services:\n      cidrBlocks:\n      - 10.128.0.0/12\n  controlPlaneRef:\n    apiVersion: controlplane.cluster.x-k8s.io/v1beta1\n    kind: K0sControlPlane\n    name: docker-test-cp\n  infrastructureRef:\n    apiVersion: infrastructure.cluster.x-k8s.io/v1beta1\n    kind: DockerCluster\n    name: docker-test\n---\napiVersion: infrastructure.cluster.x-k8s.io/v1beta1\nkind: DockerCluster\nmetadata:\n  name: docker-test\n  namespace: default\nspec:\n---\napiVersion: controlplane.cluster.x-k8s.io/v1beta1\nkind: K0sControlPlane\nmetadata:\n  name: docker-test-cp\nspec:\n  replicas: 3\n  version: v1.31.2+k0s.0\n  updateStrategy: Recreate\n  k0sConfigSpec:\n    args:\n      - --enable-worker\n    k0s:\n      apiVersion: k0s.k0sproject.io/v1beta1\n      kind: ClusterConfig\n      metadata:\n        name: k0s\n      spec:\n        api:\n          extraArgs:\n            anonymous-auth: \"true\" # anonymous-auth=true is needed for k0s to allow unauthorized health-checks on /healthz\n        telemetry:\n          enabled: true\n  machineTemplate:\n    infrastructureRef:\n      apiVersion: infrastructure.cluster.x-k8s.io/v1beta1\n      kind: DockerMachineTemplate\n      name: docker-test-cp-template\n      namespace: default\n---\napiVersion: infrastructure.cluster.x-k8s.io/v1beta1\nkind: DockerMachineTemplate\nmetadata:\n  name: docker-test-cp-template\n  namespace: default\nspec:\n  template:\n    spec:\n      customImage: kindest/node:v1.31.0\n</code></pre> </li> <li> <p>Change the k0s version to the target one. For example:</p> <pre><code>apiVersion: controlplane.cluster.x-k8s.io/v1beta1\nkind: K0sControlPlane\nmetadata:\n  name: docker-test-cp\nspec:\n  replicas: 3\n  version: v1.31.3+k0s.0 # updated version\n  updateStrategy: Recreate\n  k0sConfigSpec:\n   args:\n     - --enable-worker\n   k0s:\n     apiVersion: k0s.k0sproject.io/v1beta1\n     kind: ClusterConfig\n     metadata:\n       name: k0s\n     spec:\n       api:\n         extraArgs:\n           anonymous-auth: \"true\" # anonymous-auth=true is needed for k0s to allow unauthorized health-checks on /healthz\n       telemetry:\n         enabled: true\n  machineTemplate:\n    infrastructureRef:\n      apiVersion: infrastructure.cluster.x-k8s.io/v1beta1\n      kind: DockerMachineTemplate\n      name: docker-test-cp-template\n      namespace: default\n</code></pre> </li> <li> <p>Update the resources:</p> <pre><code>kubectl apply -f ./path-to-file.yaml\n</code></pre> </li> </ol>"},{"location":"update/update-capi-cluster/#known-issues","title":"Known issues","text":"<p>Due to the bug in the older k0s autopilot versions, the control plane upgrade may get stuck on the <code>Cordoning</code> stage if the control plane is running on the same node as the worker nodes. For example, <code>--enable-worker</code> flag was used during the control plane deployment. The bug is fixed in the latest patch versions of k0s.</p> <p>To fix this issue:</p> <ul> <li>Check the current node that is being updated from the <code>kubectl get plan autopilot -o yaml</code> output.</li> <li>Manually drain the node.</li> <li>In <code>Controlnode</code> object patch the corresponding <code>k0sproject.io/autopilot-signal-data</code> annotation:   change the <code>status</code> field in the JSON from <code>Cordoning</code> to <code>ApplyingUpdate</code>.</li> <li>Repeat the steps for all the nodes that are being updated.</li> </ul>"},{"location":"update/update-cluster-pod/","title":"Update hosted control plane in Cluster API integrated cluster","text":"<p>To update k0smotron cluster deployed with Cluster API, you need to update the k0s version and machine names in the YAML configuration file:</p> <ol> <li> <p>Localize the configuration of deployed k0smotron cluster in your repository. For example:</p> <p><pre><code>apiVersion: cluster.x-k8s.io/v1beta1\nkind: Cluster\nmetadata:\n  name: docker-test\n  namespace: default\nspec:\n  clusterNetwork:\n    pods:\n      cidrBlocks:\n      - 192.168.0.0/16\n    serviceDomain: cluster.local\n    services:\n      cidrBlocks:\n      - 10.128.0.0/12\n  controlPlaneRef:\n    apiVersion: controlplane.cluster.x-k8s.io/v1beta1\n    kind: K0smotronControlPlane\n    name: docker-test-cp\n  infrastructureRef:\n    apiVersion: infrastructure.cluster.x-k8s.io/v1beta1\n    kind: DockerCluster\n    name: docker-test\n---\napiVersion: controlplane.cluster.x-k8s.io/v1beta1\nkind: K0smotronControlPlane\nmetadata:\n  name: docker-test-cp\nspec:\n  version: v1.27.2-k0s.0\n</code></pre> 2. Make sure that the persistence is configured to prevent data loss. For example:</p> <pre><code> ---\n apiVersion: controlplane.cluster.x-k8s.io/v1beta1\n kind: K0smotronControlPlane\n metadata:\n   name: docker-test-cp\n spec:\n   version: v1.27.2-k0s.0\n   persistence:\n     type: hostPath\n     hostPath: \"/tmp/kmc-test\" # k0smotron will mount a basic hostPath volume to avoid data loss.\n</code></pre> <p>Using the <code>hostPath</code> volume type introduces many security risks.  Avoid configuring persistence for volumes of the <code>hostPath</code> type in production environments.  Learn more from official Kubernetes documentation: hostPath.</p> </li> <li> <p>Change all the k0s versions to the target one. For example:</p> <pre><code>apiVersion: controlplane.cluster.x-k8s.io/v1beta1\nkind: K0smotronControlPlane\nmetadata:\n  name: cp-test\nspec:\n  version: v1.28.7-k0s.0 # new k0s version\n</code></pre> </li> <li> <p>In the same configuration, replace the names of machines running the old k0smotron version with the new names to create machines for the target k0smotron version. For example:</p> <pre><code>---\napiVersion: cluster.x-k8s.io/v1beta1\nkind: Machine\nmetadata:\n  name:  docker-test-1 # new machine\n  namespace: default\nspec:\n  version: v1.28.7 # new version\n  clusterName: docker-test\n  bootstrap:\n    configRef:\n      apiVersion: bootstrap.cluster.x-k8s.io/v1beta1\n      kind: K0sWorkerConfig\n      name: docker-test-1 # new machine\n  infrastructureRef:\n    apiVersion: infrastructure.cluster.x-k8s.io/v1beta1\n    kind: DockerMachine\n    name: docker-test-1 # new machine\n---\napiVersion: bootstrap.cluster.x-k8s.io/v1beta1\nkind: K0sWorkerConfig\nmetadata:\n  name: docker-test-1 # new machine\n  namespace: default\nspec:\n  version: v1.28.7+k0s.0 # new version\n</code></pre> </li> <li> <p>Update the resources:</p> <pre><code>kubectl apply -f ./path-to-file.yaml\n</code></pre> </li> <li> <p>Remove the machines running the old k0smotron version:</p> <pre><code>kubectl delete machine docker-test-0\n</code></pre> </li> </ol> <p>The update procedure is completed, you now have the target version of k0smotron.</p>"},{"location":"update/update-standalone/","title":"Update hosted control plane in standalone mode","text":"<p>To update a standalone k0smotron cluster, you need to update the k0s version in the YAML configuration file:</p> <ol> <li> <p>Localize the configuration of deployed k0smotron cluster in your repository. For example:</p> <pre><code>apiVersion: k0smotron.io/v1beta1\nkind: Cluster\nmetadata:\n  name: k0smotron-test\nspec:\n  replicas: 1\n  k0sImage: k0sproject/k0s\n  version: v1.27.1-k0s.0\n</code></pre> </li> <li> <p>Change all the k0s versions to the target one. For example:</p> <pre><code>apiVersion: k0smotron.io/v1beta1\nkind: Cluster\nmetadata:\n  name: k0smotron-test\nspec:\n  replicas: 1\n  k0sImage: k0sproject/k0s\n  version: v1.28.7-k0s.0 # new k0s version\n</code></pre> </li> <li> <p>Update the resources:</p> <pre><code>kubectl apply -f ./path-to-file.yaml\n</code></pre> </li> </ol> <p>The update procedure is completed, you now have the target version of k0smotron.</p>"}]}