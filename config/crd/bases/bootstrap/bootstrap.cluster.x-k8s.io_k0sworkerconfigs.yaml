---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.5
  labels:
    cluster.x-k8s.io/provider: bootstrap-k0smotron
    cluster.x-k8s.io/v1beta1: v1beta1
  name: k0sworkerconfigs.bootstrap.cluster.x-k8s.io
spec:
  group: bootstrap.cluster.x-k8s.io
  names:
    kind: K0sWorkerConfig
    listKind: K0sWorkerConfigList
    plural: k0sworkerconfigs
    singular: k0sworkerconfig
  scope: Namespaced
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            properties:
              args:
                description: |-
                  Args specifies extra arguments to be passed to k0s worker.
                  See: https://docs.k0sproject.io/stable/worker-node-config/
                  See: https://docs.k0sproject.io/stable/cli/k0s_worker/
                items:
                  type: string
                type: array
              customUserDataRef:
                description: |-
                  CustomUserDataRef is a reference to a secret or a configmap that contains the custom user data.
                  Provided user-data will be merged with the one generated by k0smotron. Note that you may want to specify the merge type.
                  See: https://cloudinit.readthedocs.io/en/latest/reference/merging.html
                properties:
                  configMapRef:
                    description: ConfigMapRef is a reference to a configmap that contains
                      the content.
                    properties:
                      key:
                        description: Key is the key in the source that contains the
                          content
                        type: string
                      name:
                        description: Name is the name of the source
                        type: string
                    required:
                    - key
                    - name
                    type: object
                  secretRef:
                    description: SecretRef is a reference to a secret that contains
                      the content.
                    properties:
                      key:
                        description: Key is the key in the source that contains the
                          content
                        type: string
                      name:
                        description: Name is the name of the source
                        type: string
                    required:
                    - key
                    - name
                    type: object
                type: object
              downloadURL:
                description: |-
                  DownloadURL specifies the URL to download k0s binary from.
                  If specified the version field is ignored and what ever version is downloaded from the URL is used.
                type: string
              files:
                description: Files specifies extra files to be passed to user_data
                  upon creation.
                items:
                  description: File defines a file to be passed to user_data upon
                    creation.
                  properties:
                    content:
                      type: string
                    contentFrom:
                      description: ContentFrom specifies the source of the content.
                      properties:
                        configMapRef:
                          description: ConfigMapRef is a reference to a configmap
                            that contains the content.
                          properties:
                            key:
                              description: Key is the key in the source that contains
                                the content
                              type: string
                            name:
                              description: Name is the name of the source
                              type: string
                          required:
                          - key
                          - name
                          type: object
                        secretRef:
                          description: SecretRef is a reference to a secret that contains
                            the content.
                          properties:
                            key:
                              description: Key is the key in the source that contains
                                the content
                              type: string
                            name:
                              description: Name is the name of the source
                              type: string
                          required:
                          - key
                          - name
                          type: object
                      type: object
                    path:
                      type: string
                    permissions:
                      type: string
                  type: object
                type: array
              ignition:
                description: Ignition defines the ignition configuration. If empty,
                  k0smotron will use cloud-init.
                properties:
                  additionalConfig:
                    description: |-
                      AdditionalConfig is an unstructured object that contains additional config to be merged
                      with the generated one. The format follows Butane spec: https://coreos.github.io/butane/
                    type: string
                  variant:
                    description: |-
                      Variant declares which distribution variant the generated config is for.
                      Check the supported variants and versions here:
                      https://coreos.github.io/butane/specs/#butane-specifications-and-ignition-specifications
                    enum:
                    - fcos
                    - flatcar
                    - openshift
                    - r4e
                    - fiot
                    type: string
                  version:
                    description: |-
                      Version is the schema version of the Butane config to use
                      Check the supported variants and versions here:
                      https://coreos.github.io/butane/specs/#butane-specifications-and-ignition-specifications
                    type: string
                required:
                - variant
                - version
                type: object
              k0sInstallDir:
                default: /usr/local/bin
                description: |-
                  K0sInstallDir specifies the directory where k0s binary will be installed.
                  If empty, k0smotron will use /usr/local/bin, which is the default install path used by k0s get script.
                type: string
              postStartCommands:
                description: PostStartCommands specifies commands to be run after
                  starting k0s worker.
                items:
                  type: string
                type: array
              preInstalledK0s:
                description: PreInstallK0s specifies whether k0s binary is pre-installed
                  on the node.
                type: boolean
              preStartCommands:
                description: PreStartCommands specifies commands to be run before
                  starting k0s worker.
                items:
                  type: string
                type: array
              secretMetadata:
                description: SecretMetadata specifies metadata (labels and annotations)
                  to be propagated to the bootstrap Secret.
                properties:
                  annotations:
                    additionalProperties:
                      type: string
                    description: Annotations to be added to the bootstrap Secret
                    type: object
                  labels:
                    additionalProperties:
                      type: string
                    description: Labels to be added to the bootstrap Secret
                    type: object
                type: object
              useSystemHostname:
                default: false
                description: |-
                  UseSystemHostname specifies whether to use the system hostname for the kubernetes node name.
                  By default, k0smotron will use Machine name as a node name. If true, it will pick it from `hostname` command output.
                type: boolean
              version:
                description: |-
                  Version is the version of k0s to use. In case this is not set, k0smotron will use
                  a version field of the Machine object. If it's empty, the latest version is used.
                  Make sure the version is compatible with the k0s version running on the control plane.
                  For reference see the Kubernetes version skew policy: https://kubernetes.io/docs/setup/release/version-skew-policy/
                type: string
            type: object
          status:
            properties:
              conditions:
                description: Conditions defines current service state of the K0sWorkerConfig.
                items:
                  description: Condition defines an observation of a Cluster API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed. If that is not known, then using the time when
                        the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This field may be empty.
                      maxLength: 10240
                      minLength: 1
                      type: string
                    reason:
                      description: |-
                        reason is the reason for the condition's last transition in CamelCase.
                        The specific API may choose whether or not this field is considered a guaranteed API.
                        This field may be empty.
                      maxLength: 256
                      minLength: 1
                      type: string
                    severity:
                      description: |-
                        severity provides an explicit classification of Reason code, so the users or machines can immediately
                        understand the current situation and act accordingly.
                        The Severity field MUST be set only when Status=False.
                      maxLength: 32
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions
                        can be useful (see .node.status.conditions), the ability to deconflict is important.
                      maxLength: 256
                      minLength: 1
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              dataSecretName:
                description: DataSecretName is the name of the secret that stores
                  the bootstrap data script.
                type: string
              ready:
                description: Ready indicates the Bootstrapdata field is ready to be
                  consumed
                type: boolean
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
